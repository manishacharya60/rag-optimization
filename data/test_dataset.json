[
    {
        "id": "1",
        "source_code": "#include<iostream>\n\n#include <string.h>\n\n#include<string>\n\n#include <map> \n\n#include <utility> \n\n\n\n\n\nusing namespace std;\n\n\n\nint main()\n\n{\n\n\t/*long long h, a, attacks = 0;\n\n\tcin >> h >> a;\n\n\twhile (h > 0)\n\n\t{\n\n\tattacks++;\n\n\th -= a;\n\n\t}\n\n\tcout << attacks << endl;*/\n\n\t/*long long n;\n\n\tstring s;\n\n\tcin >> n;\n\n\tgetline(cin, s);\n\n\tgetline(cin, s);\n\n\tchar currentchar = s[0];\n\n\tint cnt = 1;\n\n\n\n\tfor (int i = 1; i < s.size(); i++)\n\n\t{\n\n\tif (s[i] != currentchar)\n\n\t{\n\n\tcurrentchar = s[i];\n\n\tcnt++;\n\n\t}\n\n\t}\n\n\n\n\tcout << cnt << endl;*/\n\n\n\n\t/*int a, b, c;\n\n\tcin >> a >> b >> c;\n\n\tif ((a == b && a != c) || (a == c && a!=b) || (b == c && b!=a))\n\n\tcout << \"Yes\" << endl;\n\n\telse\n\n\tcout << \"No\" << endl;*/\n\n\n\n\t/*string S;\n\n\tgetline(cin, S);\n\n\t//getline(cin, S);\n\n\tbool StingEnd = false;\n\n\n\n\twhile (true)\n\n\t{\n\n\tint i;\n\n\tif (S.empty())\n\n\tbreak;\n\n\tfor (i = 0; i < S.size()-1; i++)\n\n\t{\n\n\n\n\tif (S[i] == 'S' && S[i + 1] == 'T')\n\n\t{\n\n\tS.erase(i, 2);\n\n\tif (S.empty())\n\n\tbreak;\n\n\t//break;\n\n\t}\n\n\t}\n\n\tif (i == S.size()-1)\n\n\tbreak;\n\n\t}\n\n\tcout << S.size() << endl;*/\n\n\n\n\t/*int N, occurrence = 0;\n\n\tchar S[100];\n\n\tcin >> N;\n\n\tcin >> S;\n\n\tfor (int i = 0; i<N - 2; i++)\n\n\t{\n\n\t\tif (S[i] == 'A' && S[i + 1] == 'B' && S[i + 2] == 'C')\n\n\t\t\toccurrence++;\n\n\t}\n\n\tcout << occurrence << endl;*/\n\n\t\n\n\tint Bingo[3][3];\n\n\tbool Exist[3][3];\n\n\tmap <int, pair<int, int>> places;\n\n\tfor (int i=0;i<3;i++)\n\n\t{\n\n\t\tfor (int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>Bingo[i][j];\n\n\t\t\tExist[i][j] =false;\n\n\t\t\tpair<int, int> current;\n\n\t\t\tcurrent.first = i;\n\n\t\t\tcurrent.second = j;\n\n\t\t\tplaces[Bingo[i][j]] = current;\n\n\t\t\t\n\n\t\t\t//places.insert(pair<int, pair>(Bingo[i][j], current)); \n\n\t\t}\n\n\t}\n\n\tint N,B;\n\n\tcin>>N;\n\n\tfor (int i=0;i<N;i++)\n\n\t{\n\n\t\tcin >>B;\n\n\t\tmap<int, pair<int,int>>::iterator it = places.find(B);\n\n\t\tif ( it != places.end() ) \n\n\t\t\t// not found\n\n\t\t\t{\n\n\t\t\t\t//pair<int, int> place= places.find(B);\n\n\t\t\t\tExist[it->second.first][it->second.second] = true;\n\n\t\t\t}\n\n\t}\n\n\t\n\n\tbool IsBingo = false;\n\n\t\n\n\tif (Exist[0][0]&&Exist[0][1]&&Exist[0][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[1][0]&&Exist[1][1]&&Exist[1][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[2][0]&&Exist[2][1]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[0][0]&&Exist[1][0]&&Exist[2][0])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][1]&&Exist[1][1]&&Exist[2][1])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][2]&&Exist[1][2]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][0]&&Exist[1][1]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][2]&&Exist[1][1]&&Exist[2][0])\n\n\t\tIsBingo = true;\n\n\n\n\t\n\n\tif (IsBingo)\n\n\t\tcout<< \"Yes\"<<endl;\n\n\telse\n\n\t\tcout<<\"No\" <<endl;\n\n\t\n\n\n\n\t//system(\"pause\");\n\n\treturn 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\n\n\nint main(){\n\n\tint n[3][3];\n\n\tint bing[9];\n\n\tint ctr[3][3]={0};\n\n\tfor(int i=0; i<3; i++){\n\n\t\tfor(int j=0; j<3; j++){\n\n\t\t\tscanf(\"%d\", &n[i][j]);\n\n\t\t}\n\n\t}\n\n\tint tc;\n\n\tscanf(\"%d\", &tc);\n\n\tfor(int i; i<tc; i++){\n\n\t\tscanf(\"%d\", &bing[i]);\n\n\t\tif(bing[i] == n[0][0]){\n\n\t\t\tctr[0][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[0][1]){\n\n\t\t\tctr[0][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[0][2]){\n\n\t\t\tctr[0][2]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][0]){\n\n\t\t\tctr[1][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][1]){\n\n\t\t\tctr[1][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][2]){\n\n\t\t\tctr[1][2]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][0]){\n\n\t\t\tctr[2][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][1]){\n\n\t\t\tctr[2][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][2]){\n\n\t\t\tctr[2][2]++;\n\n\t\t}\n\n\t}\n\n\tif(ctr[0][0]>0 && ctr[0][1]>0 && ctr[0][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[1][0]>0 && ctr[1][1]>0 && ctr[1][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[2][0]>0 && ctr[2][1]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][0]>0 && ctr[1][0]>0 && ctr[2][0]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][1]>0 && ctr[1][1]>0 && ctr[2][1]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][2]>0 && ctr[1][2]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][0]>0 && ctr[1][1]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][2]>0 && ctr[1][1]>0 && ctr[2][0]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse{\n\n\t\tprintf(\"No\\n\");\n\n\t}\n\n\treturn 0;\n\n}"
    },
    {
        "id": "2",
        "source_code": "#include<iostream>\n\n#include<fstream>\n\n#include<cstdio>\n\n#include<algorithm>\n\n#include<cstring>\n\n#include<cmath>\n\n#include<vector>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint main()\n\n{\n\n    int a[50][50],b[50],c[50][50]={0},d[50]={0};\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        for(int j=0;j<3;j++)\n\n        cin>>a[i][j];\n\n    }\n\n    int n;\n\n    cin>>n;\n\n    for(int i=0;i<n;i++)\n\n    cin>>b[i];\n\n    for(int i=0;i<n;i++)\n\n    {\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            for(int k=0;k<3;k++)\n\n            {\n\n                if(b[i]==a[j][k])\n\n                {\n\n                    c[j][k]=1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    int sum1=0,sum2=0,sum3=0,sum4=0;\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        sum1=0;\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            if(c[i][j]==1)\n\n            {\n\n                sum1++;\n\n            }\n\n            if(sum1==3)\n\n            break;\n\n        }\n\n        if(sum1==3)\n\n        break;\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        sum2=0;\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            if(c[j][i]==1)\n\n            {\n\n                sum2++;\n\n            }\n\n            if(sum2==3)\n\n            break;\n\n        }\n\n        if(sum2==3)\n\n        break;\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        if(c[i][i]==1)\n\n        {\n\n            sum3++;\n\n        }\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        if(c[i][2-i]==1)\n\n        {\n\n            sum4++;\n\n        }\n\n    }\n\n    if(sum1==3||sum2==3||sum3==3||sum4==3)\n\n    cout<<\"Yes\";\n\n    else \n\n    cout<<\"No\";\n\n    return 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\n\n\nint main(){\n\n\tint n[3][3];\n\n\tint bing[9];\n\n\tint ctr[3][3]={0};\n\n\tfor(int i=0; i<3; i++){\n\n\t\tfor(int j=0; j<3; j++){\n\n\t\t\tscanf(\"%d\", &n[i][j]);\n\n\t\t}\n\n\t}\n\n\tint tc;\n\n\tscanf(\"%d\", &tc);\n\n\tfor(int i; i<tc; i++){\n\n\t\tscanf(\"%d\", &bing[i]);\n\n\t\tif(bing[i] == n[0][0]){\n\n\t\t\tctr[0][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[0][1]){\n\n\t\t\tctr[0][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[0][2]){\n\n\t\t\tctr[0][2]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][0]){\n\n\t\t\tctr[1][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][1]){\n\n\t\t\tctr[1][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][2]){\n\n\t\t\tctr[1][2]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][0]){\n\n\t\t\tctr[2][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][1]){\n\n\t\t\tctr[2][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][2]){\n\n\t\t\tctr[2][2]++;\n\n\t\t}\n\n\t}\n\n\tif(ctr[0][0]>0 && ctr[0][1]>0 && ctr[0][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[1][0]>0 && ctr[1][1]>0 && ctr[1][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[2][0]>0 && ctr[2][1]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][0]>0 && ctr[1][0]>0 && ctr[2][0]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][1]>0 && ctr[1][1]>0 && ctr[2][1]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][2]>0 && ctr[1][2]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][0]>0 && ctr[1][1]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][2]>0 && ctr[1][1]>0 && ctr[2][0]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse{\n\n\t\tprintf(\"No\\n\");\n\n\t}\n\n\treturn 0;\n\n}"
    },
    {
        "id": "3",
        "source_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n\n\nint a[5][5];\n\nbool vis[5][5];\n\n\n\nint main()\n\n{\n\n\tios::sync_with_stdio(false),cin.tie(0);\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tfor(int j=1;j<=3;j++){\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint n;cin>>n;\n\n\tint num;\n\n\tfor(int i=1;i<=n;i++){\n\n\t\tcin>>num;\n\n\t\tfor(int k=1;k<=3;k++){\n\n\t\t\tfor(int j=1;j<=3;j++){\n\n\t\t\t\tif(num==a[k][j])vis[k][j]=1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag=0;\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tif(vis[i][1]+vis[i][2]+vis[i][3]==3){\n\n\t\t\tflag=true;break;\n\n\t\t}\n\n\t}\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tif(flag)break;\n\n\t\tif(vis[1][i]+vis[2][i]+vis[3][i]==3){\n\n\t\t\tflag=true;break;\n\n\t\t}\n\n\t}\n\n\tif(!flag&&(vis[1][1]+vis[2][2]+vis[3][3]==3||vis[3][1]+vis[2][2]+vis[1][3]==3))flag=true;\n\n\tif(flag)cout<<\"Yes\"<<endl;\n\n\telse cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\n\n\nint main(){\n\n\tint n[3][3];\n\n\tint bing[9];\n\n\tint ctr[3][3]={0};\n\n\tfor(int i=0; i<3; i++){\n\n\t\tfor(int j=0; j<3; j++){\n\n\t\t\tscanf(\"%d\", &n[i][j]);\n\n\t\t}\n\n\t}\n\n\tint tc;\n\n\tscanf(\"%d\", &tc);\n\n\tfor(int i; i<tc; i++){\n\n\t\tscanf(\"%d\", &bing[i]);\n\n\t\tif(bing[i] == n[0][0]){\n\n\t\t\tctr[0][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[0][1]){\n\n\t\t\tctr[0][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[0][2]){\n\n\t\t\tctr[0][2]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][0]){\n\n\t\t\tctr[1][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][1]){\n\n\t\t\tctr[1][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[1][2]){\n\n\t\t\tctr[1][2]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][0]){\n\n\t\t\tctr[2][0]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][1]){\n\n\t\t\tctr[2][1]++;\n\n\t\t}\n\n\t\telse if(bing[i] == n[2][2]){\n\n\t\t\tctr[2][2]++;\n\n\t\t}\n\n\t}\n\n\tif(ctr[0][0]>0 && ctr[0][1]>0 && ctr[0][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[1][0]>0 && ctr[1][1]>0 && ctr[1][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[2][0]>0 && ctr[2][1]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][0]>0 && ctr[1][0]>0 && ctr[2][0]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][1]>0 && ctr[1][1]>0 && ctr[2][1]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][2]>0 && ctr[1][2]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][0]>0 && ctr[1][1]>0 && ctr[2][2]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse if(ctr[0][2]>0 && ctr[1][1]>0 && ctr[2][0]>0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse{\n\n\t\tprintf(\"No\\n\");\n\n\t}\n\n\treturn 0;\n\n}"
    },
    {
        "id": "8",
        "source_code": "#define _USE_MATH_DEFINES\n\n\n\n#include <iostream>\n\n#include <math.h> \n\n#include <vector>\n\n#include <algorithm>\n\n#include <iomanip>      // std::setprecision\n\n#include <map>\n\n#include <unordered_map>\n\n#include <string>\n\n#include <set>\n\n#include <unordered_set>\n\n#include <sstream>\n\n\n\nusing namespace std;\n\n\n\nint main()\n\n{\n\n\tint N;\n\n\tstd::set<int> nums;\n\n\tvector<vector<int>> card(3,std::vector<int>(3,0));\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tint input;\n\n\t\t\tstd::cin >> input;\n\n\t\t\tcard[i][j] = input;\n\n\t\t}\n\n\t}\n\n\n\n\tstd::cin >> N;\n\n\tfor (int k = 0; k < N; ++k)\n\n\t{\n\n\t\tint num;\n\n\t\tstd::cin >> num;\n\n\t\tnums.insert(num);\n\n\t}\n\n\t//check rows\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[i][j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t//check columns\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][i]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tcounter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][2-j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\tstd::cout << \"No\\n\";\n\n\n\n}\n",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main(){\n\n    int matrix[3][3];\n\n    char x;\n\n    for(int i=0;i<3;i++){\n\n        for(int j=0;j<3;j++){\n\n            scanf(\"%d\", &matrix[i][j]);\n\n        }\n\n    }\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    int input[n];\n\n    for(int k=0;k<n;k++){\n\n        scanf(\"%d\", &input[k]);\n\n        for(int i=0;i<3;i++){\n\n            for(int j=0;j<3;j++){\n\n                if(input[k] == matrix[i][j]){\n\n                    matrix[i][j] = x;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    int ctr[8] = {0};\n\n    int last=2;\n\n    for(int i=0;i<3;i++){\n\n        if(matrix[i][0]==x){\n\n            ++ctr[0];\n\n        }\n\n        if(matrix[i][2]==x){\n\n            ++ctr[1];\n\n        }\n\n        if(matrix[0][i]==x){\n\n            ++ctr[2];\n\n        }\n\n        if(matrix[2][i]==x){\n\n            ++ctr[3];\n\n        }\n\n        if(matrix[i][i]==x){\n\n            ++ctr[4];\n\n        } \n\n        if(matrix[i][last--]==x){\n\n            ++ctr[5];\n\n        }\n\n        if(matrix[1][i]==x){\n\n            ++ctr[6];\n\n        }\n\n        if(matrix[i][1]==x){\n\n            ++ctr[7];\n\n        }\n\n    }\n\n    int flag = 0;\n\n    for(int i=0;i<8;i++){\n\n        if(ctr[i]==3){\n\n            flag = 1;\n\n        }\n\n    }\n\n    printf(\"%s\\n\", (flag == 1) ? \"Yes\" : \"No\");\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "9",
        "source_code": "#include<iostream>\n\n#include <string.h>\n\n#include<string>\n\n#include <map> \n\n#include <utility> \n\n\n\n\n\nusing namespace std;\n\n\n\nint main()\n\n{\n\n\t/*long long h, a, attacks = 0;\n\n\tcin >> h >> a;\n\n\twhile (h > 0)\n\n\t{\n\n\tattacks++;\n\n\th -= a;\n\n\t}\n\n\tcout << attacks << endl;*/\n\n\t/*long long n;\n\n\tstring s;\n\n\tcin >> n;\n\n\tgetline(cin, s);\n\n\tgetline(cin, s);\n\n\tchar currentchar = s[0];\n\n\tint cnt = 1;\n\n\n\n\tfor (int i = 1; i < s.size(); i++)\n\n\t{\n\n\tif (s[i] != currentchar)\n\n\t{\n\n\tcurrentchar = s[i];\n\n\tcnt++;\n\n\t}\n\n\t}\n\n\n\n\tcout << cnt << endl;*/\n\n\n\n\t/*int a, b, c;\n\n\tcin >> a >> b >> c;\n\n\tif ((a == b && a != c) || (a == c && a!=b) || (b == c && b!=a))\n\n\tcout << \"Yes\" << endl;\n\n\telse\n\n\tcout << \"No\" << endl;*/\n\n\n\n\t/*string S;\n\n\tgetline(cin, S);\n\n\t//getline(cin, S);\n\n\tbool StingEnd = false;\n\n\n\n\twhile (true)\n\n\t{\n\n\tint i;\n\n\tif (S.empty())\n\n\tbreak;\n\n\tfor (i = 0; i < S.size()-1; i++)\n\n\t{\n\n\n\n\tif (S[i] == 'S' && S[i + 1] == 'T')\n\n\t{\n\n\tS.erase(i, 2);\n\n\tif (S.empty())\n\n\tbreak;\n\n\t//break;\n\n\t}\n\n\t}\n\n\tif (i == S.size()-1)\n\n\tbreak;\n\n\t}\n\n\tcout << S.size() << endl;*/\n\n\n\n\t/*int N, occurrence = 0;\n\n\tchar S[100];\n\n\tcin >> N;\n\n\tcin >> S;\n\n\tfor (int i = 0; i<N - 2; i++)\n\n\t{\n\n\t\tif (S[i] == 'A' && S[i + 1] == 'B' && S[i + 2] == 'C')\n\n\t\t\toccurrence++;\n\n\t}\n\n\tcout << occurrence << endl;*/\n\n\t\n\n\tint Bingo[3][3];\n\n\tbool Exist[3][3];\n\n\tmap <int, pair<int, int>> places;\n\n\tfor (int i=0;i<3;i++)\n\n\t{\n\n\t\tfor (int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>Bingo[i][j];\n\n\t\t\tExist[i][j] =false;\n\n\t\t\tpair<int, int> current;\n\n\t\t\tcurrent.first = i;\n\n\t\t\tcurrent.second = j;\n\n\t\t\tplaces[Bingo[i][j]] = current;\n\n\t\t\t\n\n\t\t\t//places.insert(pair<int, pair>(Bingo[i][j], current)); \n\n\t\t}\n\n\t}\n\n\tint N,B;\n\n\tcin>>N;\n\n\tfor (int i=0;i<N;i++)\n\n\t{\n\n\t\tcin >>B;\n\n\t\tmap<int, pair<int,int>>::iterator it = places.find(B);\n\n\t\tif ( it != places.end() ) \n\n\t\t\t// not found\n\n\t\t\t{\n\n\t\t\t\t//pair<int, int> place= places.find(B);\n\n\t\t\t\tExist[it->second.first][it->second.second] = true;\n\n\t\t\t}\n\n\t}\n\n\t\n\n\tbool IsBingo = false;\n\n\t\n\n\tif (Exist[0][0]&&Exist[0][1]&&Exist[0][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[1][0]&&Exist[1][1]&&Exist[1][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[2][0]&&Exist[2][1]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[0][0]&&Exist[1][0]&&Exist[2][0])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][1]&&Exist[1][1]&&Exist[2][1])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][2]&&Exist[1][2]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][0]&&Exist[1][1]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][2]&&Exist[1][1]&&Exist[2][0])\n\n\t\tIsBingo = true;\n\n\n\n\t\n\n\tif (IsBingo)\n\n\t\tcout<< \"Yes\"<<endl;\n\n\telse\n\n\t\tcout<<\"No\" <<endl;\n\n\t\n\n\n\n\t//system(\"pause\");\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main(){\n\n    int matrix[3][3];\n\n    char x;\n\n    for(int i=0;i<3;i++){\n\n        for(int j=0;j<3;j++){\n\n            scanf(\"%d\", &matrix[i][j]);\n\n        }\n\n    }\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    int input[n];\n\n    for(int k=0;k<n;k++){\n\n        scanf(\"%d\", &input[k]);\n\n        for(int i=0;i<3;i++){\n\n            for(int j=0;j<3;j++){\n\n                if(input[k] == matrix[i][j]){\n\n                    matrix[i][j] = x;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    int ctr[8] = {0};\n\n    int last=2;\n\n    for(int i=0;i<3;i++){\n\n        if(matrix[i][0]==x){\n\n            ++ctr[0];\n\n        }\n\n        if(matrix[i][2]==x){\n\n            ++ctr[1];\n\n        }\n\n        if(matrix[0][i]==x){\n\n            ++ctr[2];\n\n        }\n\n        if(matrix[2][i]==x){\n\n            ++ctr[3];\n\n        }\n\n        if(matrix[i][i]==x){\n\n            ++ctr[4];\n\n        } \n\n        if(matrix[i][last--]==x){\n\n            ++ctr[5];\n\n        }\n\n        if(matrix[1][i]==x){\n\n            ++ctr[6];\n\n        }\n\n        if(matrix[i][1]==x){\n\n            ++ctr[7];\n\n        }\n\n    }\n\n    int flag = 0;\n\n    for(int i=0;i<8;i++){\n\n        if(ctr[i]==3){\n\n            flag = 1;\n\n        }\n\n    }\n\n    printf(\"%s\\n\", (flag == 1) ? \"Yes\" : \"No\");\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "10",
        "source_code": "#include<iostream>\n\n#include<fstream>\n\n#include<cstdio>\n\n#include<algorithm>\n\n#include<cstring>\n\n#include<cmath>\n\n#include<vector>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint main()\n\n{\n\n    int a[50][50],b[50],c[50][50]={0},d[50]={0};\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        for(int j=0;j<3;j++)\n\n        cin>>a[i][j];\n\n    }\n\n    int n;\n\n    cin>>n;\n\n    for(int i=0;i<n;i++)\n\n    cin>>b[i];\n\n    for(int i=0;i<n;i++)\n\n    {\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            for(int k=0;k<3;k++)\n\n            {\n\n                if(b[i]==a[j][k])\n\n                {\n\n                    c[j][k]=1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    int sum1=0,sum2=0,sum3=0,sum4=0;\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        sum1=0;\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            if(c[i][j]==1)\n\n            {\n\n                sum1++;\n\n            }\n\n            if(sum1==3)\n\n            break;\n\n        }\n\n        if(sum1==3)\n\n        break;\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        sum2=0;\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            if(c[j][i]==1)\n\n            {\n\n                sum2++;\n\n            }\n\n            if(sum2==3)\n\n            break;\n\n        }\n\n        if(sum2==3)\n\n        break;\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        if(c[i][i]==1)\n\n        {\n\n            sum3++;\n\n        }\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        if(c[i][2-i]==1)\n\n        {\n\n            sum4++;\n\n        }\n\n    }\n\n    if(sum1==3||sum2==3||sum3==3||sum4==3)\n\n    cout<<\"Yes\";\n\n    else \n\n    cout<<\"No\";\n\n    return 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main(){\n\n    int matrix[3][3];\n\n    char x;\n\n    for(int i=0;i<3;i++){\n\n        for(int j=0;j<3;j++){\n\n            scanf(\"%d\", &matrix[i][j]);\n\n        }\n\n    }\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    int input[n];\n\n    for(int k=0;k<n;k++){\n\n        scanf(\"%d\", &input[k]);\n\n        for(int i=0;i<3;i++){\n\n            for(int j=0;j<3;j++){\n\n                if(input[k] == matrix[i][j]){\n\n                    matrix[i][j] = x;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    int ctr[8] = {0};\n\n    int last=2;\n\n    for(int i=0;i<3;i++){\n\n        if(matrix[i][0]==x){\n\n            ++ctr[0];\n\n        }\n\n        if(matrix[i][2]==x){\n\n            ++ctr[1];\n\n        }\n\n        if(matrix[0][i]==x){\n\n            ++ctr[2];\n\n        }\n\n        if(matrix[2][i]==x){\n\n            ++ctr[3];\n\n        }\n\n        if(matrix[i][i]==x){\n\n            ++ctr[4];\n\n        } \n\n        if(matrix[i][last--]==x){\n\n            ++ctr[5];\n\n        }\n\n        if(matrix[1][i]==x){\n\n            ++ctr[6];\n\n        }\n\n        if(matrix[i][1]==x){\n\n            ++ctr[7];\n\n        }\n\n    }\n\n    int flag = 0;\n\n    for(int i=0;i<8;i++){\n\n        if(ctr[i]==3){\n\n            flag = 1;\n\n        }\n\n    }\n\n    printf(\"%s\\n\", (flag == 1) ? \"Yes\" : \"No\");\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "11",
        "source_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n\n\nint a[5][5];\n\nbool vis[5][5];\n\n\n\nint main()\n\n{\n\n\tios::sync_with_stdio(false),cin.tie(0);\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tfor(int j=1;j<=3;j++){\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint n;cin>>n;\n\n\tint num;\n\n\tfor(int i=1;i<=n;i++){\n\n\t\tcin>>num;\n\n\t\tfor(int k=1;k<=3;k++){\n\n\t\t\tfor(int j=1;j<=3;j++){\n\n\t\t\t\tif(num==a[k][j])vis[k][j]=1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag=0;\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tif(vis[i][1]+vis[i][2]+vis[i][3]==3){\n\n\t\t\tflag=true;break;\n\n\t\t}\n\n\t}\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tif(flag)break;\n\n\t\tif(vis[1][i]+vis[2][i]+vis[3][i]==3){\n\n\t\t\tflag=true;break;\n\n\t\t}\n\n\t}\n\n\tif(!flag&&(vis[1][1]+vis[2][2]+vis[3][3]==3||vis[3][1]+vis[2][2]+vis[1][3]==3))flag=true;\n\n\tif(flag)cout<<\"Yes\"<<endl;\n\n\telse cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main(){\n\n    int matrix[3][3];\n\n    char x;\n\n    for(int i=0;i<3;i++){\n\n        for(int j=0;j<3;j++){\n\n            scanf(\"%d\", &matrix[i][j]);\n\n        }\n\n    }\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    int input[n];\n\n    for(int k=0;k<n;k++){\n\n        scanf(\"%d\", &input[k]);\n\n        for(int i=0;i<3;i++){\n\n            for(int j=0;j<3;j++){\n\n                if(input[k] == matrix[i][j]){\n\n                    matrix[i][j] = x;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    int ctr[8] = {0};\n\n    int last=2;\n\n    for(int i=0;i<3;i++){\n\n        if(matrix[i][0]==x){\n\n            ++ctr[0];\n\n        }\n\n        if(matrix[i][2]==x){\n\n            ++ctr[1];\n\n        }\n\n        if(matrix[0][i]==x){\n\n            ++ctr[2];\n\n        }\n\n        if(matrix[2][i]==x){\n\n            ++ctr[3];\n\n        }\n\n        if(matrix[i][i]==x){\n\n            ++ctr[4];\n\n        } \n\n        if(matrix[i][last--]==x){\n\n            ++ctr[5];\n\n        }\n\n        if(matrix[1][i]==x){\n\n            ++ctr[6];\n\n        }\n\n        if(matrix[i][1]==x){\n\n            ++ctr[7];\n\n        }\n\n    }\n\n    int flag = 0;\n\n    for(int i=0;i<8;i++){\n\n        if(ctr[i]==3){\n\n            flag = 1;\n\n        }\n\n    }\n\n    printf(\"%s\\n\", (flag == 1) ? \"Yes\" : \"No\");\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "12",
        "source_code": "#define _USE_MATH_DEFINES\n\n\n\n#include <iostream>\n\n#include <math.h> \n\n#include <vector>\n\n#include <algorithm>\n\n#include <iomanip>      // std::setprecision\n\n#include <map>\n\n#include <unordered_map>\n\n#include <string>\n\n#include <set>\n\n#include <unordered_set>\n\n#include <sstream>\n\n\n\nusing namespace std;\n\n\n\nint main()\n\n{\n\n\tint N;\n\n\tstd::set<int> nums;\n\n\tvector<vector<int>> card(3,std::vector<int>(3,0));\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tint input;\n\n\t\t\tstd::cin >> input;\n\n\t\t\tcard[i][j] = input;\n\n\t\t}\n\n\t}\n\n\n\n\tstd::cin >> N;\n\n\tfor (int k = 0; k < N; ++k)\n\n\t{\n\n\t\tint num;\n\n\t\tstd::cin >> num;\n\n\t\tnums.insert(num);\n\n\t}\n\n\t//check rows\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[i][j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t//check columns\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][i]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tcounter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][2-j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\tstd::cout << \"No\\n\";\n\n\n\n}\n",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n    int bingos[3][3] = {0};\n\n    bool bingos_mark[3][3] = {false};\n\n    int ninp;\n\n    for (int i = 0; i < 3; i++) {\n\n        for (int j = 0; j < 3; j++) {\n\n            scanf(\"%d\", &bingos[i][j]);\n\n        }\n\n    }\n\n    scanf(\"%d\", &ninp);\n\n    for (int i = 0; i < ninp; i++) {\n\n        int te;\n\n        scanf(\"%d\", &te);\n\n        for (int i = 0; i < 3; i++) {\n\n            for (int j = 0; j < 3; j++) {\n\n                if (te == bingos[i][j]) {\n\n                    bingos_mark[i][j] = true;\n\n                }\n\n            }\n\n        }\n\n    }\n\n\n\n    if (bingos_mark[0][0] && bingos_mark[1][1] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][2] && bingos_mark[1][1] && bingos_mark[2][0]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][0] && bingos_mark[0][1] && bingos_mark[0][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[1][0] && bingos_mark[1][1] && bingos_mark[1][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[2][0] && bingos_mark[2][1] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][0] && bingos_mark[1][0] && bingos_mark[2][0]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][1] && bingos_mark[1][1] && bingos_mark[2][1]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][2] && bingos_mark[1][2] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else {\n\n        printf(\"No\");\n\n    }\n\n}"
    },
    {
        "id": "13",
        "source_code": "#include<iostream>\n\n#include <string.h>\n\n#include<string>\n\n#include <map> \n\n#include <utility> \n\n\n\n\n\nusing namespace std;\n\n\n\nint main()\n\n{\n\n\t/*long long h, a, attacks = 0;\n\n\tcin >> h >> a;\n\n\twhile (h > 0)\n\n\t{\n\n\tattacks++;\n\n\th -= a;\n\n\t}\n\n\tcout << attacks << endl;*/\n\n\t/*long long n;\n\n\tstring s;\n\n\tcin >> n;\n\n\tgetline(cin, s);\n\n\tgetline(cin, s);\n\n\tchar currentchar = s[0];\n\n\tint cnt = 1;\n\n\n\n\tfor (int i = 1; i < s.size(); i++)\n\n\t{\n\n\tif (s[i] != currentchar)\n\n\t{\n\n\tcurrentchar = s[i];\n\n\tcnt++;\n\n\t}\n\n\t}\n\n\n\n\tcout << cnt << endl;*/\n\n\n\n\t/*int a, b, c;\n\n\tcin >> a >> b >> c;\n\n\tif ((a == b && a != c) || (a == c && a!=b) || (b == c && b!=a))\n\n\tcout << \"Yes\" << endl;\n\n\telse\n\n\tcout << \"No\" << endl;*/\n\n\n\n\t/*string S;\n\n\tgetline(cin, S);\n\n\t//getline(cin, S);\n\n\tbool StingEnd = false;\n\n\n\n\twhile (true)\n\n\t{\n\n\tint i;\n\n\tif (S.empty())\n\n\tbreak;\n\n\tfor (i = 0; i < S.size()-1; i++)\n\n\t{\n\n\n\n\tif (S[i] == 'S' && S[i + 1] == 'T')\n\n\t{\n\n\tS.erase(i, 2);\n\n\tif (S.empty())\n\n\tbreak;\n\n\t//break;\n\n\t}\n\n\t}\n\n\tif (i == S.size()-1)\n\n\tbreak;\n\n\t}\n\n\tcout << S.size() << endl;*/\n\n\n\n\t/*int N, occurrence = 0;\n\n\tchar S[100];\n\n\tcin >> N;\n\n\tcin >> S;\n\n\tfor (int i = 0; i<N - 2; i++)\n\n\t{\n\n\t\tif (S[i] == 'A' && S[i + 1] == 'B' && S[i + 2] == 'C')\n\n\t\t\toccurrence++;\n\n\t}\n\n\tcout << occurrence << endl;*/\n\n\t\n\n\tint Bingo[3][3];\n\n\tbool Exist[3][3];\n\n\tmap <int, pair<int, int>> places;\n\n\tfor (int i=0;i<3;i++)\n\n\t{\n\n\t\tfor (int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>Bingo[i][j];\n\n\t\t\tExist[i][j] =false;\n\n\t\t\tpair<int, int> current;\n\n\t\t\tcurrent.first = i;\n\n\t\t\tcurrent.second = j;\n\n\t\t\tplaces[Bingo[i][j]] = current;\n\n\t\t\t\n\n\t\t\t//places.insert(pair<int, pair>(Bingo[i][j], current)); \n\n\t\t}\n\n\t}\n\n\tint N,B;\n\n\tcin>>N;\n\n\tfor (int i=0;i<N;i++)\n\n\t{\n\n\t\tcin >>B;\n\n\t\tmap<int, pair<int,int>>::iterator it = places.find(B);\n\n\t\tif ( it != places.end() ) \n\n\t\t\t// not found\n\n\t\t\t{\n\n\t\t\t\t//pair<int, int> place= places.find(B);\n\n\t\t\t\tExist[it->second.first][it->second.second] = true;\n\n\t\t\t}\n\n\t}\n\n\t\n\n\tbool IsBingo = false;\n\n\t\n\n\tif (Exist[0][0]&&Exist[0][1]&&Exist[0][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[1][0]&&Exist[1][1]&&Exist[1][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[2][0]&&Exist[2][1]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[0][0]&&Exist[1][0]&&Exist[2][0])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][1]&&Exist[1][1]&&Exist[2][1])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][2]&&Exist[1][2]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][0]&&Exist[1][1]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][2]&&Exist[1][1]&&Exist[2][0])\n\n\t\tIsBingo = true;\n\n\n\n\t\n\n\tif (IsBingo)\n\n\t\tcout<< \"Yes\"<<endl;\n\n\telse\n\n\t\tcout<<\"No\" <<endl;\n\n\t\n\n\n\n\t//system(\"pause\");\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n    int bingos[3][3] = {0};\n\n    bool bingos_mark[3][3] = {false};\n\n    int ninp;\n\n    for (int i = 0; i < 3; i++) {\n\n        for (int j = 0; j < 3; j++) {\n\n            scanf(\"%d\", &bingos[i][j]);\n\n        }\n\n    }\n\n    scanf(\"%d\", &ninp);\n\n    for (int i = 0; i < ninp; i++) {\n\n        int te;\n\n        scanf(\"%d\", &te);\n\n        for (int i = 0; i < 3; i++) {\n\n            for (int j = 0; j < 3; j++) {\n\n                if (te == bingos[i][j]) {\n\n                    bingos_mark[i][j] = true;\n\n                }\n\n            }\n\n        }\n\n    }\n\n\n\n    if (bingos_mark[0][0] && bingos_mark[1][1] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][2] && bingos_mark[1][1] && bingos_mark[2][0]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][0] && bingos_mark[0][1] && bingos_mark[0][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[1][0] && bingos_mark[1][1] && bingos_mark[1][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[2][0] && bingos_mark[2][1] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][0] && bingos_mark[1][0] && bingos_mark[2][0]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][1] && bingos_mark[1][1] && bingos_mark[2][1]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][2] && bingos_mark[1][2] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else {\n\n        printf(\"No\");\n\n    }\n\n}"
    },
    {
        "id": "14",
        "source_code": "#include<iostream>\n\n#include<fstream>\n\n#include<cstdio>\n\n#include<algorithm>\n\n#include<cstring>\n\n#include<cmath>\n\n#include<vector>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint main()\n\n{\n\n    int a[50][50],b[50],c[50][50]={0},d[50]={0};\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        for(int j=0;j<3;j++)\n\n        cin>>a[i][j];\n\n    }\n\n    int n;\n\n    cin>>n;\n\n    for(int i=0;i<n;i++)\n\n    cin>>b[i];\n\n    for(int i=0;i<n;i++)\n\n    {\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            for(int k=0;k<3;k++)\n\n            {\n\n                if(b[i]==a[j][k])\n\n                {\n\n                    c[j][k]=1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    int sum1=0,sum2=0,sum3=0,sum4=0;\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        sum1=0;\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            if(c[i][j]==1)\n\n            {\n\n                sum1++;\n\n            }\n\n            if(sum1==3)\n\n            break;\n\n        }\n\n        if(sum1==3)\n\n        break;\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        sum2=0;\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            if(c[j][i]==1)\n\n            {\n\n                sum2++;\n\n            }\n\n            if(sum2==3)\n\n            break;\n\n        }\n\n        if(sum2==3)\n\n        break;\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        if(c[i][i]==1)\n\n        {\n\n            sum3++;\n\n        }\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        if(c[i][2-i]==1)\n\n        {\n\n            sum4++;\n\n        }\n\n    }\n\n    if(sum1==3||sum2==3||sum3==3||sum4==3)\n\n    cout<<\"Yes\";\n\n    else \n\n    cout<<\"No\";\n\n    return 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n    int bingos[3][3] = {0};\n\n    bool bingos_mark[3][3] = {false};\n\n    int ninp;\n\n    for (int i = 0; i < 3; i++) {\n\n        for (int j = 0; j < 3; j++) {\n\n            scanf(\"%d\", &bingos[i][j]);\n\n        }\n\n    }\n\n    scanf(\"%d\", &ninp);\n\n    for (int i = 0; i < ninp; i++) {\n\n        int te;\n\n        scanf(\"%d\", &te);\n\n        for (int i = 0; i < 3; i++) {\n\n            for (int j = 0; j < 3; j++) {\n\n                if (te == bingos[i][j]) {\n\n                    bingos_mark[i][j] = true;\n\n                }\n\n            }\n\n        }\n\n    }\n\n\n\n    if (bingos_mark[0][0] && bingos_mark[1][1] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][2] && bingos_mark[1][1] && bingos_mark[2][0]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][0] && bingos_mark[0][1] && bingos_mark[0][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[1][0] && bingos_mark[1][1] && bingos_mark[1][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[2][0] && bingos_mark[2][1] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][0] && bingos_mark[1][0] && bingos_mark[2][0]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][1] && bingos_mark[1][1] && bingos_mark[2][1]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][2] && bingos_mark[1][2] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else {\n\n        printf(\"No\");\n\n    }\n\n}"
    },
    {
        "id": "15",
        "source_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n\n\nint a[5][5];\n\nbool vis[5][5];\n\n\n\nint main()\n\n{\n\n\tios::sync_with_stdio(false),cin.tie(0);\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tfor(int j=1;j<=3;j++){\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint n;cin>>n;\n\n\tint num;\n\n\tfor(int i=1;i<=n;i++){\n\n\t\tcin>>num;\n\n\t\tfor(int k=1;k<=3;k++){\n\n\t\t\tfor(int j=1;j<=3;j++){\n\n\t\t\t\tif(num==a[k][j])vis[k][j]=1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag=0;\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tif(vis[i][1]+vis[i][2]+vis[i][3]==3){\n\n\t\t\tflag=true;break;\n\n\t\t}\n\n\t}\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tif(flag)break;\n\n\t\tif(vis[1][i]+vis[2][i]+vis[3][i]==3){\n\n\t\t\tflag=true;break;\n\n\t\t}\n\n\t}\n\n\tif(!flag&&(vis[1][1]+vis[2][2]+vis[3][3]==3||vis[3][1]+vis[2][2]+vis[1][3]==3))flag=true;\n\n\tif(flag)cout<<\"Yes\"<<endl;\n\n\telse cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n    int bingos[3][3] = {0};\n\n    bool bingos_mark[3][3] = {false};\n\n    int ninp;\n\n    for (int i = 0; i < 3; i++) {\n\n        for (int j = 0; j < 3; j++) {\n\n            scanf(\"%d\", &bingos[i][j]);\n\n        }\n\n    }\n\n    scanf(\"%d\", &ninp);\n\n    for (int i = 0; i < ninp; i++) {\n\n        int te;\n\n        scanf(\"%d\", &te);\n\n        for (int i = 0; i < 3; i++) {\n\n            for (int j = 0; j < 3; j++) {\n\n                if (te == bingos[i][j]) {\n\n                    bingos_mark[i][j] = true;\n\n                }\n\n            }\n\n        }\n\n    }\n\n\n\n    if (bingos_mark[0][0] && bingos_mark[1][1] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][2] && bingos_mark[1][1] && bingos_mark[2][0]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][0] && bingos_mark[0][1] && bingos_mark[0][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[1][0] && bingos_mark[1][1] && bingos_mark[1][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[2][0] && bingos_mark[2][1] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][0] && bingos_mark[1][0] && bingos_mark[2][0]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][1] && bingos_mark[1][1] && bingos_mark[2][1]) {\n\n        printf(\"Yes\");\n\n    } else if (bingos_mark[0][2] && bingos_mark[1][2] && bingos_mark[2][2]) {\n\n        printf(\"Yes\");\n\n    } else {\n\n        printf(\"No\");\n\n    }\n\n}"
    },
    {
        "id": "16",
        "source_code": "#define _USE_MATH_DEFINES\n\n\n\n#include <iostream>\n\n#include <math.h> \n\n#include <vector>\n\n#include <algorithm>\n\n#include <iomanip>      // std::setprecision\n\n#include <map>\n\n#include <unordered_map>\n\n#include <string>\n\n#include <set>\n\n#include <unordered_set>\n\n#include <sstream>\n\n\n\nusing namespace std;\n\n\n\nint main()\n\n{\n\n\tint N;\n\n\tstd::set<int> nums;\n\n\tvector<vector<int>> card(3,std::vector<int>(3,0));\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tint input;\n\n\t\t\tstd::cin >> input;\n\n\t\t\tcard[i][j] = input;\n\n\t\t}\n\n\t}\n\n\n\n\tstd::cin >> N;\n\n\tfor (int k = 0; k < N; ++k)\n\n\t{\n\n\t\tint num;\n\n\t\tstd::cin >> num;\n\n\t\tnums.insert(num);\n\n\t}\n\n\t//check rows\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[i][j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\t//check columns\n\n\tfor (int i = 0; i < 3; ++i)\n\n\t{\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][i]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\n\n\t\tint counter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tcounter = 0;\n\n\t\tfor (int j = 0; j < 3; ++j)\n\n\t\t{\n\n\t\t\tif (nums.find(card[j][2-j]) != nums.end())\n\n\t\t\t{\n\n\t\t\t\tcounter++;\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (counter == 3)\n\n\t\t{\n\n\t\t\tstd::cout << \"Yes\\n\";\n\n\t\t\treturn 0;\n\n\t\t}\n\n\tstd::cout << \"No\\n\";\n\n\n\n}\n",
        "optimized_code": "#include<stdio.h>\n\nint main(){\n\n    int N, G[10];\n\n    int a[3][3], ck[3][3];\n\n \n\n    for(int i = 0 ; i < 3 ; i++ ) {\n\n        scanf(\"%d %d %d\",&a[i][0],&a[i][1],&a[i][2]);\n\n    }\n\n\n\n    scanf(\"%d\",&N);\n\n\n\n    for(int j = 0 ; j < N ; j++ ){\n\n        scanf(\"%d\",&G[j]);\n\n \n\n        for(int  x = 0 ; x < 3 ; x++ ) {\n\n            for(int z = 0 ; z < 3 ; z++ ){\n\n                if( G[j] == a[x][z] ) {\n\n                    ck[x][z] = 1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n\n\n    if( (ck[1][1] == 1 && ck[2][2] == 1 && ck[0][0] == 1  )\n\n    ||(ck[2][0] == 1 && ck[1][1] == 1 && ck[0][2] == 1  )\n\n    ||(ck[0][0] == 1 && ck[0][1] == 1 && ck[0][2] == 1  )\n\n    ||(ck[1][0] == 1 && ck[1][1] == 1 && ck[1][2] == 1  )\n\n    ||(ck[2][0] == 1 && ck[2][1] == 1 && ck[2][2] == 1  )\n\n    ||(ck[0][0] == 1 && ck[1][0] == 1 && ck[2][0] == 1  )\n\n    ||(ck[0][1] == 1 && ck[1][1] == 1 && ck[2][1] == 1  )\n\n    || (ck[0][2] == 1 && ck[1][2] == 1 && ck[2][2] == 1  )\n\n    ) {\n\n        printf(\"Yes\\n\");\n\n    } else {\n\n        printf(\"No\\n\");\n\n    }\n\n\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "17",
        "source_code": "#include<iostream>\n\n#include <string.h>\n\n#include<string>\n\n#include <map> \n\n#include <utility> \n\n\n\n\n\nusing namespace std;\n\n\n\nint main()\n\n{\n\n\t/*long long h, a, attacks = 0;\n\n\tcin >> h >> a;\n\n\twhile (h > 0)\n\n\t{\n\n\tattacks++;\n\n\th -= a;\n\n\t}\n\n\tcout << attacks << endl;*/\n\n\t/*long long n;\n\n\tstring s;\n\n\tcin >> n;\n\n\tgetline(cin, s);\n\n\tgetline(cin, s);\n\n\tchar currentchar = s[0];\n\n\tint cnt = 1;\n\n\n\n\tfor (int i = 1; i < s.size(); i++)\n\n\t{\n\n\tif (s[i] != currentchar)\n\n\t{\n\n\tcurrentchar = s[i];\n\n\tcnt++;\n\n\t}\n\n\t}\n\n\n\n\tcout << cnt << endl;*/\n\n\n\n\t/*int a, b, c;\n\n\tcin >> a >> b >> c;\n\n\tif ((a == b && a != c) || (a == c && a!=b) || (b == c && b!=a))\n\n\tcout << \"Yes\" << endl;\n\n\telse\n\n\tcout << \"No\" << endl;*/\n\n\n\n\t/*string S;\n\n\tgetline(cin, S);\n\n\t//getline(cin, S);\n\n\tbool StingEnd = false;\n\n\n\n\twhile (true)\n\n\t{\n\n\tint i;\n\n\tif (S.empty())\n\n\tbreak;\n\n\tfor (i = 0; i < S.size()-1; i++)\n\n\t{\n\n\n\n\tif (S[i] == 'S' && S[i + 1] == 'T')\n\n\t{\n\n\tS.erase(i, 2);\n\n\tif (S.empty())\n\n\tbreak;\n\n\t//break;\n\n\t}\n\n\t}\n\n\tif (i == S.size()-1)\n\n\tbreak;\n\n\t}\n\n\tcout << S.size() << endl;*/\n\n\n\n\t/*int N, occurrence = 0;\n\n\tchar S[100];\n\n\tcin >> N;\n\n\tcin >> S;\n\n\tfor (int i = 0; i<N - 2; i++)\n\n\t{\n\n\t\tif (S[i] == 'A' && S[i + 1] == 'B' && S[i + 2] == 'C')\n\n\t\t\toccurrence++;\n\n\t}\n\n\tcout << occurrence << endl;*/\n\n\t\n\n\tint Bingo[3][3];\n\n\tbool Exist[3][3];\n\n\tmap <int, pair<int, int>> places;\n\n\tfor (int i=0;i<3;i++)\n\n\t{\n\n\t\tfor (int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>Bingo[i][j];\n\n\t\t\tExist[i][j] =false;\n\n\t\t\tpair<int, int> current;\n\n\t\t\tcurrent.first = i;\n\n\t\t\tcurrent.second = j;\n\n\t\t\tplaces[Bingo[i][j]] = current;\n\n\t\t\t\n\n\t\t\t//places.insert(pair<int, pair>(Bingo[i][j], current)); \n\n\t\t}\n\n\t}\n\n\tint N,B;\n\n\tcin>>N;\n\n\tfor (int i=0;i<N;i++)\n\n\t{\n\n\t\tcin >>B;\n\n\t\tmap<int, pair<int,int>>::iterator it = places.find(B);\n\n\t\tif ( it != places.end() ) \n\n\t\t\t// not found\n\n\t\t\t{\n\n\t\t\t\t//pair<int, int> place= places.find(B);\n\n\t\t\t\tExist[it->second.first][it->second.second] = true;\n\n\t\t\t}\n\n\t}\n\n\t\n\n\tbool IsBingo = false;\n\n\t\n\n\tif (Exist[0][0]&&Exist[0][1]&&Exist[0][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[1][0]&&Exist[1][1]&&Exist[1][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[2][0]&&Exist[2][1]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\n\telse if(Exist[0][0]&&Exist[1][0]&&Exist[2][0])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][1]&&Exist[1][1]&&Exist[2][1])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][2]&&Exist[1][2]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][0]&&Exist[1][1]&&Exist[2][2])\n\n\t\tIsBingo = true;\n\nelse if(Exist[0][2]&&Exist[1][1]&&Exist[2][0])\n\n\t\tIsBingo = true;\n\n\n\n\t\n\n\tif (IsBingo)\n\n\t\tcout<< \"Yes\"<<endl;\n\n\telse\n\n\t\tcout<<\"No\" <<endl;\n\n\t\n\n\n\n\t//system(\"pause\");\n\n\treturn 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\nint main(){\n\n    int N, G[10];\n\n    int a[3][3], ck[3][3];\n\n \n\n    for(int i = 0 ; i < 3 ; i++ ) {\n\n        scanf(\"%d %d %d\",&a[i][0],&a[i][1],&a[i][2]);\n\n    }\n\n\n\n    scanf(\"%d\",&N);\n\n\n\n    for(int j = 0 ; j < N ; j++ ){\n\n        scanf(\"%d\",&G[j]);\n\n \n\n        for(int  x = 0 ; x < 3 ; x++ ) {\n\n            for(int z = 0 ; z < 3 ; z++ ){\n\n                if( G[j] == a[x][z] ) {\n\n                    ck[x][z] = 1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n\n\n    if( (ck[1][1] == 1 && ck[2][2] == 1 && ck[0][0] == 1  )\n\n    ||(ck[2][0] == 1 && ck[1][1] == 1 && ck[0][2] == 1  )\n\n    ||(ck[0][0] == 1 && ck[0][1] == 1 && ck[0][2] == 1  )\n\n    ||(ck[1][0] == 1 && ck[1][1] == 1 && ck[1][2] == 1  )\n\n    ||(ck[2][0] == 1 && ck[2][1] == 1 && ck[2][2] == 1  )\n\n    ||(ck[0][0] == 1 && ck[1][0] == 1 && ck[2][0] == 1  )\n\n    ||(ck[0][1] == 1 && ck[1][1] == 1 && ck[2][1] == 1  )\n\n    || (ck[0][2] == 1 && ck[1][2] == 1 && ck[2][2] == 1  )\n\n    ) {\n\n        printf(\"Yes\\n\");\n\n    } else {\n\n        printf(\"No\\n\");\n\n    }\n\n\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "18",
        "source_code": "#include<iostream>\n\n#include<fstream>\n\n#include<cstdio>\n\n#include<algorithm>\n\n#include<cstring>\n\n#include<cmath>\n\n#include<vector>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nint main()\n\n{\n\n    int a[50][50],b[50],c[50][50]={0},d[50]={0};\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        for(int j=0;j<3;j++)\n\n        cin>>a[i][j];\n\n    }\n\n    int n;\n\n    cin>>n;\n\n    for(int i=0;i<n;i++)\n\n    cin>>b[i];\n\n    for(int i=0;i<n;i++)\n\n    {\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            for(int k=0;k<3;k++)\n\n            {\n\n                if(b[i]==a[j][k])\n\n                {\n\n                    c[j][k]=1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    int sum1=0,sum2=0,sum3=0,sum4=0;\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        sum1=0;\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            if(c[i][j]==1)\n\n            {\n\n                sum1++;\n\n            }\n\n            if(sum1==3)\n\n            break;\n\n        }\n\n        if(sum1==3)\n\n        break;\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        sum2=0;\n\n        for(int j=0;j<3;j++)\n\n        {\n\n            if(c[j][i]==1)\n\n            {\n\n                sum2++;\n\n            }\n\n            if(sum2==3)\n\n            break;\n\n        }\n\n        if(sum2==3)\n\n        break;\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        if(c[i][i]==1)\n\n        {\n\n            sum3++;\n\n        }\n\n    }\n\n    for(int i=0;i<3;i++)\n\n    {\n\n        if(c[i][2-i]==1)\n\n        {\n\n            sum4++;\n\n        }\n\n    }\n\n    if(sum1==3||sum2==3||sum3==3||sum4==3)\n\n    cout<<\"Yes\";\n\n    else \n\n    cout<<\"No\";\n\n    return 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\nint main(){\n\n    int N, G[10];\n\n    int a[3][3], ck[3][3];\n\n \n\n    for(int i = 0 ; i < 3 ; i++ ) {\n\n        scanf(\"%d %d %d\",&a[i][0],&a[i][1],&a[i][2]);\n\n    }\n\n\n\n    scanf(\"%d\",&N);\n\n\n\n    for(int j = 0 ; j < N ; j++ ){\n\n        scanf(\"%d\",&G[j]);\n\n \n\n        for(int  x = 0 ; x < 3 ; x++ ) {\n\n            for(int z = 0 ; z < 3 ; z++ ){\n\n                if( G[j] == a[x][z] ) {\n\n                    ck[x][z] = 1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n\n\n    if( (ck[1][1] == 1 && ck[2][2] == 1 && ck[0][0] == 1  )\n\n    ||(ck[2][0] == 1 && ck[1][1] == 1 && ck[0][2] == 1  )\n\n    ||(ck[0][0] == 1 && ck[0][1] == 1 && ck[0][2] == 1  )\n\n    ||(ck[1][0] == 1 && ck[1][1] == 1 && ck[1][2] == 1  )\n\n    ||(ck[2][0] == 1 && ck[2][1] == 1 && ck[2][2] == 1  )\n\n    ||(ck[0][0] == 1 && ck[1][0] == 1 && ck[2][0] == 1  )\n\n    ||(ck[0][1] == 1 && ck[1][1] == 1 && ck[2][1] == 1  )\n\n    || (ck[0][2] == 1 && ck[1][2] == 1 && ck[2][2] == 1  )\n\n    ) {\n\n        printf(\"Yes\\n\");\n\n    } else {\n\n        printf(\"No\\n\");\n\n    }\n\n\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "19",
        "source_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n\n\nint a[5][5];\n\nbool vis[5][5];\n\n\n\nint main()\n\n{\n\n\tios::sync_with_stdio(false),cin.tie(0);\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tfor(int j=1;j<=3;j++){\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint n;cin>>n;\n\n\tint num;\n\n\tfor(int i=1;i<=n;i++){\n\n\t\tcin>>num;\n\n\t\tfor(int k=1;k<=3;k++){\n\n\t\t\tfor(int j=1;j<=3;j++){\n\n\t\t\t\tif(num==a[k][j])vis[k][j]=1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag=0;\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tif(vis[i][1]+vis[i][2]+vis[i][3]==3){\n\n\t\t\tflag=true;break;\n\n\t\t}\n\n\t}\n\n\tfor(int i=1;i<=3;i++){\n\n\t\tif(flag)break;\n\n\t\tif(vis[1][i]+vis[2][i]+vis[3][i]==3){\n\n\t\t\tflag=true;break;\n\n\t\t}\n\n\t}\n\n\tif(!flag&&(vis[1][1]+vis[2][2]+vis[3][3]==3||vis[3][1]+vis[2][2]+vis[1][3]==3))flag=true;\n\n\tif(flag)cout<<\"Yes\"<<endl;\n\n\telse cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\nint main(){\n\n    int N, G[10];\n\n    int a[3][3], ck[3][3];\n\n \n\n    for(int i = 0 ; i < 3 ; i++ ) {\n\n        scanf(\"%d %d %d\",&a[i][0],&a[i][1],&a[i][2]);\n\n    }\n\n\n\n    scanf(\"%d\",&N);\n\n\n\n    for(int j = 0 ; j < N ; j++ ){\n\n        scanf(\"%d\",&G[j]);\n\n \n\n        for(int  x = 0 ; x < 3 ; x++ ) {\n\n            for(int z = 0 ; z < 3 ; z++ ){\n\n                if( G[j] == a[x][z] ) {\n\n                    ck[x][z] = 1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n\n\n    if( (ck[1][1] == 1 && ck[2][2] == 1 && ck[0][0] == 1  )\n\n    ||(ck[2][0] == 1 && ck[1][1] == 1 && ck[0][2] == 1  )\n\n    ||(ck[0][0] == 1 && ck[0][1] == 1 && ck[0][2] == 1  )\n\n    ||(ck[1][0] == 1 && ck[1][1] == 1 && ck[1][2] == 1  )\n\n    ||(ck[2][0] == 1 && ck[2][1] == 1 && ck[2][2] == 1  )\n\n    ||(ck[0][0] == 1 && ck[1][0] == 1 && ck[2][0] == 1  )\n\n    ||(ck[0][1] == 1 && ck[1][1] == 1 && ck[2][1] == 1  )\n\n    || (ck[0][2] == 1 && ck[1][2] == 1 && ck[2][2] == 1  )\n\n    ) {\n\n        printf(\"Yes\\n\");\n\n    } else {\n\n        printf(\"No\\n\");\n\n    }\n\n\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "20",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint n,a[15][15],b[15];\n\n\tfor(int i=1;i<=3;i++)\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t    cin>>a[i][j];\n\n\tcin>>n;\n\n\tfor(int i=1;i<=n;i++)\n\n\t    cin>>b[i];\n\n\tfor(int i=1;i<=3;i++)\n\n\t{\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t{\n\n\t\t\tfor(int k=1;k<=n;k++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b[k])\n\n\t\t\t\t{\n\n\t\t\t\t\ta[i][j]=0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint i,j,flag=0;\n\n\tif(a[1][1]==0&&a[2][2]==0&&a[3][3]==0)\n\n\t    flag=1;\n\n\telse if(a[1][3]==0&&a[2][2]==0&&a[3][1]==0)\n\n\t    flag=1;\n\n\tfor(i=1;i<=3;i++)\n\n\t{\n\n\t\tif(a[i][1]==0&&a[i][2]==0&&a[i][3]==0)\n\n\t\t    flag=1;\n\n\t\telse if(a[1][i]==0&&a[2][i]==0&&a[3][i]==0)\n\n\t\t    flag=1;\n\n\t}\n\n\tif(flag==1)\n\n\t    cout<<\"Yes\"<<endl;\n\n\telse\n\n\t    cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n#include <stdlib.h>\n\n \n\nint main()\n\n{\n\n  int a[3][3];\n\n  int n, b,c[3][3]={0},count;\n\n \n\n  for(int i=0; i<3; i++){\n\n    for(int j=0; j<3; j++){\n\n      scanf(\"%d\",&a[i][j] );\n\n    }\n\n  }\n\n  scanf(\"%d\",&n );\n\n \n\n  for(int k=0; k<n; k++)\n\n  {\n\n    scanf(\"%d\",&b);\n\n    for(int i=0; i<3; i++){\n\n      for(int j=0; j<3; j++){\n\n        if(a[i][j] == b)\n\n          c[i][j] = 1;\n\n      }\n\n    }\n\n  }\n\n \n\n  if(c[0][0]+c[1][1]+c[2][2]==3||c[0][2]+c[1][1]+c[2][0]==3){\n\n      puts(\"Yes\");\n\n      return 0;\n\n    }\n\n \n\n  for(int i=0;i<3;i++){\n\n      if(c[i][0]+c[i][1]+c[i][2]==3||c[0][i]+c[1][i]+c[2][i]==3){\n\n        puts(\"Yes\");\n\n        return 0;\n\n      }\n\n    }\n\n \n\n    puts(\"No\");\n\n \n\n    return 0;\n\n}"
    },
    {
        "id": "21",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[3][3];\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint t,b;\n\n\tcin>>t;\n\n\twhile(t--)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tfor(int j=0;j<3;j++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b)\n\n\t\t\t\t  a[i][j]=0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag1=0,flag2=0,flag3=0;\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(j==2&&a[i][j]==0)\n\n\t\t\t  flag1=1;\n\n\t\t}\n\n\t}\n\n\tfor(int j=0;j<3;j++)\n\n\t{\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(i==2&&a[i][j]==0)\n\n\t\t\t  flag2=1;\n\n\t\t}\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][2-i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][2-i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tif(flag1||flag2||flag3)\n\n\t  cout<<\"Yes\"<<endl;\n\n\telse\n\n\t  cout<<\"No\"<<endl;\n\n } ",
        "optimized_code": "#include <stdio.h>\n\n#include <stdlib.h>\n\n \n\nint main()\n\n{\n\n  int a[3][3];\n\n  int n, b,c[3][3]={0},count;\n\n \n\n  for(int i=0; i<3; i++){\n\n    for(int j=0; j<3; j++){\n\n      scanf(\"%d\",&a[i][j] );\n\n    }\n\n  }\n\n  scanf(\"%d\",&n );\n\n \n\n  for(int k=0; k<n; k++)\n\n  {\n\n    scanf(\"%d\",&b);\n\n    for(int i=0; i<3; i++){\n\n      for(int j=0; j<3; j++){\n\n        if(a[i][j] == b)\n\n          c[i][j] = 1;\n\n      }\n\n    }\n\n  }\n\n \n\n  if(c[0][0]+c[1][1]+c[2][2]==3||c[0][2]+c[1][1]+c[2][0]==3){\n\n      puts(\"Yes\");\n\n      return 0;\n\n    }\n\n \n\n  for(int i=0;i<3;i++){\n\n      if(c[i][0]+c[i][1]+c[i][2]==3||c[0][i]+c[1][i]+c[2][i]==3){\n\n        puts(\"Yes\");\n\n        return 0;\n\n      }\n\n    }\n\n \n\n    puts(\"No\");\n\n \n\n    return 0;\n\n}"
    },
    {
        "id": "22",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint n,a[15][15],b[15];\n\n\tfor(int i=1;i<=3;i++)\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t    cin>>a[i][j];\n\n\tcin>>n;\n\n\tfor(int i=1;i<=n;i++)\n\n\t    cin>>b[i];\n\n\tfor(int i=1;i<=3;i++)\n\n\t{\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t{\n\n\t\t\tfor(int k=1;k<=n;k++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b[k])\n\n\t\t\t\t{\n\n\t\t\t\t\ta[i][j]=0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint i,j,flag=0;\n\n\tif(a[1][1]==0&&a[2][2]==0&&a[3][3]==0)\n\n\t    flag=1;\n\n\telse if(a[1][3]==0&&a[2][2]==0&&a[3][1]==0)\n\n\t    flag=1;\n\n\tfor(i=1;i<=3;i++)\n\n\t{\n\n\t\tif(a[i][1]==0&&a[i][2]==0&&a[i][3]==0)\n\n\t\t    flag=1;\n\n\t\telse if(a[1][i]==0&&a[2][i]==0&&a[3][i]==0)\n\n\t\t    flag=1;\n\n\t}\n\n\tif(flag==1)\n\n\t    cout<<\"Yes\"<<endl;\n\n\telse\n\n\t    cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\n \n\n \n\nint main(){\n\n \n\n    int A[3][3], x , B[10], check[3][3];\n\n \n\n    for(int i = 0 ; i < 3 ; i++ ) {\n\n        scanf(\"%d %d %d\",&A[i][0],&A[i][1],&A[i][2]);\n\n    }\n\n \n\n    scanf(\"%d\",&x);\n\n    \n\n    for(int j = 0 ; j < x ; j++ ){\n\n        scanf(\"%d\",&B[j]);\n\n \n\n        for(int  l = 0 ; l < 3 ; l++ ) {\n\n            for(int k = 0 ; k < 3 ; k++ ){\n\n                if( B[j] == A[l][k] ) {\n\n                    check[l][k] = 1;\n\n                }\n\n            }   \n\n        }\n\n    }   \n\n    \n\n    if( (check[1][1] == 1 && check[2][2] == 1 && check[0][0] == 1  )\n\n    || (check[2][0] == 1 && check[1][1] == 1 && check[0][2] == 1  )\n\n    || (check[0][0] == 1 && check[0][1] == 1 && check[0][2] == 1  )\n\n    || (check[1][0] == 1 && check[1][1] == 1 && check[1][2] == 1  )\n\n    || (check[2][0] == 1 && check[2][1] == 1 && check[2][2] == 1  )\n\n    || (check[0][0] == 1 && check[1][0] == 1 && check[2][0] == 1  )\n\n    || (check[0][1] == 1 && check[1][1] == 1 && check[2][1] == 1  )\n\n    || (check[0][2] == 1 && check[1][2] == 1 && check[2][2] == 1  )\n\n    ) {   \n\n        printf(\"Yes\\n\");\n\n    } else {\n\n        printf(\"No\\n\");\n\n    }\n\n \n\n        return 0;\n\n}"
    },
    {
        "id": "23",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[3][3];\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint t,b;\n\n\tcin>>t;\n\n\twhile(t--)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tfor(int j=0;j<3;j++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b)\n\n\t\t\t\t  a[i][j]=0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag1=0,flag2=0,flag3=0;\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(j==2&&a[i][j]==0)\n\n\t\t\t  flag1=1;\n\n\t\t}\n\n\t}\n\n\tfor(int j=0;j<3;j++)\n\n\t{\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(i==2&&a[i][j]==0)\n\n\t\t\t  flag2=1;\n\n\t\t}\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][2-i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][2-i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tif(flag1||flag2||flag3)\n\n\t  cout<<\"Yes\"<<endl;\n\n\telse\n\n\t  cout<<\"No\"<<endl;\n\n } ",
        "optimized_code": "#include<stdio.h>\n\n \n\n \n\nint main(){\n\n \n\n    int A[3][3], x , B[10], check[3][3];\n\n \n\n    for(int i = 0 ; i < 3 ; i++ ) {\n\n        scanf(\"%d %d %d\",&A[i][0],&A[i][1],&A[i][2]);\n\n    }\n\n \n\n    scanf(\"%d\",&x);\n\n    \n\n    for(int j = 0 ; j < x ; j++ ){\n\n        scanf(\"%d\",&B[j]);\n\n \n\n        for(int  l = 0 ; l < 3 ; l++ ) {\n\n            for(int k = 0 ; k < 3 ; k++ ){\n\n                if( B[j] == A[l][k] ) {\n\n                    check[l][k] = 1;\n\n                }\n\n            }   \n\n        }\n\n    }   \n\n    \n\n    if( (check[1][1] == 1 && check[2][2] == 1 && check[0][0] == 1  )\n\n    || (check[2][0] == 1 && check[1][1] == 1 && check[0][2] == 1  )\n\n    || (check[0][0] == 1 && check[0][1] == 1 && check[0][2] == 1  )\n\n    || (check[1][0] == 1 && check[1][1] == 1 && check[1][2] == 1  )\n\n    || (check[2][0] == 1 && check[2][1] == 1 && check[2][2] == 1  )\n\n    || (check[0][0] == 1 && check[1][0] == 1 && check[2][0] == 1  )\n\n    || (check[0][1] == 1 && check[1][1] == 1 && check[2][1] == 1  )\n\n    || (check[0][2] == 1 && check[1][2] == 1 && check[2][2] == 1  )\n\n    ) {   \n\n        printf(\"Yes\\n\");\n\n    } else {\n\n        printf(\"No\\n\");\n\n    }\n\n \n\n        return 0;\n\n}"
    },
    {
        "id": "24",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint n,a[15][15],b[15];\n\n\tfor(int i=1;i<=3;i++)\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t    cin>>a[i][j];\n\n\tcin>>n;\n\n\tfor(int i=1;i<=n;i++)\n\n\t    cin>>b[i];\n\n\tfor(int i=1;i<=3;i++)\n\n\t{\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t{\n\n\t\t\tfor(int k=1;k<=n;k++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b[k])\n\n\t\t\t\t{\n\n\t\t\t\t\ta[i][j]=0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint i,j,flag=0;\n\n\tif(a[1][1]==0&&a[2][2]==0&&a[3][3]==0)\n\n\t    flag=1;\n\n\telse if(a[1][3]==0&&a[2][2]==0&&a[3][1]==0)\n\n\t    flag=1;\n\n\tfor(i=1;i<=3;i++)\n\n\t{\n\n\t\tif(a[i][1]==0&&a[i][2]==0&&a[i][3]==0)\n\n\t\t    flag=1;\n\n\t\telse if(a[1][i]==0&&a[2][i]==0&&a[3][i]==0)\n\n\t\t    flag=1;\n\n\t}\n\n\tif(flag==1)\n\n\t    cout<<\"Yes\"<<endl;\n\n\telse\n\n\t    cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\nint main(){\n\n    int a[3][3]={0}, i, j, k;\n\n    for(i=0; i<3; i++){\n\n        for(j=0; j<3; j++){\n\n            scanf(\"%d\", &a[i][j]);\n\n        }\n\n    }\n\n    int n, m;\n\n    scanf(\"%d\",&n);\n\n    for(i=0; i<n; i++){\n\n        scanf(\"%d\",&m);\n\n        for(j=0; j<3; j++){\n\n            for(k=0; k<3; k++){\n\n                if(a[j][k]==m){ a[j][k]=0; }\n\n            }\n\n        }\n\n    }\n\n    int flag=0;\n\n    for(i=0; i<3; i++){\n\n        if( a[i][0]==0 && a[i][1]==0 && a[i][2]==0 ){ flag=1; }\n\n        if( a[0][i]==0 && a[1][i]==0 && a[2][i]==0 ){ flag=1; }\n\n    }\n\n    if( a[0][0]==0 && a[1][1]==0 && a[2][2]==0 ){ flag=1; }\n\n    if( a[0][2]==0 && a[1][1]==0 && a[2][0]==0 ){ flag=1; }\n\n \n\n    if( flag ){ printf(\"Yes\\n\"); }\n\n    else      { printf(\"No\\n\");  }\n\n    return 0;\n\n}"
    },
    {
        "id": "25",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[3][3];\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint t,b;\n\n\tcin>>t;\n\n\twhile(t--)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tfor(int j=0;j<3;j++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b)\n\n\t\t\t\t  a[i][j]=0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag1=0,flag2=0,flag3=0;\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(j==2&&a[i][j]==0)\n\n\t\t\t  flag1=1;\n\n\t\t}\n\n\t}\n\n\tfor(int j=0;j<3;j++)\n\n\t{\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(i==2&&a[i][j]==0)\n\n\t\t\t  flag2=1;\n\n\t\t}\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][2-i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][2-i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tif(flag1||flag2||flag3)\n\n\t  cout<<\"Yes\"<<endl;\n\n\telse\n\n\t  cout<<\"No\"<<endl;\n\n } ",
        "optimized_code": "#include <stdio.h>\n\nint main(){\n\n    int a[3][3]={0}, i, j, k;\n\n    for(i=0; i<3; i++){\n\n        for(j=0; j<3; j++){\n\n            scanf(\"%d\", &a[i][j]);\n\n        }\n\n    }\n\n    int n, m;\n\n    scanf(\"%d\",&n);\n\n    for(i=0; i<n; i++){\n\n        scanf(\"%d\",&m);\n\n        for(j=0; j<3; j++){\n\n            for(k=0; k<3; k++){\n\n                if(a[j][k]==m){ a[j][k]=0; }\n\n            }\n\n        }\n\n    }\n\n    int flag=0;\n\n    for(i=0; i<3; i++){\n\n        if( a[i][0]==0 && a[i][1]==0 && a[i][2]==0 ){ flag=1; }\n\n        if( a[0][i]==0 && a[1][i]==0 && a[2][i]==0 ){ flag=1; }\n\n    }\n\n    if( a[0][0]==0 && a[1][1]==0 && a[2][2]==0 ){ flag=1; }\n\n    if( a[0][2]==0 && a[1][1]==0 && a[2][0]==0 ){ flag=1; }\n\n \n\n    if( flag ){ printf(\"Yes\\n\"); }\n\n    else      { printf(\"No\\n\");  }\n\n    return 0;\n\n}"
    },
    {
        "id": "26",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint n,a[15][15],b[15];\n\n\tfor(int i=1;i<=3;i++)\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t    cin>>a[i][j];\n\n\tcin>>n;\n\n\tfor(int i=1;i<=n;i++)\n\n\t    cin>>b[i];\n\n\tfor(int i=1;i<=3;i++)\n\n\t{\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t{\n\n\t\t\tfor(int k=1;k<=n;k++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b[k])\n\n\t\t\t\t{\n\n\t\t\t\t\ta[i][j]=0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint i,j,flag=0;\n\n\tif(a[1][1]==0&&a[2][2]==0&&a[3][3]==0)\n\n\t    flag=1;\n\n\telse if(a[1][3]==0&&a[2][2]==0&&a[3][1]==0)\n\n\t    flag=1;\n\n\tfor(i=1;i<=3;i++)\n\n\t{\n\n\t\tif(a[i][1]==0&&a[i][2]==0&&a[i][3]==0)\n\n\t\t    flag=1;\n\n\t\telse if(a[1][i]==0&&a[2][i]==0&&a[3][i]==0)\n\n\t\t    flag=1;\n\n\t}\n\n\tif(flag==1)\n\n\t    cout<<\"Yes\"<<endl;\n\n\telse\n\n\t    cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n\n\n\tint mat[3][3];\n\n\t\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tscanf(\"%d\", &mat[i][j]);\n\n\t\t}\n\n\t}\t\t\n\n\tint c[3][3] = {};\n\n\tint a;\n\n\t\t\n\n\t\tscanf(\"%d\", &a);\n\n\t\n\n\tint b;\n\n\t\t\n\n\tfor(int i = 0; i < a; i++) {\n\n\t\t\n\n\t\tscanf(\"%d\", &b);\n\n\t\n\n\tfor(int j = 0; j < 3; j++) {\n\n\t\tfor(int k = 0; k < 3; k++) {\n\n\t\t\tif(b == mat[j][k]) {\n\n\t\t\t\tc[j][k]++;\n\n\t\t\t\t\n\n\t\t\t\tif((c[0][0] > 0 && c[0][1] > 0 && c[0][2] > 0) || (c[1][0] > 0 && c[1][1] > 0 && c[1][2] > 0) || (c[2][0] > 0 && c[2][1] > 0 && c[2][2] > 0) || (c[0][0] > 0 && c[1][0] > 0 && c[2][0] > 0) || (c[0][1] > 0 && c[1][1] > 0 && c[2][1] > 0) || (c[0][2] > 0 && c[1][2] > 0 && c[2][2] > 0) || (c[0][2] > 0 && c[1][1] > 0 && c[2][0] > 0) || (c[0][0] > 0 && c[1][1] > 0 && c[2][2] > 0)) {\n\n\t\t\tprintf(\"Yes\");\n\n\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nprintf(\"No\");\n\n\treturn 0;\n\n}\n"
    },
    {
        "id": "27",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[3][3];\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint t,b;\n\n\tcin>>t;\n\n\twhile(t--)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tfor(int j=0;j<3;j++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b)\n\n\t\t\t\t  a[i][j]=0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag1=0,flag2=0,flag3=0;\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(j==2&&a[i][j]==0)\n\n\t\t\t  flag1=1;\n\n\t\t}\n\n\t}\n\n\tfor(int j=0;j<3;j++)\n\n\t{\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(i==2&&a[i][j]==0)\n\n\t\t\t  flag2=1;\n\n\t\t}\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][2-i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][2-i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tif(flag1||flag2||flag3)\n\n\t  cout<<\"Yes\"<<endl;\n\n\telse\n\n\t  cout<<\"No\"<<endl;\n\n } ",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n\n\n\tint mat[3][3];\n\n\t\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tscanf(\"%d\", &mat[i][j]);\n\n\t\t}\n\n\t}\t\t\n\n\tint c[3][3] = {};\n\n\tint a;\n\n\t\t\n\n\t\tscanf(\"%d\", &a);\n\n\t\n\n\tint b;\n\n\t\t\n\n\tfor(int i = 0; i < a; i++) {\n\n\t\t\n\n\t\tscanf(\"%d\", &b);\n\n\t\n\n\tfor(int j = 0; j < 3; j++) {\n\n\t\tfor(int k = 0; k < 3; k++) {\n\n\t\t\tif(b == mat[j][k]) {\n\n\t\t\t\tc[j][k]++;\n\n\t\t\t\t\n\n\t\t\t\tif((c[0][0] > 0 && c[0][1] > 0 && c[0][2] > 0) || (c[1][0] > 0 && c[1][1] > 0 && c[1][2] > 0) || (c[2][0] > 0 && c[2][1] > 0 && c[2][2] > 0) || (c[0][0] > 0 && c[1][0] > 0 && c[2][0] > 0) || (c[0][1] > 0 && c[1][1] > 0 && c[2][1] > 0) || (c[0][2] > 0 && c[1][2] > 0 && c[2][2] > 0) || (c[0][2] > 0 && c[1][1] > 0 && c[2][0] > 0) || (c[0][0] > 0 && c[1][1] > 0 && c[2][2] > 0)) {\n\n\t\t\tprintf(\"Yes\");\n\n\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nprintf(\"No\");\n\n\treturn 0;\n\n}\n"
    },
    {
        "id": "28",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint n,a[15][15],b[15];\n\n\tfor(int i=1;i<=3;i++)\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t    cin>>a[i][j];\n\n\tcin>>n;\n\n\tfor(int i=1;i<=n;i++)\n\n\t    cin>>b[i];\n\n\tfor(int i=1;i<=3;i++)\n\n\t{\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t{\n\n\t\t\tfor(int k=1;k<=n;k++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b[k])\n\n\t\t\t\t{\n\n\t\t\t\t\ta[i][j]=0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint i,j,flag=0;\n\n\tif(a[1][1]==0&&a[2][2]==0&&a[3][3]==0)\n\n\t    flag=1;\n\n\telse if(a[1][3]==0&&a[2][2]==0&&a[3][1]==0)\n\n\t    flag=1;\n\n\tfor(i=1;i<=3;i++)\n\n\t{\n\n\t\tif(a[i][1]==0&&a[i][2]==0&&a[i][3]==0)\n\n\t\t    flag=1;\n\n\t\telse if(a[1][i]==0&&a[2][i]==0&&a[3][i]==0)\n\n\t\t    flag=1;\n\n\t}\n\n\tif(flag==1)\n\n\t    cout<<\"Yes\"<<endl;\n\n\telse\n\n\t    cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n\n\n\tint arr[3][3]={};\n\n\tfor(int i=0; i<3; i++){\n\n\t\tfor(int j=0; j<3; j++){\n\n\t\t\tscanf(\"%d\", &arr[i][j]);\n\n\t\t}\n\n\t}\n\n\t\n\n\tint n;\n\n\tscanf(\"%d\", &n);\n\n\tint call;\n\n\tfor(int k=0; k<n; k++){\n\n\t\tscanf(\"%d\", &call);\n\n\t\tfor(int i=0; i<3; i++){\n\n\t\t\tfor(int j=0; j<3; j++){\n\n\t\t\tif(arr[i][j]==call){\n\n\t\t\t\tarr[i][j]=0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t\t}\n\n\t\t\t\n\n\t}\n\n\t\n\n\tif(arr[0][0]==0&&arr[0][1]==0&&arr[0][2]==0 || arr[1][0]==0&&arr[1][1]==0&&arr[1][2]==0 || arr[2][0]==0&&arr[2][1]==0&&arr[2][2]==0 || arr[0][0]==0&&arr[1][0]==0&&arr[2][0]==0 || arr[0][1]==0&&arr[1][1]==0&&arr[2][1]==0 || arr[0][2]==0&&arr[1][2]==0&&arr[2][2]==0 || arr[0][0]==0&&arr[1][1]==0&&arr[2][2]==0 || arr[0][2]==0&&arr[1][1]==0&&arr[2][0]==0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse {\n\n\t\tprintf(\"No\\n\");\n\n\t}\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "29",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[3][3];\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint t,b;\n\n\tcin>>t;\n\n\twhile(t--)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tfor(int j=0;j<3;j++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b)\n\n\t\t\t\t  a[i][j]=0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag1=0,flag2=0,flag3=0;\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(j==2&&a[i][j]==0)\n\n\t\t\t  flag1=1;\n\n\t\t}\n\n\t}\n\n\tfor(int j=0;j<3;j++)\n\n\t{\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(i==2&&a[i][j]==0)\n\n\t\t\t  flag2=1;\n\n\t\t}\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][2-i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][2-i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tif(flag1||flag2||flag3)\n\n\t  cout<<\"Yes\"<<endl;\n\n\telse\n\n\t  cout<<\"No\"<<endl;\n\n } ",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n\n\n\tint arr[3][3]={};\n\n\tfor(int i=0; i<3; i++){\n\n\t\tfor(int j=0; j<3; j++){\n\n\t\t\tscanf(\"%d\", &arr[i][j]);\n\n\t\t}\n\n\t}\n\n\t\n\n\tint n;\n\n\tscanf(\"%d\", &n);\n\n\tint call;\n\n\tfor(int k=0; k<n; k++){\n\n\t\tscanf(\"%d\", &call);\n\n\t\tfor(int i=0; i<3; i++){\n\n\t\t\tfor(int j=0; j<3; j++){\n\n\t\t\tif(arr[i][j]==call){\n\n\t\t\t\tarr[i][j]=0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t\t}\n\n\t\t\t\n\n\t}\n\n\t\n\n\tif(arr[0][0]==0&&arr[0][1]==0&&arr[0][2]==0 || arr[1][0]==0&&arr[1][1]==0&&arr[1][2]==0 || arr[2][0]==0&&arr[2][1]==0&&arr[2][2]==0 || arr[0][0]==0&&arr[1][0]==0&&arr[2][0]==0 || arr[0][1]==0&&arr[1][1]==0&&arr[2][1]==0 || arr[0][2]==0&&arr[1][2]==0&&arr[2][2]==0 || arr[0][0]==0&&arr[1][1]==0&&arr[2][2]==0 || arr[0][2]==0&&arr[1][1]==0&&arr[2][0]==0){\n\n\t\tprintf(\"Yes\\n\");\n\n\t}\n\n\telse {\n\n\t\tprintf(\"No\\n\");\n\n\t}\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "30",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint n,a[15][15],b[15];\n\n\tfor(int i=1;i<=3;i++)\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t    cin>>a[i][j];\n\n\tcin>>n;\n\n\tfor(int i=1;i<=n;i++)\n\n\t    cin>>b[i];\n\n\tfor(int i=1;i<=3;i++)\n\n\t{\n\n\t\tfor(int j=1;j<=3;j++)\n\n\t\t{\n\n\t\t\tfor(int k=1;k<=n;k++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b[k])\n\n\t\t\t\t{\n\n\t\t\t\t\ta[i][j]=0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint i,j,flag=0;\n\n\tif(a[1][1]==0&&a[2][2]==0&&a[3][3]==0)\n\n\t    flag=1;\n\n\telse if(a[1][3]==0&&a[2][2]==0&&a[3][1]==0)\n\n\t    flag=1;\n\n\tfor(i=1;i<=3;i++)\n\n\t{\n\n\t\tif(a[i][1]==0&&a[i][2]==0&&a[i][3]==0)\n\n\t\t    flag=1;\n\n\t\telse if(a[1][i]==0&&a[2][i]==0&&a[3][i]==0)\n\n\t\t    flag=1;\n\n\t}\n\n\tif(flag==1)\n\n\t    cout<<\"Yes\"<<endl;\n\n\telse\n\n\t    cout<<\"No\"<<endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\nint main(){\n\n\tint arr[3][3];\n\n\tint tc;\n\n\tint add;\n\n\tint check[3][3]= {0};\n\n\tint count;\n\n\tint i,j;\n\n\tfor(i=0;i<3;i++){\n\n\t\tfor(j=0;j<3;j++){\n\n\t\t\tscanf(\"%d\", &arr[i][j]);\n\n\t\t}\n\n\t}\n\n\tscanf(\"%d\",&tc);\n\n\tint k;\n\n\t\n\n\tfor(k=0;k<tc;k++){\n\n\t\tscanf(\"%d\",&add);\n\n\t\tint j;\n\n\t\tfor(i=0;i<3;i++){\n\n\t\t\tfor(j=0;j<3;j++){\n\n\t\t\t\tif(arr[i][j]== add){\n\n\t\t\t\t\tcheck[i][j] = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tif(check[0][0]+ check [1][1]+ check[2][2]== 3 || check [0][2]+check [1][1]+ check[2][0]==3){\n\n\t\tprintf(\"Yes\\n\");\n\n\t\treturn 0;\n\n\t}\n\n\tfor(i=0;i<3;i++){\n\n\t\tif(check[i][0]+check[i][1]+check[i][2]==3 || check [0][i]+check[1][i]+check[2][i]==3){\n\n\t\t\tprintf(\"Yes\\n\");\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tprintf(\"No\\n\");\n\n\t\n\n\treturn 0;\n\n}"
    },
    {
        "id": "31",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[3][3];\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tcin>>a[i][j];\n\n\t\t}\n\n\t}\n\n\tint t,b;\n\n\tcin>>t;\n\n\twhile(t--)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tfor(int j=0;j<3;j++)\n\n\t\t\t{\n\n\t\t\t\tif(a[i][j]==b)\n\n\t\t\t\t  a[i][j]=0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbool flag1=0,flag2=0,flag3=0;\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tfor(int j=0;j<3;j++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(j==2&&a[i][j]==0)\n\n\t\t\t  flag1=1;\n\n\t\t}\n\n\t}\n\n\tfor(int j=0;j<3;j++)\n\n\t{\n\n\t\tfor(int i=0;i<3;i++)\n\n\t\t{\n\n\t\t\tif(a[i][j])\n\n\t\t\t  break;\n\n\t\t\tif(i==2&&a[i][j]==0)\n\n\t\t\t  flag2=1;\n\n\t\t}\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tfor(int i=0;i<3;i++)\n\n\t{\n\n\t\tif(a[i][2-i])\n\n\t\t  break;\n\n\t\tif(i==2&&a[i][2-i]==0)\n\n\t\t  flag3=1;\n\n\t}\n\n\tif(flag1||flag2||flag3)\n\n\t  cout<<\"Yes\"<<endl;\n\n\telse\n\n\t  cout<<\"No\"<<endl;\n\n } ",
        "optimized_code": "#include<stdio.h>\n\nint main(){\n\n\tint arr[3][3];\n\n\tint tc;\n\n\tint add;\n\n\tint check[3][3]= {0};\n\n\tint count;\n\n\tint i,j;\n\n\tfor(i=0;i<3;i++){\n\n\t\tfor(j=0;j<3;j++){\n\n\t\t\tscanf(\"%d\", &arr[i][j]);\n\n\t\t}\n\n\t}\n\n\tscanf(\"%d\",&tc);\n\n\tint k;\n\n\t\n\n\tfor(k=0;k<tc;k++){\n\n\t\tscanf(\"%d\",&add);\n\n\t\tint j;\n\n\t\tfor(i=0;i<3;i++){\n\n\t\t\tfor(j=0;j<3;j++){\n\n\t\t\t\tif(arr[i][j]== add){\n\n\t\t\t\t\tcheck[i][j] = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tif(check[0][0]+ check [1][1]+ check[2][2]== 3 || check [0][2]+check [1][1]+ check[2][0]==3){\n\n\t\tprintf(\"Yes\\n\");\n\n\t\treturn 0;\n\n\t}\n\n\tfor(i=0;i<3;i++){\n\n\t\tif(check[i][0]+check[i][1]+check[i][2]==3 || check [0][i]+check[1][i]+check[2][i]==3){\n\n\t\t\tprintf(\"Yes\\n\");\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\tprintf(\"No\\n\");\n\n\t\n\n\treturn 0;\n\n}"
    },
    {
        "id": "32",
        "source_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<iomanip>\n\n#include<string>\n\n#include<set>\n\n#include<map>\n\n#include<vector>\n\n#include<queue>\n\n#include<stack>\n\n#include<utility>\n\n#define PI acos(-1.0)\n\nusing namespace std;\n\nint a[3][3];\n\nint main() {\n\n\tint n;\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tscanf(\"%d\",&a[i][j]);\n\n\t\t}\n\n\t}\n\n\tcin >> n;\n\n\tint b;\n\n\twhile(n--) {\n\n\t\tcin >> b;\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\t\tif(a[i][j] == b) {\n\n\t\t\t\t\ta[i][j] = 0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint flag = 0;\n\n\tint ans = 0;\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tans = 0;\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tif(a[i][j] == 0) ans++;\n\n\t\t\telse break;\n\n\t\t}\n\n\t\tif(ans == 3) {\n\n\t\t\tflag = 1;\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tif(flag) cout << \"Yes\" << endl;\n\n\telse {\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tans = 0;\n\n\t\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\t\tif(a[j][i] == 0) ans++;\n\n\t\t\t\telse break;\n\n\t\t\t}\n\n\t\t\tif(ans == 3) {\n\n\t\t\t\tflag = 1;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif(flag) cout << \"Yes\" << endl;\n\n\t\telse{\n\n\t\t\tif((a[0][0] == 0 && a[1][1] == 0 && a[2][2] == 0)||(a[0][2] == 0 && a[1][1] == 0 && a[2][0] == 0)){\n\n\t\t\t\tflag = 1;\n\n\t\t\t}\n\n\t\t\tif(flag) cout << \"Yes\" << endl;\n\n\t\t\telse cout << \"No\" << endl;\n\n\t\t}\n\n\t}\n\n\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main(){\n\n    int matrix[3][3];\n\n    char x;\n\n    \n\n    for(int i=0; i<3; i++){\n\n        for(int j=0; j<3; j++){\n\n            scanf(\"%d\", &matrix[i][j]);\n\n        }\n\n    }\n\n    \n\n    int n;\n\n    scanf(\"%d\", &n);\n\n    \n\n    int input[n];\n\n    for(int k=0; k < n; k++){\n\n        scanf(\"%d\", &input[k]);\n\n        for(int i=0; i<3; i++){\n\n            for(int j=0; j<3; j++){\n\n                if(input[k] == matrix[i][j]){\n\n                    matrix[i][j] = x;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    \n\n    int ctr[8] = {0};\n\n    int last=2;\n\n    \n\n    for(int i=0; i<3; i++){\n\n        if(matrix[i][0]==x){\n\n            ++ctr[0];\n\n        }\n\n        if(matrix[i][2]==x){\n\n            ++ctr[1];\n\n        }\n\n        if(matrix[0][i]==x){\n\n            ++ctr[2];\n\n        }\n\n        if(matrix[2][i]==x){\n\n            ++ctr[3];\n\n        }\n\n        if(matrix[i][i]==x){\n\n            ++ctr[4];\n\n        } \n\n        if(matrix[i][last--]==x){\n\n            ++ctr[5];\n\n        }\n\n        if(matrix[1][i]==x){\n\n            ++ctr[6];\n\n        }\n\n        if(matrix[i][1]==x){\n\n            ++ctr[7];\n\n        }\n\n    }\n\n    \n\n    int flag = 0;\n\n    \n\n    for(int i=0; i<8; i++){\n\n        if(ctr[i] == 3){\n\n            flag = 1;\n\n        }\n\n    }\n\n    printf(\"%s\\n\", (flag == 1) ? \"Yes\" : \"No\");\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "33",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[15],b,i,p[15]={0};\n\n\tfor(i=1;i<=9;i++)\n\n\t\tcin>>a[i];\n\n\tint n;\n\n\tcin>>n;\n\n\tfor(int j=0;j<n;j++)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(i=1;i<=9;i++)\n\n\t\t\tif(b==a[i])\n\n\t\t\t\tp[i]=1;\n\n\t}\n\n\tif(p[5]==1)\n\n\t{\n\n\t\tif(p[2]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[1]==1&&p[9]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[3]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[4]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[1]==1)\n\n\t\t{\n\n\t\t\tif(p[2]==1&&p[3]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[4]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\t}\n\n\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\t}\n\n\telse if(p[1]==1)\n\n\t\t{\n\n\t\t\tif(p[2]==1&&p[3]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[4]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\t\t}\n\n\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\telse cout<<\"No\"<<endl;\n\n\t \n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main(){\n\n    int matrix[3][3];\n\n    char x;\n\n    \n\n    for(int i=0; i<3; i++){\n\n        for(int j=0; j<3; j++){\n\n            scanf(\"%d\", &matrix[i][j]);\n\n        }\n\n    }\n\n    \n\n    int n;\n\n    scanf(\"%d\", &n);\n\n    \n\n    int input[n];\n\n    for(int k=0; k < n; k++){\n\n        scanf(\"%d\", &input[k]);\n\n        for(int i=0; i<3; i++){\n\n            for(int j=0; j<3; j++){\n\n                if(input[k] == matrix[i][j]){\n\n                    matrix[i][j] = x;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    \n\n    int ctr[8] = {0};\n\n    int last=2;\n\n    \n\n    for(int i=0; i<3; i++){\n\n        if(matrix[i][0]==x){\n\n            ++ctr[0];\n\n        }\n\n        if(matrix[i][2]==x){\n\n            ++ctr[1];\n\n        }\n\n        if(matrix[0][i]==x){\n\n            ++ctr[2];\n\n        }\n\n        if(matrix[2][i]==x){\n\n            ++ctr[3];\n\n        }\n\n        if(matrix[i][i]==x){\n\n            ++ctr[4];\n\n        } \n\n        if(matrix[i][last--]==x){\n\n            ++ctr[5];\n\n        }\n\n        if(matrix[1][i]==x){\n\n            ++ctr[6];\n\n        }\n\n        if(matrix[i][1]==x){\n\n            ++ctr[7];\n\n        }\n\n    }\n\n    \n\n    int flag = 0;\n\n    \n\n    for(int i=0; i<8; i++){\n\n        if(ctr[i] == 3){\n\n            flag = 1;\n\n        }\n\n    }\n\n    printf(\"%s\\n\", (flag == 1) ? \"Yes\" : \"No\");\n\n\n\n    return 0;\n\n}"
    },
    {
        "id": "34",
        "source_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<iomanip>\n\n#include<string>\n\n#include<set>\n\n#include<map>\n\n#include<vector>\n\n#include<queue>\n\n#include<stack>\n\n#include<utility>\n\n#define PI acos(-1.0)\n\nusing namespace std;\n\nint a[3][3];\n\nint main() {\n\n\tint n;\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tscanf(\"%d\",&a[i][j]);\n\n\t\t}\n\n\t}\n\n\tcin >> n;\n\n\tint b;\n\n\twhile(n--) {\n\n\t\tcin >> b;\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\t\tif(a[i][j] == b) {\n\n\t\t\t\t\ta[i][j] = 0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint flag = 0;\n\n\tint ans = 0;\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tans = 0;\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tif(a[i][j] == 0) ans++;\n\n\t\t\telse break;\n\n\t\t}\n\n\t\tif(ans == 3) {\n\n\t\t\tflag = 1;\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tif(flag) cout << \"Yes\" << endl;\n\n\telse {\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tans = 0;\n\n\t\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\t\tif(a[j][i] == 0) ans++;\n\n\t\t\t\telse break;\n\n\t\t\t}\n\n\t\t\tif(ans == 3) {\n\n\t\t\t\tflag = 1;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif(flag) cout << \"Yes\" << endl;\n\n\t\telse{\n\n\t\t\tif((a[0][0] == 0 && a[1][1] == 0 && a[2][2] == 0)||(a[0][2] == 0 && a[1][1] == 0 && a[2][0] == 0)){\n\n\t\t\t\tflag = 1;\n\n\t\t\t}\n\n\t\t\tif(flag) cout << \"Yes\" << endl;\n\n\t\t\telse cout << \"No\" << endl;\n\n\t\t}\n\n\t}\n\n\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\nint main(){\n\n    int array[3][3];\n\n    int n; \n\n    int add;\n\n    int check[3][3]={0};\n\n    int count;\n\n    for(int i = 0; i < 3; i++)\n\n\t{ \n\n        for(int j = 0; j < 3; j++)\n\n\t\t{ \n\n            scanf(\"%d\", &array[i][j]);\n\n        } \n\n    }\n\n    scanf(\"%d\",&n);\n\n    for(int k = 0; k < n; k++)\n\n\t{\n\n        scanf(\"%d\",&add);\n\n        for(int i = 0; i < 3; i++)\n\n\t\t{\n\n            for(int j = 0; j < 3; j++)\n\n\t\t\t{\n\n                if(array[i][j] == add)\n\n                {\n\n                    check[i][j] = 1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    if(check[0][0] + check[1][1] + check[2][2] == 3 || check[0][2] + check[1][1] + check[2][0] == 3)\n\n\t{\n\n        printf(\"Yes\\n\");\n\n        return 0;\n\n    }\n\n    for(int i = 0; i < 3; i++){\n\n        if(check[i][0] + check[i][1] + check[i][2] == 3 || check[0][i] + check[1][i] + check[2][i] == 3)\n\n\t\t{\n\n            printf(\"Yes\\n\");\n\n            return 0;\n\n        }\n\n    }\n\n    printf(\"No\\n\");\n\n    return 0;\n\n}"
    },
    {
        "id": "35",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[15],b,i,p[15]={0};\n\n\tfor(i=1;i<=9;i++)\n\n\t\tcin>>a[i];\n\n\tint n;\n\n\tcin>>n;\n\n\tfor(int j=0;j<n;j++)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(i=1;i<=9;i++)\n\n\t\t\tif(b==a[i])\n\n\t\t\t\tp[i]=1;\n\n\t}\n\n\tif(p[5]==1)\n\n\t{\n\n\t\tif(p[2]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[1]==1&&p[9]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[3]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[4]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[1]==1)\n\n\t\t{\n\n\t\t\tif(p[2]==1&&p[3]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[4]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\t}\n\n\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\t}\n\n\telse if(p[1]==1)\n\n\t\t{\n\n\t\t\tif(p[2]==1&&p[3]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[4]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\t\t}\n\n\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\telse cout<<\"No\"<<endl;\n\n\t \n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\nint main(){\n\n    int array[3][3];\n\n    int n; \n\n    int add;\n\n    int check[3][3]={0};\n\n    int count;\n\n    for(int i = 0; i < 3; i++)\n\n\t{ \n\n        for(int j = 0; j < 3; j++)\n\n\t\t{ \n\n            scanf(\"%d\", &array[i][j]);\n\n        } \n\n    }\n\n    scanf(\"%d\",&n);\n\n    for(int k = 0; k < n; k++)\n\n\t{\n\n        scanf(\"%d\",&add);\n\n        for(int i = 0; i < 3; i++)\n\n\t\t{\n\n            for(int j = 0; j < 3; j++)\n\n\t\t\t{\n\n                if(array[i][j] == add)\n\n                {\n\n                    check[i][j] = 1;\n\n                }\n\n            }\n\n        }\n\n    }\n\n    if(check[0][0] + check[1][1] + check[2][2] == 3 || check[0][2] + check[1][1] + check[2][0] == 3)\n\n\t{\n\n        printf(\"Yes\\n\");\n\n        return 0;\n\n    }\n\n    for(int i = 0; i < 3; i++){\n\n        if(check[i][0] + check[i][1] + check[i][2] == 3 || check[0][i] + check[1][i] + check[2][i] == 3)\n\n\t\t{\n\n            printf(\"Yes\\n\");\n\n            return 0;\n\n        }\n\n    }\n\n    printf(\"No\\n\");\n\n    return 0;\n\n}"
    },
    {
        "id": "36",
        "source_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<iomanip>\n\n#include<string>\n\n#include<set>\n\n#include<map>\n\n#include<vector>\n\n#include<queue>\n\n#include<stack>\n\n#include<utility>\n\n#define PI acos(-1.0)\n\nusing namespace std;\n\nint a[3][3];\n\nint main() {\n\n\tint n;\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tscanf(\"%d\",&a[i][j]);\n\n\t\t}\n\n\t}\n\n\tcin >> n;\n\n\tint b;\n\n\twhile(n--) {\n\n\t\tcin >> b;\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\t\tif(a[i][j] == b) {\n\n\t\t\t\t\ta[i][j] = 0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint flag = 0;\n\n\tint ans = 0;\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tans = 0;\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tif(a[i][j] == 0) ans++;\n\n\t\t\telse break;\n\n\t\t}\n\n\t\tif(ans == 3) {\n\n\t\t\tflag = 1;\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tif(flag) cout << \"Yes\" << endl;\n\n\telse {\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tans = 0;\n\n\t\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\t\tif(a[j][i] == 0) ans++;\n\n\t\t\t\telse break;\n\n\t\t\t}\n\n\t\t\tif(ans == 3) {\n\n\t\t\t\tflag = 1;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif(flag) cout << \"Yes\" << endl;\n\n\t\telse{\n\n\t\t\tif((a[0][0] == 0 && a[1][1] == 0 && a[2][2] == 0)||(a[0][2] == 0 && a[1][1] == 0 && a[2][0] == 0)){\n\n\t\t\t\tflag = 1;\n\n\t\t\t}\n\n\t\t\tif(flag) cout << \"Yes\" << endl;\n\n\t\t\telse cout << \"No\" << endl;\n\n\t\t}\n\n\t}\n\n\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n  int a[3][3], n;\n\n  for(int i = 0; i < 3; i++) {\n\n    for(int j = 0; j < 3; j++) {\n\n      scanf(\"%d\", &a[i][j]);\n\n    }\n\n  }\n\n  scanf(\"%d\", &n);\n\n\n\n  int b[n];\n\n  for(int i = 0; i < n; i++) {\n\n      scanf(\"%d\", &b[i]);\n\n    \n\n    for(int j = 0; j < 3; j++) {\n\n        for(int k = 0; k < 3; k++) {\n\n            if(b[i] == a[j][k]) {\n\n              a[j][k] = 0;\n\n            }\n\n        }\n\n    }\n\n\n\n  }\n\n\n\n  if( a[0][0] == 0 && a[0][1] == 0 && a[0][2] == 0 )   printf(\"Yes\");\n\n\n\n  else if( a[1][0] == 0 && a[1][1] == 0 && a[1][2] == 0 )  printf(\"Yes\");\n\n\n\n  else if( a[2][0] == 0 && a[2][1] == 0 && a[2][2] == 0 )  printf(\"Yes\");\n\n\n\n  else if( a[0][0] == 0 && a[1][0] == 0 && a[2][0] == 0 )  printf(\"Yes\");\n\n\n\n  else if( a[0][1] == 0 && a[1][1] == 0 && a[2][1] == 0 ) printf(\"Yes\");\n\n\n\n  else if( a[0][2] == 0 && a[1][2] == 0 && a[2][2] == 0 ) printf(\"Yes\");\n\n\n\n  else if( a[0][0] == 0 && a[1][1] == 0 && a[2][2] == 0 ) printf(\"Yes\");\n\n\n\n  else if( a[0][2] == 0 && a[1][1] == 0 && a[2][0] == 0 ) printf(\"Yes\");\n\n\n\n  else  printf(\"No\");\n\n\n\n  return 0;\n\n}"
    },
    {
        "id": "37",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[15],b,i,p[15]={0};\n\n\tfor(i=1;i<=9;i++)\n\n\t\tcin>>a[i];\n\n\tint n;\n\n\tcin>>n;\n\n\tfor(int j=0;j<n;j++)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(i=1;i<=9;i++)\n\n\t\t\tif(b==a[i])\n\n\t\t\t\tp[i]=1;\n\n\t}\n\n\tif(p[5]==1)\n\n\t{\n\n\t\tif(p[2]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[1]==1&&p[9]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[3]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[4]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[1]==1)\n\n\t\t{\n\n\t\t\tif(p[2]==1&&p[3]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[4]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\t}\n\n\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\t}\n\n\telse if(p[1]==1)\n\n\t\t{\n\n\t\t\tif(p[2]==1&&p[3]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[4]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\t\t}\n\n\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\telse cout<<\"No\"<<endl;\n\n\t \n\n\treturn 0;\n\n}",
        "optimized_code": "#include <stdio.h>\n\n\n\nint main() {\n\n  int a[3][3], n;\n\n  for(int i = 0; i < 3; i++) {\n\n    for(int j = 0; j < 3; j++) {\n\n      scanf(\"%d\", &a[i][j]);\n\n    }\n\n  }\n\n  scanf(\"%d\", &n);\n\n\n\n  int b[n];\n\n  for(int i = 0; i < n; i++) {\n\n      scanf(\"%d\", &b[i]);\n\n    \n\n    for(int j = 0; j < 3; j++) {\n\n        for(int k = 0; k < 3; k++) {\n\n            if(b[i] == a[j][k]) {\n\n              a[j][k] = 0;\n\n            }\n\n        }\n\n    }\n\n\n\n  }\n\n\n\n  if( a[0][0] == 0 && a[0][1] == 0 && a[0][2] == 0 )   printf(\"Yes\");\n\n\n\n  else if( a[1][0] == 0 && a[1][1] == 0 && a[1][2] == 0 )  printf(\"Yes\");\n\n\n\n  else if( a[2][0] == 0 && a[2][1] == 0 && a[2][2] == 0 )  printf(\"Yes\");\n\n\n\n  else if( a[0][0] == 0 && a[1][0] == 0 && a[2][0] == 0 )  printf(\"Yes\");\n\n\n\n  else if( a[0][1] == 0 && a[1][1] == 0 && a[2][1] == 0 ) printf(\"Yes\");\n\n\n\n  else if( a[0][2] == 0 && a[1][2] == 0 && a[2][2] == 0 ) printf(\"Yes\");\n\n\n\n  else if( a[0][0] == 0 && a[1][1] == 0 && a[2][2] == 0 ) printf(\"Yes\");\n\n\n\n  else if( a[0][2] == 0 && a[1][1] == 0 && a[2][0] == 0 ) printf(\"Yes\");\n\n\n\n  else  printf(\"No\");\n\n\n\n  return 0;\n\n}"
    },
    {
        "id": "38",
        "source_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<iomanip>\n\n#include<string>\n\n#include<set>\n\n#include<map>\n\n#include<vector>\n\n#include<queue>\n\n#include<stack>\n\n#include<utility>\n\n#define PI acos(-1.0)\n\nusing namespace std;\n\nint a[3][3];\n\nint main() {\n\n\tint n;\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tscanf(\"%d\",&a[i][j]);\n\n\t\t}\n\n\t}\n\n\tcin >> n;\n\n\tint b;\n\n\twhile(n--) {\n\n\t\tcin >> b;\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\t\tif(a[i][j] == b) {\n\n\t\t\t\t\ta[i][j] = 0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint flag = 0;\n\n\tint ans = 0;\n\n\tfor(int i = 0; i < 3; i++) {\n\n\t\tans = 0;\n\n\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\tif(a[i][j] == 0) ans++;\n\n\t\t\telse break;\n\n\t\t}\n\n\t\tif(ans == 3) {\n\n\t\t\tflag = 1;\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tif(flag) cout << \"Yes\" << endl;\n\n\telse {\n\n\t\tfor(int i = 0; i < 3; i++) {\n\n\t\t\tans = 0;\n\n\t\t\tfor(int j = 0; j < 3; j++) {\n\n\t\t\t\tif(a[j][i] == 0) ans++;\n\n\t\t\t\telse break;\n\n\t\t\t}\n\n\t\t\tif(ans == 3) {\n\n\t\t\t\tflag = 1;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif(flag) cout << \"Yes\" << endl;\n\n\t\telse{\n\n\t\t\tif((a[0][0] == 0 && a[1][1] == 0 && a[2][2] == 0)||(a[0][2] == 0 && a[1][1] == 0 && a[2][0] == 0)){\n\n\t\t\t\tflag = 1;\n\n\t\t\t}\n\n\t\t\tif(flag) cout << \"Yes\" << endl;\n\n\t\t\telse cout << \"No\" << endl;\n\n\t\t}\n\n\t}\n\n\n\n\treturn 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\n\n\nint main(){\n\n\tint arr[3][3], flag[3][3] = {0};\n\n\tfor(int i = 0; i < 3; i++){\n\n\t\tfor(int j = 0; j < 3; j++){\n\n\t\t\tscanf(\"%d\", &arr[i][j]);\n\n\t\t}\n\n\t}\n\n\tint n;\n\n\tscanf(\"%d\", &n);\n\n\tint brr[n];\n\n\tfor(int i = 0; i < n; i++){\n\n\t\tscanf(\"%d\", &brr[i]);\n\n\t\tfor(int j = 0; j < 3; j++){\n\n\t\t\tfor(int k = 0; k < 3; k++){\n\n\t\t\t\tif(arr[j][k] == brr[i]){\n\n\t\t\t\t\tflag[j][k] = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint check = 0;\n\n\tfor(int i = 0; i < 3; i++){\n\n\t\tif(flag[i][0] && flag[i][1] && flag[i][2]){\n\n\t\t\tcheck = 1;\n\n\t\t}\n\n\t}\n\n\tfor(int i = 0; i < 3; i++){\n\n\t\tif(flag[0][i] && flag[1][i] && flag[2][i]){\n\n\t\t\tcheck = 1;\n\n\t\t}\n\n\t}\n\n\tif(flag[0][0] && flag[1][1] && flag[2][2]){\n\n\t\tcheck = 1;\n\n\t}\n\n\tif(flag[0][2] && flag[1][1] && flag[2][0]){\n\n\t\tcheck = 1;\n\n\t}\n\n\t(check) ? puts(\"Yes\") : puts(\"No\");\n\n\treturn 0;\n\n}\n"
    },
    {
        "id": "39",
        "source_code": "#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n\tint a[15],b,i,p[15]={0};\n\n\tfor(i=1;i<=9;i++)\n\n\t\tcin>>a[i];\n\n\tint n;\n\n\tcin>>n;\n\n\tfor(int j=0;j<n;j++)\n\n\t{\n\n\t\tcin>>b;\n\n\t\tfor(i=1;i<=9;i++)\n\n\t\t\tif(b==a[i])\n\n\t\t\t\tp[i]=1;\n\n\t}\n\n\tif(p[5]==1)\n\n\t{\n\n\t\tif(p[2]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[1]==1&&p[9]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[3]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[4]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\telse if(p[1]==1)\n\n\t\t{\n\n\t\t\tif(p[2]==1&&p[3]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[4]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\t}\n\n\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\t}\n\n\telse if(p[1]==1)\n\n\t\t{\n\n\t\t\tif(p[2]==1&&p[3]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[4]==1&&p[7]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\t\t}\n\n\t\telse if(p[9]==1)\n\n\t\t{\n\n\t\t\tif(p[3]==1&&p[6]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse if(p[7]==1&&p[8]==1) cout<<\"Yes\"<<endl;\n\n\t\t\telse cout<<\"No\"<<endl;\n\n\t\t}\n\n\telse cout<<\"No\"<<endl;\n\n\t \n\n\treturn 0;\n\n}",
        "optimized_code": "#include<stdio.h>\n\n\n\nint main(){\n\n\tint arr[3][3], flag[3][3] = {0};\n\n\tfor(int i = 0; i < 3; i++){\n\n\t\tfor(int j = 0; j < 3; j++){\n\n\t\t\tscanf(\"%d\", &arr[i][j]);\n\n\t\t}\n\n\t}\n\n\tint n;\n\n\tscanf(\"%d\", &n);\n\n\tint brr[n];\n\n\tfor(int i = 0; i < n; i++){\n\n\t\tscanf(\"%d\", &brr[i]);\n\n\t\tfor(int j = 0; j < 3; j++){\n\n\t\t\tfor(int k = 0; k < 3; k++){\n\n\t\t\t\tif(arr[j][k] == brr[i]){\n\n\t\t\t\t\tflag[j][k] = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint check = 0;\n\n\tfor(int i = 0; i < 3; i++){\n\n\t\tif(flag[i][0] && flag[i][1] && flag[i][2]){\n\n\t\t\tcheck = 1;\n\n\t\t}\n\n\t}\n\n\tfor(int i = 0; i < 3; i++){\n\n\t\tif(flag[0][i] && flag[1][i] && flag[2][i]){\n\n\t\t\tcheck = 1;\n\n\t\t}\n\n\t}\n\n\tif(flag[0][0] && flag[1][1] && flag[2][2]){\n\n\t\tcheck = 1;\n\n\t}\n\n\tif(flag[0][2] && flag[1][1] && flag[2][0]){\n\n\t\tcheck = 1;\n\n\t}\n\n\t(check) ? puts(\"Yes\") : puts(\"No\");\n\n\treturn 0;\n\n}\n"
    },
    {
        "id": "40",
        "source_code": "#include <iostream>\n\n#include <algorithm>\n\nusing namespace std;\n\n#define LL long long\n\n#define MAX_SIZE 1010\n\nint n, m;\n\nLL r, a;\n\nLL x[MAX_SIZE], y[MAX_SIZE], z[MAX_SIZE], t[MAX_SIZE];\n\n\n\nint main()\n\n{\n\n\tcin >> n >> m;\n\n\tfor (int i = 0; i < n; ++i)\n\n\t\tcin >> x[i] >> y[i] >> z[i];\n\n\n\n\tint P[8][3] = { { 1,1,1 },{ 1,1,-1 },{ 1,-1,1 },{ 1,-1,-1 },{ -1,1,1 },{ -1,1,-1 },{ -1,-1,1 },{ -1,-1,-1 } };\n\n\tfor (int i = 0; i < 8; ++i) {\n\n\t\tfor (int j = 0; j < n; ++j)\n\n\t\t\tt[j] = x[j] * P[i][0] + y[j] * P[i][1] + z[j] * P[i][2];\n\n\t\tsort(t, t + n);\n\n\t\ta = 0;\n\n\t\tfor (int k = n - m; k < n; ++k)\n\n\t\t\ta += t[k];\n\n\t\tif (r < a)\n\n\t\t\tr = a;\n\n\t}\n\n\tcout << r << endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <cstdio>\n\n#include <algorithm>\n\nusing namespace std;\n\n#define LL long long\n\n#define MAX_SIZE 1010\n\nint n, m;\n\nLL r, a;\n\nLL x[MAX_SIZE], y[MAX_SIZE], z[MAX_SIZE], t[MAX_SIZE];\n\n\n\nint main()\n\n{\n\n\tscanf(\"%d %d\", &n, &m);\n\n\tfor (int i = 0; i < n; ++i)\n\n\t\tscanf(\"%lld %lld %lld\", &x[i], &y[i], &z[i]);\n\n\n\n\tint P[8][3] = { { 1,1,1 },{ 1,1,-1 },{ 1,-1,1 },{ 1,-1,-1 },{ -1,1,1 },{ -1,1,-1 },{ -1,-1,1 },{ -1,-1,-1 } };\n\n\tfor (int i = 0; i < 8; ++i) {\n\n\t\tfor (int j = 0; j < n; ++j)\n\n\t\t\tt[j] = x[j] * P[i][0] + y[j] * P[i][1] + z[j] * P[i][2];\n\n\t\tsort(t, t + n);\n\n\t\ta = 0;\n\n\t\tfor (int k = n - m; k < n; ++k)\n\n\t\t\ta += t[k];\n\n\t\tif (r < a)\n\n\t\t\tr = a;\n\n\t}\n\n\tprintf(\"%lld\\n\", r);\n\n\treturn 0;\n\n}"
    },
    {
        "id": "41",
        "source_code": "#include <iostream>\n\n#include <algorithm>\n\nusing namespace std;\n\n#define LL long long\n\n#define MAX_SIZE 1010\n\nint n, m;\n\nLL r, a;\n\nLL x[MAX_SIZE], y[MAX_SIZE], z[MAX_SIZE], t[MAX_SIZE];\n\n\n\nint main()\n\n{\n\n\tios::sync_with_stdio(false);\n\n\tcin >> n >> m;\n\n\tfor (int i = 0; i < n; ++i)\n\n\t\tcin >> x[i] >> y[i] >> z[i];\n\n\n\n\tint P[8][3] = { { 1,1,1 },{ 1,1,-1 },{ 1,-1,1 },{ 1,-1,-1 },{ -1,1,1 },{ -1,1,-1 },{ -1,-1,1 },{ -1,-1,-1 } };\n\n\tfor (int i = 0; i < 8; ++i) {\n\n\t\tfor (int j = 0; j < n; ++j)\n\n\t\t\tt[j] = x[j] * P[i][0] + y[j] * P[i][1] + z[j] * P[i][2];\n\n\t\tsort(t, t + n);\n\n\t\ta = 0;\n\n\t\tfor (int k = n - m; k < n; ++k)\n\n\t\t\ta += t[k];\n\n\t\tif (r < a)\n\n\t\t\tr = a;\n\n\t}\n\n\tcout << r << endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <cstdio>\n\n#include <algorithm>\n\nusing namespace std;\n\n#define LL long long\n\n#define MAX_SIZE 1010\n\nint n, m;\n\nLL r, a;\n\nLL x[MAX_SIZE], y[MAX_SIZE], z[MAX_SIZE], t[MAX_SIZE];\n\n\n\nint main()\n\n{\n\n\tscanf(\"%d %d\", &n, &m);\n\n\tfor (int i = 0; i < n; ++i)\n\n\t\tscanf(\"%lld %lld %lld\", &x[i], &y[i], &z[i]);\n\n\n\n\tint P[8][3] = { { 1,1,1 },{ 1,1,-1 },{ 1,-1,1 },{ 1,-1,-1 },{ -1,1,1 },{ -1,1,-1 },{ -1,-1,1 },{ -1,-1,-1 } };\n\n\tfor (int i = 0; i < 8; ++i) {\n\n\t\tfor (int j = 0; j < n; ++j)\n\n\t\t\tt[j] = x[j] * P[i][0] + y[j] * P[i][1] + z[j] * P[i][2];\n\n\t\tsort(t, t + n);\n\n\t\ta = 0;\n\n\t\tfor (int k = n - m; k < n; ++k)\n\n\t\t\ta += t[k];\n\n\t\tif (r < a)\n\n\t\t\tr = a;\n\n\t}\n\n\tprintf(\"%lld\\n\", r);\n\n\treturn 0;\n\n}"
    },
    {
        "id": "42",
        "source_code": "# include \"iostream\"\n\n# include \"cstdio\"\n\n# include \"algorithm\" \n\n\n\nusing namespace std;\n\n\n\nconst int maxm=1000+10; \n\n\n\nint n,\t//n\u4e2a\u86cb\u7cd5 \n\n\tm; \t//\u53d6\u51fam\u4e2a\u86cb\u7cd5 \n\n\n\nlong long \n\n\tdp[9][maxm], \n\n\tans,now; \n\n\n\nint main(){\n\n\tlong long x,y,z;\n\n\tregister int i,j; \n\n\tscanf(\"%d%d\",&n,&m);\n\n\tfor(i=1;i<=n;i++){\n\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z); \n\n\t\tdp[1][i]=x+y+z; \n\n\t\tdp[2][i]=x+y-z;\n\n\t\tdp[3][i]=x-y+z;\n\n\t\tdp[4][i]=-x+y+z;\n\n\t\tdp[5][i]=x-y-z;\n\n\t\tdp[6][i]=-x-y+z;\n\n\t\tdp[7][i]=-x+y-z;\n\n\t\tdp[8][i]=-x-y-z;\n\n\t}\n\n\tfor(i=1;i<=8;i++){\n\n\t\tsort(dp[i]+1,dp[i]+1+n,greater<long long>());\n\n\t\tnow=0; \n\n\t\tfor(j=1;j<=m;j++){\n\n\t\t\tnow+=dp[i][j]; \n\n\t\t}\n\n\t\tans=max(ans,now); \n\n\t}\n\n\tprintf(\"%lld\",ans); \n\n\treturn 0; \n\n} ",
        "optimized_code": "# include \"cstdio\"\n\n# include \"algorithm\" \n\n \n\nconst int maxm=1000+10; \n\n \n\nint n,\t//n\u4e2a\u86cb\u7cd5 \n\n\tm; \t//\u53d6\u51fam\u4e2a\u86cb\u7cd5 \n\n \n\nlong long \n\n\tdp[5][maxm], \n\n\tans,now1,now2; \n\n \n\ninline long long read(){\n\n\tlong long s=0,w=1;\n\n\tchar ch=getchar();\n\n\twhile(ch<'0' || ch>'9'){\n\n\t\tif(ch=='-') w=-w;\n\n\t\tch=getchar();\n\n\t}\n\n\twhile(ch>='0' && ch<='9'){\n\n\t\ts=s*10+ch-'0';\n\n\t\tch=getchar();\n\n\t}\n\n\treturn s*w;\n\n}\n\n\n\ninline long long max(long long x,long long y){\n\n\treturn x>y?x:y; \n\n} \n\n\n\ninline bool comp(long long x,long long y){\n\n\treturn x>y?true:false; \n\n} \n\n\n\nint main(){\n\n\tlong long x,y,z;\n\n\tregister int i,j; \n\n\tn=read(),m=read();\n\n\tfor(i=1;i<=n;i++){\n\n\t\tx=read(),y=read(),z=read(); \n\n\t\tdp[1][i]=x+y+z; //-x-y-z\n\n\t\tdp[2][i]=x+y-z;\t//-x-y+z\n\n\t\tdp[3][i]=x-y+z;\t//-x+y-z\n\n\t\tdp[4][i]=x-y-z;\t//-x+y+z\n\n\t}\n\n\tfor(i=1;i<=4;i++){\n\n\t\tstd::sort(dp[i]+1,dp[i]+1+n,comp);\n\n\t\tnow1=now2=0; \n\n\t\tfor(j=1;j<=m;j++){\n\n\t\t\tnow1+=dp[i][j];\n\n\t\t\tnow2+=dp[i][n-j+1]; \n\n\t\t}\n\n\t\tnow1=now1>0?now1:-now1;\n\n\t\tnow2=now2>0?now2:-now2; \n\n\t\tans=max(ans,max(now1,now2)); \n\n\t}\n\n\tprintf(\"%lld\",ans); \n\n\treturn 0; \n\n} "
    },
    {
        "id": "43",
        "source_code": "# include \"iostream\"\n\n# include \"cstdio\"\n\n# include \"cmath\"\n\n# include \"algorithm\" \n\n\n\nusing namespace std;\n\n\n\nconst int maxm=1000+10; \n\n\n\nint n,\t//n\u4e2a\u86cb\u7cd5 \n\n\tm; \t//\u53d6\u51fam\u4e2a\u86cb\u7cd5 \n\n\n\nlong long \n\n\tdp[5][maxm], \n\n\tans,now1,now2; \n\n\n\ninline long long read(){\n\n\tlong long s=0,w=1;\n\n\tchar ch=getchar();\n\n\twhile(ch<'0' || ch>'9'){\n\n\t\tif(ch=='-') w=-w;\n\n\t\tch=getchar();\n\n\t}\n\n\twhile(ch>='0' && ch<='9'){\n\n\t\ts=s*10+ch-'0';\n\n\t\tch=getchar();\n\n\t}\n\n\treturn s*w;\n\n}\n\n\n\nint main(){\n\n\tlong long x,y,z;\n\n\tregister int i,j; \n\n\tn=read(),m=read();\n\n\tfor(i=1;i<=n;i++){\n\n\t\tx=read(),y=read(),z=read(); \n\n\t\tdp[1][i]=x+y+z; //-x-y-z\n\n\t\tdp[2][i]=x+y-z;\t//-x-y+z\n\n\t\tdp[3][i]=x-y+z;\t//-x+y-z\n\n\t\tdp[4][i]=x-y-z;\t//-x+y+z\n\n\t}\n\n\tfor(i=1;i<=4;i++){\n\n\t\tsort(dp[i]+1,dp[i]+1+n,greater<long long>());\n\n\t\tnow1=now2=0; \n\n\t\tfor(j=1;j<=m;j++){\n\n\t\t\tnow1+=dp[i][j];\n\n\t\t\tnow2+=dp[i][n-j+1]; \n\n\t\t}\n\n\t\tans=max(ans,max(abs(now1),abs(now2))); \n\n\t}\n\n\tprintf(\"%lld\",ans); \n\n\treturn 0; \n\n} ",
        "optimized_code": "# include \"cstdio\"\n\n# include \"algorithm\" \n\n \n\nconst int maxm=1000+10; \n\n \n\nint n,\t//n\u4e2a\u86cb\u7cd5 \n\n\tm; \t//\u53d6\u51fam\u4e2a\u86cb\u7cd5 \n\n \n\nlong long \n\n\tdp[5][maxm], \n\n\tans,now1,now2; \n\n \n\ninline long long read(){\n\n\tlong long s=0,w=1;\n\n\tchar ch=getchar();\n\n\twhile(ch<'0' || ch>'9'){\n\n\t\tif(ch=='-') w=-w;\n\n\t\tch=getchar();\n\n\t}\n\n\twhile(ch>='0' && ch<='9'){\n\n\t\ts=s*10+ch-'0';\n\n\t\tch=getchar();\n\n\t}\n\n\treturn s*w;\n\n}\n\n\n\ninline long long max(long long x,long long y){\n\n\treturn x>y?x:y; \n\n} \n\n\n\ninline bool comp(long long x,long long y){\n\n\treturn x>y?true:false; \n\n} \n\n\n\nint main(){\n\n\tlong long x,y,z;\n\n\tregister int i,j; \n\n\tn=read(),m=read();\n\n\tfor(i=1;i<=n;i++){\n\n\t\tx=read(),y=read(),z=read(); \n\n\t\tdp[1][i]=x+y+z; //-x-y-z\n\n\t\tdp[2][i]=x+y-z;\t//-x-y+z\n\n\t\tdp[3][i]=x-y+z;\t//-x+y-z\n\n\t\tdp[4][i]=x-y-z;\t//-x+y+z\n\n\t}\n\n\tfor(i=1;i<=4;i++){\n\n\t\tstd::sort(dp[i]+1,dp[i]+1+n,comp);\n\n\t\tnow1=now2=0; \n\n\t\tfor(j=1;j<=m;j++){\n\n\t\t\tnow1+=dp[i][j];\n\n\t\t\tnow2+=dp[i][n-j+1]; \n\n\t\t}\n\n\t\tnow1=now1>0?now1:-now1;\n\n\t\tnow2=now2>0?now2:-now2; \n\n\t\tans=max(ans,max(now1,now2)); \n\n\t}\n\n\tprintf(\"%lld\",ans); \n\n\treturn 0; \n\n} "
    },
    {
        "id": "44",
        "source_code": "#include<iostream>\n\n#include<algorithm>\n\nusing namespace std;\n\n\n\nint main(){\n\n  int n,k,i;\n\n  long long int x,y,z,a[8][1000],sum=0,ans=0;\n\n  cin>>n>>k;\n\n  for(i=0;i<n;i++){\n\n    cin>>x>>y>>z;\n\n    a[0][i]=x+y+z;\n\n    a[1][i]=x+y-z;\n\n    a[2][i]=x-y+z;\n\n    a[3][i]=x-y-z;\n\n    a[4][i]=-x+y+z;\n\n    a[5][i]=-x+y-z;\n\n    a[6][i]=-x-y+z;\n\n    a[7][i]=-x-y-z;\n\n  }\n\n  for(i=0;i<8;i++){\n\n    sort(a[i],a[i]+n);\n\n    sum=0;\n\n    for(int j=n-1;j>=n-k;j--)\n\n      sum+=a[i][j];\n\n    if(ans<sum)\n\n      ans=sum;\n\n  }\n\n  cout << ans<<endl;\n\n}",
        "optimized_code": "#include<cstdio>\n\n#include<algorithm>\n\nusing namespace std;\n\nint main(){\n\n  int n,m;\n\n  long x,y,z,s[8][1000],sum,ans=0;\n\n  scanf(\"%d %d\",&n,&m);\n\n  for(int i=0;i<n;i++){\n\n    scanf(\"%ld %ld %ld\",&x,&y,&z);\n\n    s[0][i]=x+y+z;\n\n    s[1][i]=x+y-z;\n\n    s[2][i]=x-y+z;\n\n    s[3][i]=x-y-z;\n\n    s[4][i]=-1*x+y+z;\n\n    s[5][i]=-1*x+y-z;\n\n    s[6][i]=-1*x-y+z;\n\n    s[7][i]=-1*x-y-z;\n\n  }\n\n  for(int i=0;i<8;i++)\n\n    sort(s[i],s[i]+n);\n\n  for(int i=0;i<8;i++){\n\n    sum=0;\n\n    for(int j=n-1;j>=n-m;j--)\n\n      sum+=s[i][j];\n\n    ans=max(ans,sum);\n\n  }\n\n  printf(\"%ld\\n\",ans);\n\n}"
    },
    {
        "id": "45",
        "source_code": "#include <iostream>\n\n#include <vector>\n\n\n\n\n\nint main(void) {\n\n    int N;\n\n    std::vector<int> nest,primes;\n\n    std::vector<int> mod;\n\n\n\n    std::cin >> N;\n\n\n\n    nest.resize(55556);\n\n\n\n    int idx = 2;\n\n    while(idx < 55556) {\n\n        if(nest[idx] == 0) {\n\n            int i = 1;\n\n            while(true) {\n\n                if(i * idx + idx > 55555)\n\n                    break;\n\n                nest[i * idx + idx] = 1;\n\n                i++;\n\n            }\n\n        }\n\n        idx++;\n\n    }\n\n\n\n    for(int i = 2; i < nest.size(); i++) {\n\n        if(nest[i] == 0 && i%5==1)\n\n            mod.push_back(i);\n\n    }\n\n\n\n\n\n    for(int i = 0; i < N; i++) {\n\n        std::cout << mod[i] << \" \";\n\n    }\n\n\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <iostream>\n\nint f(int n){for(int i=3;i<n;i+=2)if(n%i == 0)return 0;return 1;}int main(){int N;std::cin>>N;int c=0,i=0;while(c<N){int n=11+i*10;if(f(n)){std::cout<<n<<\" \";c++;}i++;}}\n"
    },
    {
        "id": "46",
        "source_code": "#include <iostream>\n\n#include <stdio.h>\n\n#include <string.h>\n\n#define Max 55555\n\nusing namespace std;\n\nint n;\n\nbool isprime[Max];\n\nvoid solve()\n\n{\n\n\tmemset(isprime,true,sizeof(isprime));\n\n\tisprime[0]=isprime[1]=false;\n\n\tfor(int i=2;i<Max;i++)\n\n\t{\n\n\t\tif(isprime[i])\n\n\t\t{\n\n\t\t\tfor(int j=2*i;j<Max;j+=i)\n\n\t\t\t\tisprime[j]=false;\n\n\t\t}\n\n\t}\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d\",&n);\n\n\tsolve();\n\n\tint j=0,data[Max],t=n,sum=0;\n\n\tfor(int i=sum+1;i<Max&&n;i++)\n\n\t{\n\n\t\tif(isprime[i])\n\n\t\t\tif((i-1)%5==0)\n\n\t\t\t\tdata[j++]=i,n--;\n\n\t}\n\n\tfor(int i=0;i<t-1;i++)\n\n\t\tprintf(\"%d \",data[i]);\n\n\tprintf(\"%d\\n\",data[t-1]);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <string.h>\n\n#include <cstdio>\n\n#include <string>\n\n#include <cmath>\n\n#include <vector>\n\n#include <stack>\n\n#include <queue>\n\n#include <stack>\n\n#include <list>\n\n#include <map>\n\n#include <set>\n\n//#include <unordered_map>\n\n#define Fbo friend bool operator < (node a, node b)\n\n#define mem(a, b) memset(a, b, sizeof(a))\n\n#define FOR(a, b, c) for (int a = b; a <= c; a++)\n\n#define RFOR(a, b, c) for (int a = b; a >= c; a--)\n\n#define off ios::sync_with_stdio(0)\n\n#define sc(a) scanf(\"%d\",&a)\n\n#define pr(a) printf(\"%d\\n\",a);\n\n#define SC(n,m) scanf(\"%d%d\",&n,&m)\n\nbool check1(int a) { return (a & (a - 1)) == 0 ? true : false; }\n\n\n\nusing namespace std;\n\ntypedef pair<int, int> pii;\n\ntypedef long long ll;\n\nconst int INF = 0x3f3f3f3f;//1e10\n\nconst int mod = 1e9 + 7;\n\nconst int Maxn = 1e5 + 5;\n\nconst int M = Maxn * 20;\n\nconst double pi = acos(-1.0);\n\nconst double eps = 1e-8;\n\n\n\nint a[Maxn], k = 1;\n\n\n\nbool is_prime(int x) {\n\n    for (int i = 2; i * i <= x; i++) {\n\n        if (x % i == 0) {\n\n            return 0;\n\n        }\n\n    }\n\n    return 1;\n\n}\n\n\n\nint main() {\n\n    ll n;\n\n    cin >> n;\n\n    cout << 3;\n\n    for (int i = 11;i <= 55555 ; i++) {\n\n        if (is_prime(i)&&i%10==3) {\n\n            cout << \" \" << i;\n\n            k++;\n\n        }\n\n        if (k == n)break;\n\n    }\n\n}"
    },
    {
        "id": "47",
        "source_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<vector>\n\n#include<string>\n\n#include<cmath>\n\n\n\nusing namespace std;\n\n\n\nint main(){\n\n    int N;\n\n    cin>>N;\n\n\n\n    vector<int> prime;\n\n\n\n    for(int i=0;i<55555;i++){\n\n        prime.push_back(1);\n\n    }\n\n    for(int i=2;i<sqrt(55555);i++){\n\n        if(prime[i]){\n\n            for(int j=0; i*(j+2) < 55555;j++){\n\n                prime[i*(j+2)] = 0;\n\n            }\n\n        }\n\n    }\n\n\n\n\n\n    prime[0] = prime[1] = 0;\n\n\n\n    vector<int> ans;\n\n\n\n    for(int i=0; ans.size()<N;i++){\n\n        if(prime[i] == 1 && i % 5 == 1){\n\n            ans.push_back(i);\n\n        }\n\n    }\n\n\n\n    for(int i=0;i<ans.size();i++) cout<<ans[i]<<\" \";\n\n\n\n    cout<<endl;\n\n}\n",
        "optimized_code": "#include<iostream>\n\nusing namespace std;\n\n\n\nint main(){\n\n    int N;\n\n    cin >> N;\n\n\n\n    int p = 10;\n\n    for(int i=0;i<N;i++){\n\n        while(1){\n\n            bool isPrime = true;\n\n            p++;\n\n            for(int j=2;j*j<=p;j++) if(p % j == 0) isPrime = false;\n\n            if(isPrime && p%5 == 1) {\n\n                cout << p << \" \";\n\n                break;\n\n            } \n\n            \n\n        }\n\n    }\n\n\n\n    cout << endl;\n\n}"
    },
    {
        "id": "48",
        "source_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<vector>\n\n#include<string>\n\n#include<queue>\n\n#include<stack>\n\n#include<set>\n\nusing namespace std;\n\n\n\nint INF = 1e9 + 7;\n\n\n\ntypedef long long ll;\n\ntypedef pair<int, int> P;\n\n\n\nvector<int> arr(55560);\n\n\n\nvoid Eratosthenes() {\n\n\tint n = 55556;\n\n\n\n\tfor (int i = 1; i <= n; i++) {\n\n\t\tarr[i] = 1;\n\n\t}\n\n\tfor (int i = 2; i <= n/2; i++) {\n\n\t\tif (arr[i]) {\n\n\t\t\tfor (int j = 0; i * (j + 2) < n; j++) {\n\n\t\t\t\tarr[i *(j + 2)] = 0; \n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\n\tint j = 1;\n\n\tarr[1] = 0;\n\n\tfor (int i = 1; i <= n; i++) {\n\n\t\tif (arr[i] && i%5 == 1) {\n\n\t\t\tarr[j] = i;\n\n\t\t\tj++;\n\n\t\t}\n\n\t}\n\n}\n\n\n\nint main() {\n\n\tint n;\n\n\tcin >> n;\n\n\tEratosthenes();\n\n\t\n\n\tfor (int i = 1; i <= n; i++) {\n\n\t\tcout << arr[i] << \" \";\n\n\t}\n\n}",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n\n\ntypedef long long ll;\n\ntypedef pair<int, int> P;\n\ntypedef tuple<int, int, int> T;\n\n\n\nint MOD=1e9+7;\n\nll INF=1e18;\n\n\n\nint dx[]={1, -1, 0, 0};\n\nint dy[]={0, 0, 1, -1};\n\n\n\nbool is_prime[60000];\n\nint prime[60000];\n\nvoid eratos(int n){\n\n    for(int i=0; i<=n; i++) is_prime[i]=true;\n\n    is_prime[0]=false, is_prime[1]=false;\n\n\n\n    for(int i=2; i*i<=n; i++){\n\n        if(is_prime[i]){\n\n            for(int j=2; i*j<=n; j++){\n\n                is_prime[i*j]=false;\n\n            }\n\n        }\n\n    }\n\n\n\n    int cnt=0;\n\n    for(int i=2; i<=55555; i++){\n\n        if(is_prime[i] && i%5==1){\n\n            prime[cnt]=i;\n\n            cnt++;\n\n        }\n\n    }\n\n}\n\n\n\nint main(){\n\n    int n; cin>>n;\n\n    eratos(55550);\n\n    for(int i=0; i<n; i++){\n\n        cout << prime[i] << \" \";\n\n    }\n\n}"
    },
    {
        "id": "49",
        "source_code": "#include<cstdio>\n\n#include<algorithm>\n\n#include<vector>\n\n\n\nusing namespace std;\n\n\n\ntypedef long long LL;\n\n\n\nconst int N = 55556;\n\n\n\nbool st[N];\n\nint primes[N], cnt;\n\nvector<int> nums;\n\n\n\nvoid init(int n)\n\n{\n\n    for(int i = 2; i <= n; i ++)\n\n    {\n\n        if(!st[i])  primes[cnt ++] = i;\n\n        for(int j = 0; primes[j] <= n / i; j ++)\n\n        {\n\n            st[i * primes[j]] = true;\n\n            if(i % primes[j] == 0)  break;\n\n        }\n\n    }\n\n    for(int i = 21; i < N; i += 10)\n\n        if(!st[i])  nums.push_back(i);\n\n}\n\n\n\nint main()\n\n{\n\n    init(N - 1);\n\n    \n\n    int n;\n\n    scanf(\"%d\", &n);\n\n        \n\n    for(int i = 0; i < n; i ++)  printf(\"%d \", nums[i]);\n\n    return 0;\n\n}",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n \n\n#define NL '\\n'\n\n#define xx first\n\n#define yy second\n\n#define ll long long\n\n#define mp make_pair\n\n#define pb push_back\n\n#define sz(x) x.size()\n\n#define all(x) (x).begin(), (x).end()\n\n#define mem(a, b) memset(a, b, sizeof(a))\n\n#define rep(i,a,b) for(ll i=(ll)a;i<(ll)b;++i)\n\n#define async() ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\n\n \n\n#define FayeValentine \n\nvoid dz(){cerr<<NL;}template<typename H,typename... T> void dz(H h,T... t){cerr<<' '<<h;dz(t... );}\n\n#ifdef  FayeValentine\n\n#define debug(...) cerr<<\"(\"<<#__VA_ARGS__<<\"):\",dz(__VA_ARGS__)\n\n#else\n\n#define debug(...) \n\n#endif\n\n\n\n//bitwise sieve && segmented sieve\n\nconst int M = 50000, R = 100000; //limit of seive and max range of segment \n\nint marked[(M>>6)+9], segment[(R>>6)+9]; //prime flags\n\nvector<int>primes; vector<ll>segment_primes; //primes are stored here\n\n#define ifc(z, n) (z[n>>6]&(1<<((n>>1)&31))) //checks if composite\n\n#define isc(z, n) (z[n>>6]|=(1<<((n>>1)&31))) //marks as composite\n\nvoid sieve(int n){ //memset \"marked\" to zero\n\n  for(int i = 3; i*i <= n; i+=2) if(!ifc(marked, i)) \n\n    for(int j = i * i; j <= n; j += (i + i)) isc(marked, j); \n\n  primes.pb(2);\n\n  for(int i = 3; i <= n; i+=2) if(!ifc(marked, i)) primes.push_back(i); \n\n}\n\n\n\n\n\nvoid absinthe() {\n\n\tsieve(M);\n\n\tint n, i = 0; cin >> n;\n\n\tfor(int i = 0; i < M; i++) {\n\n\t\tif(primes[i]%5==1) {\n\n\t\t\tn--;\t\n\n\t\t\tcout << primes[i] << \" \";\n\n\t\t}\n\n\t\t\n\n\t\tif(n == 0) return;\n\n\t}\n\n}\n\n\n\n \n\nint main(){\n\n  async();\n\n  int __t = 1, __c; //cin >> __t;\n\n  for(__c = 1; __c <=__t; __c++) {\n\n    //cout << \"Case \" << __c << \": \"; \n\n    absinthe();\n\n  }\n\n}  \n"
    },
    {
        "id": "50",
        "source_code": "#include <iostream>\n\n#include <vector>\n\n#define N 55555\n\nusing namespace std;\n\nint n, pr[N+5];\n\nvector<int> vt;\n\n\n\nint main() {\n\n\tint i, j, k, x, sum;\n\n\tcin>>n;\n\n\tfor(i=2; i<=N; i++) pr[i] = 1;\n\n\tfor(i=2; i<=N; i++) {\n\n\t\tif(pr[i]) for(j=i*2; j<=N; j+=i) pr[j] = 0;\n\n\t}\n\n\tfor(i=11; i<=N; i+=5) {\n\n\t\tif(pr[i]) {\n\n\t\t\tcout<<i<<' ';\n\n\t\t\tn--;\n\n\t\t\tif(!n) return 0;\n\n\t\t}\n\n\t}\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <iostream>\n\nusing namespace std;\n\nint n;\n\nint main() {\n\n\tint i, j;\n\n\tcin>>n;\n\n\tfor(i=11; n; i+=10) {\n\n\t\tfor(j=2; j*j<=i; j++) if(i%j==0) break;\n\n\t\tif(j*j>i) {\n\n\t\t\tcout<<i<<' ';\n\n\t\t\tn--;\n\n\t\t}\n\n\t}\n\n\treturn 0;\n\n}"
    },
    {
        "id": "51",
        "source_code": "# include <iostream>\n\nusing namespace std;\n\nconst int N=55556,M=56;\n\nint a[N],b[N],c[M];\n\nint n,l;\n\nvoid work (void)\n\n{\n\n\tint i,j;\n\n\ti=1;\n\n\tj=1;\n\n\twhile (i<=n)\n\n\t{\n\n\t\tif (b[j]%5==1)\n\n\t\t{\n\n\t\t\tc[i]=b[j];\n\n\t\t\ti++;\n\n\t\t}\n\n\t\tj++;\n\n\t}\n\n\tfor (i=1;i<=n;i++)\n\n\tcout<<c[i]<<\" \";\n\n}\n\nint main (void)\n\n{\n\n\tint i,j,t;\n\n\tl=1;\n\n\tcin>>n;\n\n\tfor (i=2;i<=55555;i++)\n\n\t{\n\n\t\tj=1;\n\n\t\tif (a[i]==0)\n\n\t\t{\n\n\t\t\tb[l]=i;\n\n\t\t\tl++;\n\n\t\t}\n\n\t\tfor (j=1;j<l;j++)\n\n\t\t{\n\n\t\t\tt=i*b[j];\n\n\t\t\tif (t<=55555)\n\n\t\t\ta[t]=1;\n\n\t   else break;\n\n\t        if (i%b[j]==0)\n\n\t        break;\n\n\t\t}\n\n\t}\n\n\twork ();\n\n\treturn 0;\n\n}\n",
        "optimized_code": "# include <iostream>\n\nusing namespace std;\n\nconst int N=56;\n\nint a[N]={0,11,31,41,61,71,101,131,151,181,191,211,241,251,271,281,311,331,401,421,431,461,491,521,541,571,601,631,641,661,691,701,751,761,811,821,881,911,941,971,991,1021,1031,1051,1061,1091,1151,1171,1181,1201,1231,1291,1301,1321,1361,1381};\n\nint n;\n\nvoid work (void)\n\n{\n\n\tint i;\n\n\tfor (i=1;i<=n;i++)\n\n\tcout<<a[i]<<\" \";\n\n}\n\nint main (void)\n\n{\n\n\tcin>>n;\n\n\twork ();\n\n\treturn 0;\n\n}\n"
    },
    {
        "id": "52",
        "source_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\ntypedef long long ll;\n\n\n\nvector<int> calc(int n)\n\n{\n\n  const int sz = 55556;\n\n  vector<int> sieve(sz, 1);\n\n  sieve[0] = sieve[1] = 0;\n\n\n\n  for (int i = 2; i < (int)sieve.size(); ++i) {\n\n    for (int m = 2; i * m < sz; ++m) {\n\n      sieve[i * m] = 0;\n\n    }\n\n  }\n\n  int cnt = 0;\n\n  vector<int> ret;\n\n  for (int i = 2; i < (int)sieve.size() && cnt < n; ++i) {\n\n    if (sieve[i] && (i % 5 == 1)) {\n\n      ++cnt;\n\n      ret.push_back(i);\n\n    }\n\n  }\n\n\n\n  return ret;\n\n}\n\n\n\nint main()\n\n{\n\n  int n;\n\n  scanf(\"%d\", &n);\n\n  vector<int> p = calc(n);\n\n  copy(p.begin(), p.end(), ostream_iterator<int>(cout, \" \"));\n\n  printf(\"\\n\");\n\n\n\n  return 0;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\ntypedef long long ll;\n\n\n\nconst int INF = 1000000000;\n\n\n\nvoid sieve(vector<int>& primes)\n\n{\n\n  int n = primes.size();\n\n  primes[0] = primes[1] = 0;\n\n  for (int i = 2; i * i < n; ++i) {\n\n    if (not primes[i]) { continue; }\n\n    for (int j = i * i; j < n; j += i) {\n\n      primes[j] = 0;\n\n    }\n\n  }\n\n}\n\n\n\nint main()\n\n{\n\n  int N; scanf(\"%d\", &N);\n\n  int upper = 55555;\n\n  vector<int> primes(upper + 5, 1);\n\n  sieve(primes);\n\n  int cnt = 0;\n\n  vector<int> ans;\n\n  for (int p = 2; p <= 55555; ++p) {\n\n    if (primes[p] and (p % 5) == 1) {\n\n      ans.push_back(p);\n\n      if (++cnt == N) { break; }\n\n    }\n\n  }\n\n  printf(\"%d\", ans[0]);\n\n  for (int i = 1; i < N; ++i) {\n\n    printf(\" %d\", ans[i]);\n\n  }\n\n  printf(\"\\n\");\n\n  return 0;\n\n}\n"
    },
    {
        "id": "53",
        "source_code": "#include <iostream>\n\n#include <string>\n\n\n\n#define MOD 1000000007\n\n\n\n#define FOR(i, a, b) for (int i = (a); i < (b); i++)\n\n#define RFOR(i, a, b) for (int i = (b)-1; i >= (a); i--)\n\n#define REP(i, n) for (int i = 0; i < (n); i++)\n\n#define RREP(i, n) for (int i = (n)-1; i >= 0; i--)\n\n#define ALL(x) (x).begin(), (x).end()\n\n#define DEBUG(x) cout << #x << \": \" << x << endl\n\n\n\n// five-five-everywhere.cpp ---\n\n// author: Seong Yong-ju <sei40kr@gmail.com>\n\n\n\nusing namespace std;\n\n\n\nint n;\n\nbool ps[55556] = {false, false};\n\n\n\nint main() {\n\n  std::ios::sync_with_stdio(false);\n\n\n\n  cin >> n;\n\n  fill(&ps[2], ps + 55555, true);\n\n  for (int i = 2; i <= 55555; ++i) {\n\n    if (!ps[i]) {\n\n      continue;\n\n    }\n\n    for (int j = i * 2; j <= 55555; j += i) {\n\n      ps[j] = false;\n\n    }\n\n  }\n\n  REP(i, 55556) { ps[i] = (ps[i] && i % 5 == 1); }\n\n\n\n  int cnt = 0;\n\n  REP(i, 55556) {\n\n    if (ps[i]) {\n\n      if (n <= ++cnt) {\n\n        cout << i << endl;\n\n        break;\n\n      } else {\n\n        cout << i << ' ';\n\n      }\n\n    }\n\n  }\n\n\n\n  return 0;\n\n}\n",
        "optimized_code": "#include <cmath>\n\n#include <iostream>\n\n#include <string>\n\n\n\n#define MOD 1000000007\n\n\n\n#define FOR(i, a, b) for (int i = (a); i < (b); i++)\n\n\n\n// five-five-everywhere.cpp ---\n\n// author: Seong Yong-ju <sei40kr@gmail.com>\n\n\n\nusing namespace std;\n\n\n\nint n;\n\nbool isprime[55556] = {false, false};\n\n\n\nint main() {\n\n  ios::sync_with_stdio(false);\n\n  cin.tie(NULL);\n\n\n\n  fill(&isprime[2], isprime + 55556, true);\n\n\n\n  cin >> n;\n\n\n\n  FOR(i, 2, floor(sqrt(55556) + 1)) {\n\n    if (!isprime[i]) {\n\n      continue;\n\n    }\n\n    for (int j = i * 2; j < 55556; j += i) {\n\n      isprime[j] = false;\n\n    }\n\n  }\n\n\n\n  int cnt = 0;\n\n  FOR(i, 2, 55556) {\n\n    if (isprime[i] && i % 5 == 1) {\n\n      cout << i;\n\n\n\n      if (n <= ++cnt) {\n\n        cout << endl;\n\n        break;\n\n      } else {\n\n        cout << ' ';\n\n      }\n\n    }\n\n  }\n\n}\n"
    },
    {
        "id": "54",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\n\nusing pii = pair<int, int>;\n\n\n\nint N;\n\n\n\nint main() {\n\n  cin.tie(0);\n\n  ios_base::sync_with_stdio(false);\n\n  cout << fixed << setprecision(10);\n\n  \n\n  cin >> N;\n\n  vector<int> v;\n\n  for (int i = 11; i <= 55555; i += 5) {\n\n    int no = 0;\n\n    for (int j = 2; j * j <= i; j++) {\n\n      if (i % j == 0) {\n\n        no++;\n\n        break;\n\n      }\n\n    }\n\n    if (!no) v.emplace_back(i);\n\n  }  \n\n  for (int i = 0; i < N; i++) {\n\n    cout << v[i] << \" \\n\"[i + 1 == N];\n\n  }\n\n\n\n  return 0;\n\n}",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nusing ll = long long;\n\nusing pii = pair<int, int>;\n\n\n\nint N;\n\n\n\nint main() {\n\n  cin.tie(0);\n\n  ios_base::sync_with_stdio(false);\n\n  cout << fixed << setprecision(10);\n\n  \n\n  cin >> N;\n\n  vector<int> p;\n\n  for (int i = 11; p.size() < N; i += 5) {\n\n    int flag = 1;\n\n    for (int j = 2; j * j <= i; j++) {\n\n      if (i % j == 0) flag = 0;\n\n    }\n\n    if (flag) p.emplace_back(i);\n\n  }\n\n  for (int i = 0; i < N; i++) {\n\n    cout << p[i] << \" \\n\"[i + 1 == N];\n\n  }\n\n\n\n  return 0;\n\n}"
    },
    {
        "id": "55",
        "source_code": "#include <iostream>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <cmath>\n\n\n\nusing namespace std;\n\n\n\n\n\nbool primary_number_checker(int p){\n\n    bool checker = true;\n\n\n\n    for(int i = 2; i < p; i++){\n\n        if(p % i == 0) checker = false;\n\n    }\n\n    return checker;\n\n}\n\n\n\nint main(void){\n\n    int n;\n\n    cin >> n;\n\n\n\n    for(int i = 31; i <= 55555; i += 30){\n\n        if(primary_number_checker(i) == true){\n\n            if(i != 31){\n\n                cout << i << \" \";\n\n                n--;\n\n            }\n\n        }\n\n        if(n == 0){\n\n            break;\n\n        }\n\n    }\n\n\n\n    return 0;\n\n\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <cstring>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <cmath>\n\n#include <string>\n\n#include <set>\n\n#include <utility>\n\n#include <cstdlib>\n\n#include <queue>\n\n#include <stack>\n\n#include <iomanip>\n\n#include <cstdio>\n\n#include <map>\n\n\n\nusing namespace std;\n\n\n\nusing ll = long long;\n\nusing P = pair<ll,ll>;\n\n\n\n#define rep(i,x) for(ll i = 0; i < (ll)(x); i++)\n\n#define rrep(i,x) for(ll i = ((ll)(x) - 1); i >= 0; i--)\n\n\n\n#define _upgrade ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n#define all(x) (x).begin(), (x).end()\n\n#define UNIQUE(v) v.erase( unique(v.begin(), v.end()), v.end() );\n\n\n\ntemplate<class T1, class T2> void chmin(T1 &a, T2 b){if(a>b)a=b;}\n\ntemplate<class T1, class T2> void chmax(T1 &a, T2 b){if(a<b)a=b;}\n\n\n\n//ll gcd(ll a, ll b){return b?gcd(b,a%b):a;}\n\n//ll lcm(ll x, ll y) {return x / gcd(x, y) * y;}\n\n/*bool prime(int x) {\n\n\tfor (int i = 2; i <= sqrt(x); i++) {\n\n\t\tif (x%i == 0)return false;\n\n\t}\n\n\treturn true;\n\n}*/\n\n\n\nint dx[4] = {1,0,-1,0};\n\nint dy[4] = {0,1,0,-1};\n\n\n\nconst ll mod = 1e9 + 7;\n\nconst ll IMF = 1LL<<29;\n\nconst double PI = 3.14159265358979323846;\n\n\n\n\n\n// ******************************CODE**********************************//\n\n\n\n\n\nbool prime(int x){\n\n        bool flag = true;\n\n        for(int i = 2; i <= x-1; i++){\n\n                if(x % i == 0){\n\n                        flag = false;\n\n                        break;\n\n                }\n\n        }\n\n        return flag;\n\n}\n\n\n\n\n\nint main(){\n\n        int n;\n\n        cin >> n;\n\n\n\n        vector<int> ans;\n\n        int cnt = 0;\n\n        for(int i = 3; i <= 100000; i++){\n\n                if(cnt == n) break;\n\n                if(i % 5 == 1){\n\n                        if(prime(i)){\n\n                                cnt++;\n\n                                ans.push_back(i);\n\n                        }\n\n                }\n\n        }\n\n\n\n        for(int i = 0; i < n; i++){\n\n                cout << ans[i] << endl;\n\n        }\n\n\n\n        return 0;\n\n}\n\n\n"
    },
    {
        "id": "56",
        "source_code": "#include <bits/stdc++.h>\n\n#define rep(i,n) for(int i=0;i<(int)n;i++)\n\n#define rep1(i,n) for(int i=1;i<=(int)n;i++)\n\n#define rep2(i,j,n) for(int j=i;j<n;j++)\n\n#define rep3(i,j,n) for(int j=i;j<=n;j++)\n\n#define rrep(i,n) for(int i=n-1;i>=0;i--)\n\n#define sp(n) cout << fixed << setprecision(n)\n\ntypedef long long ll;\n\nusing namespace std;\n\nint pn[55]={11,31,41,61,71,91,101,131,151,181,\n\n            191,211,241,251,271,281,311,331,401,421,\n\n            431,461,491,521,541,571,601,641,661,691,\n\n            701,751,761,811,821,881,911,941,971,991,\n\n            1021,1051,1061,1091,1151,1171,1181,1201,1231,1291,\n\n            1301,1321,1361,1381,1451\n\n            };\n\nint main(void){\n\n    int n;cin>>n;\n\n    vector<int> pr(55556,0);\n\n    rep(i,55556){\n\n        if(i==0||i==1)continue;\n\n        for(int j=i*2;j<=55555;j+=i){\n\n            if(pr[j]==0)pr[j]++;\n\n        }\n\n    }\n\n    int cou=0;\n\n    rep(i,55556){\n\n        if(i==0||i==1)continue;\n\n        if(pr[i]==0&&i%5==1){\n\n            cout<<i<<\" \";\n\n            cou++;\n\n        }\n\n        if(cou==n)break;\n\n    }\n\n    cout<<endl;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n#define rep(i,n) for(int i=0;i<(int)n;i++)\n\n#define rep1(i,n) for(int i=1;i<=(int)n;i++)\n\n#define rep2(i,j,n) for(int j=i;j<n;j++)\n\n#define rep3(i,j,n) for(int j=i;j<=n;j++)\n\n#define rrep(i,n) for(int i=n-1;i>=0;i--)\n\n#define sp(n) cout << fixed << setprecision(n)\n\ntypedef long long ll;\n\nusing namespace std;\n\nint pn[55]={11,31,41,61,71,101,131,151,181,191,\n\n            211,241,251,271,281,311,331,401,421,431,\n\n            461,491,521,541,571,601,631,641,661,691,\n\n            701,751,761,811,821,881,911,941,971,991,\n\n            1021,1031,1051,1061,1091,1151,1171,1181,1201,1231,\n\n            1291,1301,1321,1361,1381\n\n            };\n\nint main(void){\n\n    int n;cin>>n;\n\n    rep(i,n)cout<<pn[i]<<\" \";\n\n    cout<<endl;\n\n}\n"
    },
    {
        "id": "57",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define rep(i, n) for(int i = 0, i##_len = (n); i < i##_len; i++)\n\n#define reps(i, s, n) for(int i = (s), i##_len = (n); i < i##_len; i++)\n\n#define rrep(i, n) for(int i = (n) - 1; i >= 0; i--)\n\n#define rreps(i, e, n) for(int i = (n) - 1; i >= (e); i--)\n\n#define all(x) (x).begin(), (x).end()\n\n#define sz(x) ((int)(x).size())\n\n#define uniq(x) (x).erase(unique((x).begin(), (x).end()), (x).end())\n\n\n\nconst int MAX_A = 55555;\n\nconst int MAX_N = 55;\n\n\n\nint n;\n\nbool pf[MAX_A + 1];\n\nvector<int> prime;\n\n\n\nvoid create_prime() {\n\n    rep(i, MAX_A + 1) pf[i] = true;\n\n    pf[0] = pf[1] = false;\n\n    \n\n    for(int i = 2; (i * i) <= MAX_A; i++) {\n\n        if (!pf[i]) {\n\n            continue;\n\n        }\n\n        \n\n        for (int ii = 2; (i * ii) <= MAX_A; ii++) {\n\n            pf[i * ii] = false;\n\n        }\n\n    }\n\n    \n\n    for (int i = 0; i <= MAX_A; i++) {\n\n        if (pf[i]) {\n\n            prime.push_back(i);\n\n        }\n\n    }\n\n}\n\n\n\nbool is_prime(int n) {\n\n    return pf[n];\n\n}\n\n\n\nint main() {\n\n    cin.tie(0);\n\n    ios::sync_with_stdio(false);\n\n    \n\n    cin >> n;\n\n    create_prime();\n\n    int cnt = 0;\n\n    \n\n    rep(i, n) {\n\n        while(!pf[++cnt * 5 + 1]);\n\n        printf(\"%d%s\", cnt * 5 + 1, (i == (n - 1)) ? \"\\n\" : \" \");\n\n    }\n\n    \n\n    return 0;\n\n}",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\n#define rep(i, n) for(int i = 0, i##_len = (n); i < i##_len; i++)\n\n#define reps(i, s, n) for(int i = (s), i##_len = (n); i < i##_len; i++)\n\n#define rrep(i, n) for(int i = (n) - 1; i >= 0; i--)\n\n#define rreps(i, e, n) for(int i = (n) - 1; i >= (e); i--)\n\n#define all(x) (x).begin(), (x).end()\n\n#define sz(x) ((int)(x).size())\n\n#define uniq(x) (x).erase(unique((x).begin(), (x).end()), (x).end())\n\n\n\nconst int MAX_A = 55555;\n\n\n\nint n;\n\nbool pf[MAX_A + 1];\n\n\n\nvoid create_prime() {\n\n    rep(i, MAX_A + 1) pf[i] = true;\n\n    pf[0] = pf[1] = false;\n\n    \n\n    for(int i = 2; (i * i) <= MAX_A; i++) {\n\n        if (!pf[i]) {\n\n            continue;\n\n        }\n\n        \n\n        for (int ii = 2; (i * ii) <= MAX_A; ii++) {\n\n            pf[i * ii] = false;\n\n        }\n\n    }\n\n}\n\n\n\nbool is_prime(int n) {\n\n    return pf[n];\n\n}\n\n\n\nint main() {\n\n    cin.tie(0);\n\n    ios::sync_with_stdio(false);\n\n    \n\n    cin >> n;\n\n    create_prime();\n\n    int cnt = 0;\n\n    \n\n    rep(i, n) {\n\n        while(!pf[++cnt * 5 + 1]);\n\n        printf(\"%d%s\", cnt * 5 + 1, (i == (n - 1)) ? \"\\n\" : \" \");\n\n    }\n\n    \n\n    return 0;\n\n}"
    },
    {
        "id": "59",
        "source_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\nconst long long MOD = 1000000007LL;\n\nlong long GCD(long long a, long long b){return b == 0 ? a : GCD(b, a % b);}\n\n\n\nbitset<55560> prime;\n\n\n\nint main(){\n\n\n\n    cin.sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n\n\n    //freopen(\"input.txt\", \"r\", stdin);\n\n    //freopen(\"output.txt\", \"w\", stdout);\n\n\n\n    int n;\n\n    cin >> n;\n\n\n\n    for(int i = 2; i <= 55555; ++i){\n\n        if(prime[i]) continue;\n\n        for(int j = i + i; j <= 55555; j += i)\n\n            prime[j] = 1;\n\n    }\n\n\n\n    for(int i = 55555; i > 0 && n > 1; --i){\n\n        if(prime[i] || (i - 1) % 10 != 0) continue;\n\n        n--;\n\n        cout << i << \" \";\n\n    }\n\n\n\n    cout << 2;\n\n\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\nconst long long MOD = 1000000007LL;\n\nlong long GCD(long long a, long long b){return b == 0 ? a : GCD(b, a % b);}\n\n\n\nbitset<55560> prime;\n\n\n\nint main(){\n\n\n\n    cin.sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n\n\n    //freopen(\"input.txt\", \"r\", stdin);\n\n    //freopen(\"output.txt\", \"w\", stdout);\n\n\n\n    int n;\n\n    cin >> n;\n\n\n\n    cout << 2;\n\n\n\n    for(int i = 2; i <= 55555 && n > 1; ++i){\n\n        if(prime[i]) continue;\n\n        if((i - 1) % 10 == 0){\n\n            cout << \" \" << i;\n\n            --n;\n\n        }\n\n        for(int j = i * i; j <= 55555; j += i)\n\n            prime[j] = 1;\n\n    }\n\n\n\n    return 0;\n\n}\n"
    },
    {
        "id": "60",
        "source_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <functional>\n\n#include <map>\n\n#include <ostream>\n\n#include <queue>\n\n#include <random>\n\n#include <string>\n\n#include <vector>\n\n#include <cstdlib>\n\n#include <cmath>\n\n#include <cstring>\n\n\n\nusing std::cin;\n\nusing std::cout;\n\nusing std::cerr;\n\nusing std::endl;\n\n\n\nusing ll = long long;\n\n\n\ninline void init() {\n\n  cin.tie(0);\n\n  std::ios::sync_with_stdio(false);\n\n}\n\n\n\nbool is_prime[300001];\n\nstd::vector<int> prime;\n\n\n\nvoid eratosthenes(int n) {\n\n  std::fill(is_prime, is_prime + 300000, true);\n\n\n\n  is_prime[0] = is_prime[1] = false;\n\n\n\n  for (int i = 2; i <= n; ++i) {\n\n    if (is_prime[i]) {\n\n      if (i <= 55555) prime.push_back(i);\n\n\n\n      for (int j = 2; i * j <= n; ++j) {\n\n        is_prime[i * j] = false;\n\n      }\n\n    }\n\n  }\n\n\n\n  return;\n\n}\n\n\n\nint main() {\n\n  init();\n\n\n\n  int N;\n\n\n\n  cin >> N;\n\n\n\n  eratosthenes(300000);\n\n\n\n  std::vector<int> ans;\n\n\n\n  for (int i = 0; i < prime.size(); ++i) {\n\n    if (prime[i] % 5 == 1) {\n\n      ans.push_back(prime[i]);\n\n      if (ans.size() == N) {\n\n        break;\n\n      }\n\n    }\n\n  }\n\n\n\n  for (int i = 0; i < N; ++i) {\n\n    cout << ans[i] << \" \\n\"[i == N - 1];\n\n  }\n\n\n\n  return 0;\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <vector>\n\n#include <cstring>\n\n\n\nusing std::cin;\n\nusing std::cout;\n\nusing std::cerr;\n\nusing std::endl;\n\n\n\nstd::vector<int> eratosthenes() {\n\n  bool is_prime[55556];\n\n  std::vector<int> ret;\n\n\n\n  std::fill(is_prime, is_prime + 55555, true);\n\n\n\n  is_prime[0] = is_prime[1] = false;\n\n\n\n  for (int i = 2; i <= 55555; ++i) {\n\n    if (is_prime[i]) {\n\n      ret.push_back(i);\n\n      for (int j = 2; i * j <= 55555; ++j) {\n\n        is_prime[i * j] = false;\n\n      }\n\n    }\n\n  }\n\n\n\n  return ret;\n\n}\n\n\n\n\n\nint main() {\n\n  int n;\n\n\n\n  cin >> n;\n\n\n\n  std::vector<int> prime = eratosthenes(), ans;\n\n\n\n  for (int i = 0; i < int(prime.size()); ++i) {\n\n    if (prime[i] % 5 == 1) {\n\n      ans.push_back(prime[i]);\n\n      if (int(ans.size()) == n) {\n\n        break;\n\n      }\n\n    }\n\n  }\n\n\n\n  for (int i = 0; i < int(ans.size()); ++i) {\n\n    cout << ans[i] << \" \\n\"[i == n - 1];\n\n  }\n\n\n\n  return 0;\n\n}\n"
    },
    {
        "id": "61",
        "source_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef long double ld;\n\n#define rep(i, n) for (ll i = 0; i < n; i++)\n\n#define FOR(i, a, b) for (ll i = a; i < b; i++)\n\n#define is(a, b) a == b\n\n#define len(v) ll(v.size())\n\n\n\nconst ll mod=1e9+7;\n\n\n\n//vector\u66f8\u304d\u51fa\u3057\n\ntemplate <class T>\n\nvoid cout_vec(const vector<T> &vec1){\n\n  rep(i,len(vec1)){\n\n    cout<<vec1[i]<<' ';\n\n  }\n\n  cout<<'\\n';\n\n}\n\n\n\n//\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u7be9,n\u4ee5\u4e0b\u306e\u7d20\u6570\u306e\u5217\u6319\u306e\u6642\u306b\n\nvector<int> prime;\n\nvector<bool> is_prime(55560,true);\n\n\n\nvoid sieve(int n){\n\n    is_prime[0]=false;\n\n    is_prime[1]=false;\n\n    FOR(i,2,n+1){\n\n        if(is_prime[i]){\n\n            if(i%5==1) prime.push_back(i);\n\n            for(int j=2*i;j<=n;j+=i){\n\n                is_prime[j]=false;\n\n            }\n\n        }\n\n    }\n\n}\n\n\n\ntypedef pair<ll,ll> P;\n\n\n\nint main(){\n\n    cin.tie(0);\n\n    ios::sync_with_stdio(false);\n\n    int n;\n\n    cin>>n;\n\n    sieve(55555);\n\n    rep(i,n){\n\n      cout<<prime[i]<<' ';\n\n    }\n\n    cout<<endl;\n\n}",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef long double ld;\n\n#define rep(i, n) for (ll i = 0; i < n; i++)\n\n#define FOR(i, a, b) for (ll i = a; i < b; i++)\n\n#define len(v) ll(v.size())\n\n#define fi first\n\n#define se second\n\n\n\ntemplate <class T>\n\nvoid cout_vec(const vector<T> &vec){\n\n  for(auto itr:vec) cout<<itr<<' ';\n\n  cout<<endl;\n\n}\n\n\n\ntypedef pair<ll,ll> P;\n\nconst ll mod=1e9+7;\n\nconst ll inf=1e15;\n\n\n\ntemplate <class T>\n\nbool is_prime(T x){\n\n\tfor(T i=2;i*i<=x;i++){\n\n\t\tif(x%i==0){\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn x!=1;\n\n}\n\n\n\nint main(){\n\n  cin.tie(0);\n\n  ios::sync_with_stdio(false);\n\n  int n;\n\n  cin>>n;\n\n  set<int> ans;\n\n  int now=1;\n\n  while(ans.size()!=n){\n\n    if(is_prime(now) && now%5==1) ans.insert(now);\n\n    now++;\n\n  }\n\n  for(auto itr:ans) cout<<itr<<endl;\n\n}"
    },
    {
        "id": "62",
        "source_code": "#include <iostream>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <string.h>\n\n#include <iomanip>\n\n#include <math.h>\n\n\n\ntypedef long long int ll;\n\n\n\n#define FOR(i,n,m) for(ll i=(ll)(m);i<(ll)(n);++i)\n\n#define REP(i,n) FOR(i,n,0)\n\n#define IREP(i,n) for(ll i=(ll)(n);i>=0;--i)\n\n#define OF64 std::setprecision(10)\n\n\n\nconst ll MOD = 1000000007;\n\n\n\nusing namespace std;\n\n\n\nconst int MAX = 300000;\n\n\n\nint Prime[55555];\n\nbool isPrime[MAX];\n\n\n\n\n\nint main()\n\n{\n\n\tint N;\n\n\tcin >> N;\n\n\tREP(i, MAX)\n\n\t{\n\n\t\tisPrime[i] = true;\n\n\t}\n\n\n\n\tint num = 0;\n\n\tisPrime[0] = isPrime[1] = false;\n\n\tfor (int i = 2; i < MAX; ++i)\n\n\t{\n\n\t\tif (!isPrime[i])continue;\n\n\t\tif (i <= 55555)\n\n\t\t{\n\n\t\t\tPrime[num++] = i;\n\n\t\t}\n\n\t\tfor (int j = 2 * i; j < MAX; j += i)\n\n\t\t{\n\n\t\t\tisPrime[j] = false;\n\n\t\t}\n\n\t}\n\n\n\n\tvector<int> ans;\n\n\tREP(i, num)\n\n\t{\n\n\t\tif (Prime[i] % 10 == 1)\n\n\t\t{\n\n\t\t\tans.push_back(Prime[i]);\n\n\t\t}\n\n\t\tif (ans.size() == N)break;\n\n\t}\n\n\n\n\tcout << ans[0];\n\n\tREP(i, N-1)\n\n\t{\n\n\t\tcout << \" \" << ans[i + 1];\n\n\t}\n\n\tcout<<endl;\n\n\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <string.h>\n\n#include <iomanip>\n\n#include <math.h>\n\n\n\ntypedef long long int ll;\n\n\n\n#define FOR(i,n,m) for(ll i=(ll)(m);i<(ll)(n);++i)\n\n#define REP(i,n) FOR(i,n,0)\n\n#define IREP(i,n) for(ll i=(ll)(n);i>=0;--i)\n\n#define OF64 std::setprecision(10)\n\n\n\nconst ll MOD = 1000000007;\n\n\n\nusing namespace std;\n\n\n\nstruct PrimeList\n\n{\n\n\tPrimeList()\n\n\t{\n\n\t\tprime.clear();\n\n\t};\n\n\t~PrimeList() {};\n\n\n\n\tvoid init(int n)\n\n\t{\n\n\t\tstd::vector<bool> isComposite(n + 1);\n\n\t\tfor (int i = 2; i <= n; ++i)\n\n\t\t{\n\n\t\t\tif (isComposite[i])continue;\n\n\t\t\tprime.push_back(i);\n\n\t\t\tfor (int j = i; j <= n; j += i)\n\n\t\t\t{\n\n\t\t\t\tisComposite[j] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\n\tstd::vector<int> prime;\n\n};\n\n\n\n\n\nint main()\n\n{\n\n\n\n\tint N;\n\n\tcin >> N;\n\n\tPrimeList prime;\n\n\tprime.init(55555);\n\n\n\n\tvector<int> ans;\n\n\tREP(i, prime.prime.size())\n\n\t{\n\n\t\tif (prime.prime[i] % 10 == 1)ans.push_back(prime.prime[i]);\n\n\t\tif (ans.size() == N)break;\n\n\t}\n\n\n\n\tREP(i, N)\n\n\t{\n\n\t\tcout << ans[i] << \" \";\n\n\t}\n\n\tcout << endl;\n\n\treturn 0;\n\n}"
    },
    {
        "id": "63",
        "source_code": "#include <iostream>\n\n#include <string.h>\n\n#include <stdio.h>\n\n#include <algorithm>\n\nusing namespace std;\n\nint t[1000];\n\nint p[56];\n\nint r[1000];\n\nint o;\n\nint book[1000000];\n\nint main()\n\n{\n\n\n\n    int u=0;\n\n    for(int i=2; i<10000; i++)\n\n    {\n\n        if(book[i]==0)\n\n            for(int j=2; j<10000; j++)\n\n            {\n\n                if(i*j>=10000)\n\n                    break;\n\n                book[i*j]=1;\n\n            }\n\n    }\n\n    int n;\n\n    int f[56];\n\n    int v=0;\n\n    for(int i=2;i<=10000;i++)\n\n    {\n\n        if(book[i]==0&&i%10==1)\n\n        {\n\n            f[v]=i;\n\n            v++;\n\n            if(v==57)\n\n                break;\n\n        }\n\n    }\n\n    while(scanf(\"%d\",&n)!=EOF)\n\n    {\n\n        for(int i=0; i<n; i++)\n\n            {\n\n                if(i==0)\n\n                    cout<<f[i];\n\n                else\n\n                    cout<<\" \"<<f[i];\n\n            }\n\n            cout<<endl;\n\n    }\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <stdio.h>\n\n#include <string.h>\n\n#include <iostream>\n\n#include <stack>\n\n#include <queue>\n\n#include <vector>\n\n#include <cmath>\n\n#include <algorithm>\n\n#define LL long long\n\nusing namespace std;\n\n/*int main()\n\n{\n\n    int x=11,j=0,i=0;\n\n    while(j<56)\n\n    {\n\n        for( i=2; i<x/2; i++)\n\n            if(x%i==0)break;\n\n        if(i>=x/2)\n\n        {\n\n            printf(\"%d,\",x);\n\n            j++;\n\n        }\n\n        x+=10;\n\n    }\n\n}*/\n\nint main()\n\n{\n\n    int zishu1[56]={11,31,41,61,71,101,131,151,181,191,211,241,251,271,281,311,331,401,421,431,461,491,521,541,571,601,631,641,661,691,701,751,761,811,821,881,911,941,971,991,1021,1031,1051,1061,1091,1151,1171,1181,1201,1231,1291,1301,1321,1361,1381,1451};\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    for(int i=0;i<n;i++)\n\n    {\n\n        if(i==0)printf(\"%d\",zishu1[i]);\n\n        else printf(\" %d\",zishu1[i]);\n\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n\n}\n"
    },
    {
        "id": "64",
        "source_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\ntypedef long long ll;\n\ntypedef unsigned long long ull;\n\ntypedef vector<int> vi;\n\ntypedef pair<int,int> ii;\n\ntypedef pair<int,pair<int,int>> iii;\n\ntypedef vector<pair<int,int>> vii;\n\ntypedef vector<vector<int>> vvi;\n\n\n\n#define pb push_back\n\n#define mp make_pair\n\n#define fi first\n\n#define se second\n\n#define LSOne(i) ((i) & -(i))\n\n\n\nconst int MAXN = 55556;\n\nbitset<MAXN> bs;\n\nint n;\n\nvi primes, ans;\n\n\n\nvoid sieve () {\n\n    bs.set();\n\n    bs[0] = bs[1] = false;\n\n    for (ll i = 2; i < bs.size(); i++) {\n\n        if (bs[i]) {\n\n            for (ll j = i*i; j < bs.size(); j += i)\n\n                bs[j] = false;\n\n            if (i%10 == 1) primes.pb(i);\n\n        }\n\n    }\n\n}\n\n\n\nint main (void) {\n\n    ios_base::sync_with_stdio(false);\n\n    cin.tie(0); cout.tie(0);\n\n\n\n    cin >> n;\n\n    sieve();\n\n\n\n    for (int i = 0; i < n; i++)\n\n        cout << primes[i] << \" \";\n\n    cout << endl;\n\n\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <stdio.h>\n\n#include <string.h>\n\n#include <iostream>\n\n#include <stack>\n\n#include <queue>\n\n#include <vector>\n\n#include <cmath>\n\n#include <algorithm>\n\n#define LL long long\n\nusing namespace std;\n\n/*int main()\n\n{\n\n    int x=11,j=0,i=0;\n\n    while(j<56)\n\n    {\n\n        for( i=2; i<x/2; i++)\n\n            if(x%i==0)break;\n\n        if(i>=x/2)\n\n        {\n\n            printf(\"%d,\",x);\n\n            j++;\n\n        }\n\n        x+=10;\n\n    }\n\n}*/\n\nint main()\n\n{\n\n    int zishu1[56]={11,31,41,61,71,101,131,151,181,191,211,241,251,271,281,311,331,401,421,431,461,491,521,541,571,601,631,641,661,691,701,751,761,811,821,881,911,941,971,991,1021,1031,1051,1061,1091,1151,1171,1181,1201,1231,1291,1301,1321,1361,1381,1451};\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    for(int i=0;i<n;i++)\n\n    {\n\n        if(i==0)printf(\"%d\",zishu1[i]);\n\n        else printf(\" %d\",zishu1[i]);\n\n    }\n\n    printf(\"\\n\");\n\n    return 0;\n\n}\n"
    },
    {
        "id": "65",
        "source_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\ntypedef long long ll;\n\ntypedef unsigned long long ull;\n\ntypedef vector<int> vi;\n\ntypedef pair<int,int> ii;\n\ntypedef pair<int,pair<int,int>> iii;\n\ntypedef vector<pair<int,int>> vii;\n\ntypedef vector<vector<int>> vvi;\n\n\n\n#define pb push_back\n\n#define mp make_pair\n\n#define fi first\n\n#define se second\n\n#define LSOne(i) ((i) & -(i))\n\n\n\nconst int MAXN = 55556;\n\nbitset<MAXN> bs;\n\nint n;\n\nvi primes, ans;\n\n\n\nvoid sieve () {\n\n    bs.set();\n\n    bs[0] = bs[1] = false;\n\n    for (ll i = 2; i < bs.size(); i++) {\n\n        if (bs[i]) {\n\n            for (ll j = i*i; j < bs.size(); j += i)\n\n                bs[j] = false;\n\n            if (i%10 == 1) primes.pb(i);\n\n        }\n\n    }\n\n}\n\n\n\nint main (void) {\n\n    ios_base::sync_with_stdio(false);\n\n    cin.tie(0); cout.tie(0);\n\n\n\n    cin >> n;\n\n    sieve();\n\n\n\n    for (int i = 0; i < n; i++)\n\n        cout << primes[i] << \" \";\n\n    cout << endl;\n\n\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <vector>\n\n#include <cstring>\n\n\n\nusing namespace std;\n\n\n\nint prime(int x) {\n\n\tfor (int i = 3; i * i <= x; i += 2)\n\n\t\tif (x % i == 0) return 0;\n\n\treturn 1;\n\n}\n\n\n\nvector<int> ans;\n\n\n\nint main() {\n\n\tfor (int i = 11; i <= 5555; i += 10)\n\n\t\tif (prime(i)) ans.push_back(i);\n\n\tint n;\n\n\tcin >> n;\n\n\tfor (int i = 0; i < n; ++i) cout << ans[i] << ' ';\n\n\treturn 0;\n\n}"
    },
    {
        "id": "66",
        "source_code": "#include <cstdio>\n\n#include <iostream>\n\n#include <algorithm>\n\n#include <cstring>\n\n#include <queue> //priority_queue\n\n#include <map>\n\n#include <set> //multiset set<int,greater<int>>\u5927\u5230\u5c0f\n\n#include <vector>// vector<int>().swap(v);\u6e05\u7a7a\u91ca\u653e\u5185\u5b58\n\n#include <stack>\n\n#include <cmath> // auto &Name : STLName  Name.\n\n#include <utility>\n\n#include <sstream>\n\n#include <string>//__builtin_popcount(ans);//\u83b7\u53d6\u67d0\u4e2a\u6570\u4e8c\u8fdb\u5236\u4f4d1\u7684\u4e2a\u6570\n\n#define mod 1000000007\n\n#define mod9 998244353\n\ntypedef unsigned long long ull;\n\ntypedef long long ll;\n\ntypedef double db;\n\ntypedef long double ld;\n\nconst db eps=1e-10;\n\nconst int INF = 0x3f3f3f3f;\n\nconst ll inf=0x3f3f3f3f3f3f3f3f;\n\n#define rep(i,be,en) for (int i=be;i<=en;i++)\n\n#define per(i,be,en) for (int i=en;i>=be;i--)\n\n//ll ksm(ll a,ll b,ll c){ll ans=1;a=a%c;while(b>0){if(b%2) ans=(ans*a)%c;b=b/2;a=(a*a)%c;}return ans;}\n\nusing namespace std;\n\n\n\nconst int N=2e5+7;\n\nint t,n,m,fl=0;\n\nint prime[N]={0};//\u8bb0\u5f55\u7d20\u6570\n\nint vis[N]={0};//\u8bb0\u5f55\u9664\u672c\u8eab\u6700\u5927\u56e0\u5b50\n\nint cnt=0;//\u7d20\u6570\u4e2a\u6570\n\nvoid Euler_prime(int x){\n\n    for(int i=2;i<=x;++i){\n\n        if(vis[i]==0){\n\n            prime[cnt++]=i;\n\n            vis[i]=1;\n\n        }\n\n        for(int j=0;j<cnt;++j){\n\n            if(i*prime[j]>x)//\u5224\u65ad\u662f\u5426\u8d8a\u754c\n\n                break;\n\n            vis[i*prime[j]]=i;//\u7b5b\u6570\n\n            if(i%prime[j]==0)//\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u7684\u5173\u952e\uff01\n\n                break;\n\n        }\n\n    }\n\n}\n\nint main(){\n\n    Euler_prime(55556);\n\n    scanf(\"%d\",&n);\n\n    rep(i,0,cnt-1){\n\n        if(prime[i]%10==1){\n\n            printf(\"%d%c\",prime[i],n==1?'\\n':' ');\n\n            n--;\n\n        }\n\n        if(n<=0) break;\n\n    }\n\n    return 0;\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <vector>\n\n#include <cstring>\n\n\n\nusing namespace std;\n\n\n\nint prime(int x) {\n\n\tfor (int i = 3; i * i <= x; i += 2)\n\n\t\tif (x % i == 0) return 0;\n\n\treturn 1;\n\n}\n\n\n\nvector<int> ans;\n\n\n\nint main() {\n\n\tfor (int i = 11; i <= 5555; i += 10)\n\n\t\tif (prime(i)) ans.push_back(i);\n\n\tint n;\n\n\tcin >> n;\n\n\tfor (int i = 0; i < n; ++i) cout << ans[i] << ' ';\n\n\treturn 0;\n\n}"
    },
    {
        "id": "67",
        "source_code": "#include<bits/stdc++.h>\n\ntypedef long long ll;\n\n\n\nusing namespace std;\n\n\n\n// using namespace __gnu_pbds;\n\n#define Init1 ios::sync_with_stdio(false)\n\n#define Init2 cin.tie(0)\n\n#define INF 0x3f3f3f3f\n\n// #pragma GCC optimize(2)\n\n\n\nconst int N = 55555 + 105;\n\n\n\nint prime[N], vis[N], tot = 0;\n\nint c[6] = {0};\n\nint main(){\n\n    for(int i = 2; i < N; ++i){\n\n        if(!vis[i]){\n\n            prime[++tot] = i;\n\n            for(int j = i + i; j < N; j += i)\n\n                vis[j] = 1;\n\n        }\n\n    }\n\n    vector<int>ans;\n\n    for(int i = 1; i <= tot; ++i){\n\n        if(prime[i] % 5 == 1) ans.push_back(prime[i]);\n\n    }\n\n    int n; cin>>n;\n\n    for(int i = 1; i <= n; ++i) cout<<ans[i]<<\" \";\n\n    cout<<endl;\n\n    // system(\"pause\");\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <vector>\n\n#include <cstring>\n\n\n\nusing namespace std;\n\n\n\nint prime(int x) {\n\n\tfor (int i = 3; i * i <= x; i += 2)\n\n\t\tif (x % i == 0) return 0;\n\n\treturn 1;\n\n}\n\n\n\nvector<int> ans;\n\n\n\nint main() {\n\n\tfor (int i = 11; i <= 5555; i += 10)\n\n\t\tif (prime(i)) ans.push_back(i);\n\n\tint n;\n\n\tcin >> n;\n\n\tfor (int i = 0; i < n; ++i) cout << ans[i] << ' ';\n\n\treturn 0;\n\n}"
    },
    {
        "id": "68",
        "source_code": "#include <iostream>\n\n#include <string.h>\n\n#include <stdio.h>\n\n#include <algorithm>\n\nusing namespace std;\n\nint t[1000];\n\nint p[56];\n\nint r[1000];\n\nint o;\n\nint book[1000000];\n\nint main()\n\n{\n\n\n\n    int u=0;\n\n    for(int i=2; i<10000; i++)\n\n    {\n\n        if(book[i]==0)\n\n            for(int j=2; j<10000; j++)\n\n            {\n\n                if(i*j>=10000)\n\n                    break;\n\n                book[i*j]=1;\n\n            }\n\n    }\n\n    int n;\n\n    int f[56];\n\n    int v=0;\n\n    for(int i=2;i<=10000;i++)\n\n    {\n\n        if(book[i]==0&&i%10==1)\n\n        {\n\n            f[v]=i;\n\n            v++;\n\n            if(v==57)\n\n                break;\n\n        }\n\n    }\n\n    while(scanf(\"%d\",&n)!=EOF)\n\n    {\n\n        for(int i=0; i<n; i++)\n\n            {\n\n                if(i==0)\n\n                    cout<<f[i];\n\n                else\n\n                    cout<<\" \"<<f[i];\n\n            }\n\n            cout<<endl;\n\n    }\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cmath>\n\n#include <set>\n\n#include <map>\n\n#include <vector>\n\n#include <queue>\n\n#define LL long long\n\n#define N 55555\n\n#define maxn 10005\n\n#define INF 0x3f3f3f3f\n\n#define mase(a,b) memset(a,b,sizeof(a))\n\n#define MIN(a,b) (a<b?a:b)\n\n#define MAX(a,b) (a>b?a:b)\n\n#define DS DisputeSegement\n\nusing namespace std;\n\nbool isPrime(int fig)\n\n{\n\n    int limit=(int)sqrt(fig)+1;\n\n    for(int i=2;i<limit;i++)\n\n    {\n\n        if(fig%i==0)\n\n        {\n\n            return false;\n\n        }\n\n\n\n    }\n\n    return true;\n\n}\n\nint main()\n\n{\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    for(int i=11;i<=N;i+=10)\n\n    {\n\n        if(isPrime(i))\n\n        {\n\n            printf(\"%d\",i);\n\n            n--;\n\n            printf(\"%c\",n?' ':'\\n');\n\n            if(!n)\n\n            {\n\n                break;\n\n            }\n\n        }\n\n    }\n\n    return 0;\n\n}\n\n\n\n\n\n//Five,Five Everywhere,\u539f\u521b\u8005CSDN@\n"
    },
    {
        "id": "69",
        "source_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\ntypedef long long ll;\n\ntypedef unsigned long long ull;\n\ntypedef vector<int> vi;\n\ntypedef pair<int,int> ii;\n\ntypedef pair<int,pair<int,int>> iii;\n\ntypedef vector<pair<int,int>> vii;\n\ntypedef vector<vector<int>> vvi;\n\n\n\n#define pb push_back\n\n#define mp make_pair\n\n#define fi first\n\n#define se second\n\n#define LSOne(i) ((i) & -(i))\n\n\n\nconst int MAXN = 55556;\n\nbitset<MAXN> bs;\n\nint n;\n\nvi primes, ans;\n\n\n\nvoid sieve () {\n\n    bs.set();\n\n    bs[0] = bs[1] = false;\n\n    for (ll i = 2; i < bs.size(); i++) {\n\n        if (bs[i]) {\n\n            for (ll j = i*i; j < bs.size(); j += i)\n\n                bs[j] = false;\n\n            if (i%10 == 1) primes.pb(i);\n\n        }\n\n    }\n\n}\n\n\n\nint main (void) {\n\n    ios_base::sync_with_stdio(false);\n\n    cin.tie(0); cout.tie(0);\n\n\n\n    cin >> n;\n\n    sieve();\n\n\n\n    for (int i = 0; i < n; i++)\n\n        cout << primes[i] << \" \";\n\n    cout << endl;\n\n\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cmath>\n\n#include <set>\n\n#include <map>\n\n#include <vector>\n\n#include <queue>\n\n#define LL long long\n\n#define N 55555\n\n#define maxn 10005\n\n#define INF 0x3f3f3f3f\n\n#define mase(a,b) memset(a,b,sizeof(a))\n\n#define MIN(a,b) (a<b?a:b)\n\n#define MAX(a,b) (a>b?a:b)\n\n#define DS DisputeSegement\n\nusing namespace std;\n\nbool isPrime(int fig)\n\n{\n\n    int limit=(int)sqrt(fig)+1;\n\n    for(int i=2;i<limit;i++)\n\n    {\n\n        if(fig%i==0)\n\n        {\n\n            return false;\n\n        }\n\n\n\n    }\n\n    return true;\n\n}\n\nint main()\n\n{\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    for(int i=11;i<=N;i+=10)\n\n    {\n\n        if(isPrime(i))\n\n        {\n\n            printf(\"%d\",i);\n\n            n--;\n\n            printf(\"%c\",n?' ':'\\n');\n\n            if(!n)\n\n            {\n\n                break;\n\n            }\n\n        }\n\n    }\n\n    return 0;\n\n}\n\n\n\n\n\n//Five,Five Everywhere,\u539f\u521b\u8005CSDN@\n"
    },
    {
        "id": "70",
        "source_code": "#include <cstdio>\n\n#include <iostream>\n\n#include <algorithm>\n\n#include <cstring>\n\n#include <queue> //priority_queue\n\n#include <map>\n\n#include <set> //multiset set<int,greater<int>>\u5927\u5230\u5c0f\n\n#include <vector>// vector<int>().swap(v);\u6e05\u7a7a\u91ca\u653e\u5185\u5b58\n\n#include <stack>\n\n#include <cmath> // auto &Name : STLName  Name.\n\n#include <utility>\n\n#include <sstream>\n\n#include <string>//__builtin_popcount(ans);//\u83b7\u53d6\u67d0\u4e2a\u6570\u4e8c\u8fdb\u5236\u4f4d1\u7684\u4e2a\u6570\n\n#define mod 1000000007\n\n#define mod9 998244353\n\ntypedef unsigned long long ull;\n\ntypedef long long ll;\n\ntypedef double db;\n\ntypedef long double ld;\n\nconst db eps=1e-10;\n\nconst int INF = 0x3f3f3f3f;\n\nconst ll inf=0x3f3f3f3f3f3f3f3f;\n\n#define rep(i,be,en) for (int i=be;i<=en;i++)\n\n#define per(i,be,en) for (int i=en;i>=be;i--)\n\n//ll ksm(ll a,ll b,ll c){ll ans=1;a=a%c;while(b>0){if(b%2) ans=(ans*a)%c;b=b/2;a=(a*a)%c;}return ans;}\n\nusing namespace std;\n\n\n\nconst int N=2e5+7;\n\nint t,n,m,fl=0;\n\nint prime[N]={0};//\u8bb0\u5f55\u7d20\u6570\n\nint vis[N]={0};//\u8bb0\u5f55\u9664\u672c\u8eab\u6700\u5927\u56e0\u5b50\n\nint cnt=0;//\u7d20\u6570\u4e2a\u6570\n\nvoid Euler_prime(int x){\n\n    for(int i=2;i<=x;++i){\n\n        if(vis[i]==0){\n\n            prime[cnt++]=i;\n\n            vis[i]=1;\n\n        }\n\n        for(int j=0;j<cnt;++j){\n\n            if(i*prime[j]>x)//\u5224\u65ad\u662f\u5426\u8d8a\u754c\n\n                break;\n\n            vis[i*prime[j]]=i;//\u7b5b\u6570\n\n            if(i%prime[j]==0)//\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u7684\u5173\u952e\uff01\n\n                break;\n\n        }\n\n    }\n\n}\n\nint main(){\n\n    Euler_prime(55556);\n\n    scanf(\"%d\",&n);\n\n    rep(i,0,cnt-1){\n\n        if(prime[i]%10==1){\n\n            printf(\"%d%c\",prime[i],n==1?'\\n':' ');\n\n            n--;\n\n        }\n\n        if(n<=0) break;\n\n    }\n\n    return 0;\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cmath>\n\n#include <set>\n\n#include <map>\n\n#include <vector>\n\n#include <queue>\n\n#define LL long long\n\n#define N 55555\n\n#define maxn 10005\n\n#define INF 0x3f3f3f3f\n\n#define mase(a,b) memset(a,b,sizeof(a))\n\n#define MIN(a,b) (a<b?a:b)\n\n#define MAX(a,b) (a>b?a:b)\n\n#define DS DisputeSegement\n\nusing namespace std;\n\nbool isPrime(int fig)\n\n{\n\n    int limit=(int)sqrt(fig)+1;\n\n    for(int i=2;i<limit;i++)\n\n    {\n\n        if(fig%i==0)\n\n        {\n\n            return false;\n\n        }\n\n\n\n    }\n\n    return true;\n\n}\n\nint main()\n\n{\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    for(int i=11;i<=N;i+=10)\n\n    {\n\n        if(isPrime(i))\n\n        {\n\n            printf(\"%d\",i);\n\n            n--;\n\n            printf(\"%c\",n?' ':'\\n');\n\n            if(!n)\n\n            {\n\n                break;\n\n            }\n\n        }\n\n    }\n\n    return 0;\n\n}\n\n\n\n\n\n//Five,Five Everywhere,\u539f\u521b\u8005CSDN@\n"
    },
    {
        "id": "71",
        "source_code": "#include<bits/stdc++.h>\n\ntypedef long long ll;\n\n\n\nusing namespace std;\n\n\n\n// using namespace __gnu_pbds;\n\n#define Init1 ios::sync_with_stdio(false)\n\n#define Init2 cin.tie(0)\n\n#define INF 0x3f3f3f3f\n\n// #pragma GCC optimize(2)\n\n\n\nconst int N = 55555 + 105;\n\n\n\nint prime[N], vis[N], tot = 0;\n\nint c[6] = {0};\n\nint main(){\n\n    for(int i = 2; i < N; ++i){\n\n        if(!vis[i]){\n\n            prime[++tot] = i;\n\n            for(int j = i + i; j < N; j += i)\n\n                vis[j] = 1;\n\n        }\n\n    }\n\n    vector<int>ans;\n\n    for(int i = 1; i <= tot; ++i){\n\n        if(prime[i] % 5 == 1) ans.push_back(prime[i]);\n\n    }\n\n    int n; cin>>n;\n\n    for(int i = 1; i <= n; ++i) cout<<ans[i]<<\" \";\n\n    cout<<endl;\n\n    // system(\"pause\");\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cmath>\n\n#include <set>\n\n#include <map>\n\n#include <vector>\n\n#include <queue>\n\n#define LL long long\n\n#define N 55555\n\n#define maxn 10005\n\n#define INF 0x3f3f3f3f\n\n#define mase(a,b) memset(a,b,sizeof(a))\n\n#define MIN(a,b) (a<b?a:b)\n\n#define MAX(a,b) (a>b?a:b)\n\n#define DS DisputeSegement\n\nusing namespace std;\n\nbool isPrime(int fig)\n\n{\n\n    int limit=(int)sqrt(fig)+1;\n\n    for(int i=2;i<limit;i++)\n\n    {\n\n        if(fig%i==0)\n\n        {\n\n            return false;\n\n        }\n\n\n\n    }\n\n    return true;\n\n}\n\nint main()\n\n{\n\n    int n;\n\n    scanf(\"%d\",&n);\n\n    for(int i=11;i<=N;i+=10)\n\n    {\n\n        if(isPrime(i))\n\n        {\n\n            printf(\"%d\",i);\n\n            n--;\n\n            printf(\"%c\",n?' ':'\\n');\n\n            if(!n)\n\n            {\n\n                break;\n\n            }\n\n        }\n\n    }\n\n    return 0;\n\n}\n\n\n\n\n\n//Five,Five Everywhere,\u539f\u521b\u8005CSDN@\n"
    },
    {
        "id": "72",
        "source_code": "#include <bits/stdc++.h>\n\n#include <math.h>\n\n#define _GLIBCXX_DEBUG\n\n#define _LIBCPP_DEBUG 0\n\n\n\nusing namespace std;\n\n#define ll long long\n\n#define rep(i,n) for (int i = 0; i < n; i++)\n\n#define rrep(i,n) for (int i = n-1; i >= 0; i--)\n\n#define MOD (1000000007)\n\n#define vi vector<int>\n\n#define vl vector<ll>\n\n#define vb vector<bool>\n\n#define vvi vector<vi>\n\n#define vvl vector<vl>\n\n#define pii pair<int, int>\n\n#define pli pair<ll, int>a\n\n#define pb push_back\n\n#define sz(x) int(x.size())\n\n\n\n#define mp make_pair\n\n#define all(a) (a).begin(),(a).end()\n\n\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return true; } return false; }\n\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return true; } return false; }\n\n\n\nll gcd(ll a, ll b) {\n\n    if (b == 0) return a;\n\n    else return gcd(b, a % b);\n\n}\n\n\n\nll keta(ll n){\n\n  string s = to_string(n);\n\n  ll num = s.size();\n\n  return num;\n\n}\n\n\n\nconst ll INF = 1LL << 60;\n\n\n\nconst int dh[4] = {1,0,-1,0};\n\nconst int dw[4] = {0,1,0,-1};\n\n\n\nstruct Edge{\n\n  int to;\n\n  int weight;\n\n  Edge(int t, int w) : to(t), weight(w){}\n\n};\n\nusing Graph = vector<vector<Edge>>;\n\nusing P = pair<ll, int>;\n\n\n\nclass UnionFind{\n\n  public:\n\n  vi Parent;\n\n  UnionFind(int n){\n\n    Parent = vi(n,-1);\n\n  }\n\n\n\n  int root(int a){\n\n    if(Parent[a] < 0) return a;\n\n    else return Parent[a] = root(Parent[a]);\n\n  }\n\n\n\n  int size(int a){\n\n    return -Parent[root(a)];\n\n  }\n\n\n\n  bool merge(int a, int b){\n\n    a = root(a);\n\n    b = root(b);\n\n    if(a == b) return false;\n\n\n\n    if(size(a) < size(b)) swap(a,b);\n\n    Parent[a] += Parent[b];\n\n    Parent[b] = a;\n\n\n\n    return true;\n\n  }\n\n};\n\n\n\nclass Factrial{\n\n  public:\n\n  vl Fac;\n\n  Factrial(int MAX){\n\n    Fac = vl(MAX+1);\n\n    rep(i,MAX) {\n\n      if(i == 0) Fac[i+1] = 1;\n\n      else Fac[i+1] = ((i+1)*Fac[i])%MOD;\n\n    }\n\n  }\n\n};\n\n\n\nclass Eratosthenes{\n\n  public:\n\n  vi P;\n\n  vb Prime;\n\n  Eratosthenes(int MAX){\n\n    Prime = vb(MAX+1,true);\n\n    for(int i = 2; i <= MAX; i++) {\n\n      if(Prime[i]){\n\n        P.pb(i);\n\n        for(int j = i*2; j <= MAX; j += i) {\n\n          Prime[j] = false;\n\n        }\n\n      }\n\n    }\n\n  }\n\n  int size(){\n\n    return P.size();\n\n  }\n\n};\n\n\n\nint main(){\n\n  int n; cin >> n;\n\n  int m = 55555;\n\n  Eratosthenes E(m);\n\n  vi a;\n\n  while(sz(a) < n){\n\n    rep(i,E.size()) {\n\n      if(E.P[i]%5 == 1) a.pb(E.P[i]);\n\n    }\n\n  }\n\n  rep(i,n) cout << a[i] << \" \";\n\n}",
        "optimized_code": "#include <bits/stdc++.h>\n\n#include <math.h>\n\n#define _GLIBCXX_DEBUG\n\n#define _LIBCPP_DEBUG 0\n\n\n\nusing namespace std;\n\n#define ll long long\n\n#define rep(i,n) for (int i = 0; i < n; i++)\n\n#define rrep(i,n) for (int i = n-1; i >= 0; i--)\n\n#define MOD (1000000007)\n\n#define vi vector<int>\n\n#define vl vector<ll>\n\n#define vb vector<bool>\n\n#define vvi vector<vi>\n\n#define vvl vector<vl>\n\n#define pii pair<int, int>\n\n#define pli pair<ll, int>a\n\n#define pb push_back\n\n#define sz(x) int(x.size())\n\n\n\n#define mp make_pair\n\n#define all(a) (a).begin(),(a).end()\n\n\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return true; } return false; }\n\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return true; } return false; }\n\n\n\nll gcd(ll a, ll b) {\n\n    if (b == 0) return a;\n\n    else return gcd(b, a % b);\n\n}\n\n\n\nll keta(ll n){\n\n  string s = to_string(n);\n\n  ll num = s.size();\n\n  return num;\n\n}\n\n\n\nconst ll INF = 1LL << 60;\n\n\n\nconst int dh[4] = {1,0,-1,0};\n\nconst int dw[4] = {0,1,0,-1};\n\n\n\nstruct Edge{\n\n  int to;\n\n  int weight;\n\n  Edge(int t, int w) : to(t), weight(w){}\n\n};\n\nusing Graph = vector<vector<Edge>>;\n\nusing P = pair<ll, int>;\n\n\n\n// dist[v] \u306b\u9802\u70b9 s \u304b\u3089\u9802\u70b9 v \u3078\u306e\u8ddd\u96e2\u3092\u5165\u308c\u308b\u95a2\u6570\n\nvoid dijkstra(int s, Graph &G, vector<ll> &dist){\n\n  fill(all(dist), INF);\n\n  dist[s] = 0;\n\n\n\n  priority_queue<P, vector<P>, greater<P>> pq;//\u8ddd\u96e2\u304c\u5c0f\u3055\u3044\u9806\u306b\u53d6\u308a\u51fa\u3059\n\n  pq.push(P(0,s)); // \u9802\u70b9 s \u304b\u3089\u30b9\u30bf\u30fc\u30c8\n\n\n\n  while (!pq.empty()) {\n\n    P p = pq.top(); pq.pop();\n\n    int v = p.second;\n\n    if(dist[v] < p.first) continue;// \u65e2\u306b v \u306b\u8fbf\u308a\u7740\u304f\u77ed\u3044\u7d4c\u8def\u6709\u306a\u3089\u30b9\u30eb\u30fc (\u3053\u308c\u306f\u305f\u3060\u306e\u9ad8\u901f\u5316)\n\n\n\n    for(auto e : G[v]){// v \u304b\u3089\u884c\u3051\u308b\u9802\u70b9 nv \u9054\u3092\u8d70\u67fb\n\n      int nv = e.to;\n\n      ll w = e.weight;\n\n      if(dist[nv] > dist[v] + w){\n\n        dist[nv] = dist[v] + w;\n\n        pq.push(P(dist[nv], nv));\n\n      }\n\n    }\n\n  }\n\n}\n\n\n\nclass UnionFind{\n\npublic:\n\n  vi Parent;\n\n  UnionFind(int n){\n\n    Parent = vi(n,-1);\n\n  }\n\n\n\n  int root(int a){\n\n    if(Parent[a] < 0) return a;\n\n    else return Parent[a] = root(Parent[a]);\n\n  }\n\n\n\n  int size(int a){\n\n    return -Parent[root(a)];\n\n  }\n\n\n\n  bool merge(int a, int b){\n\n    a = root(a);\n\n    b = root(b);\n\n    if(a == b) return false;\n\n\n\n    if(size(a) < size(b)) swap(a,b);\n\n    Parent[a] += Parent[b];\n\n    Parent[b] = a;\n\n\n\n    return true;\n\n  }\n\n};\n\n\n\nclass Factrial{\n\npublic:\n\n  vl Fac;\n\n  Factrial(int MAX){\n\n    Fac = vl(MAX+1);\n\n    rep(i,MAX) {\n\n      if(i == 0) Fac[i] = 1;\n\n      else Fac[i+1] = ((i+1)*Fac[i])%MOD;\n\n    }\n\n  }\n\n};\n\n\n\n\n\n\n\nint main(){\n\n  int n; cin >> n;\n\n  int MAX = 55555;\n\n  vb Prime(MAX+1,true);\n\n  vi ans;\n\n  for(int i = 2; i < MAX+1; i++) {\n\n    if(Prime[i]){\n\n      for(int j = 2*i; j < MAX+1; j += i) {\n\n        Prime[j] = false;\n\n      }\n\n      if(i%5 == 1){\n\n        ans.pb(i);\n\n      }\n\n    }\n\n    if(ans.size() == n) break;\n\n  }\n\n\n\n  rep(i,n) cout << ans[i] << \" \";\n\n  cout << endl;\n\n}"
    },
    {
        "id": "73",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i,a) for(int i = 0; i < (a); i++)\n\n#define ALL(a) (a).begin(),(a).end()\n\ntypedef long long ll;\n\ntypedef pair<int, int> P;\n\nconst int INF = 1e9;\n\nconst int MOD = 1e9 + 7;\n\n\n\n#define MAX_N 55555\n\n\n\nint prime[MAX_N];//i\u756a\u76ee\u306e\u7d20\u6570\n\nbool is_prime[MAX_N + 1];//is_prime[i]\u304ctrue\u306a\u3089i\u306f\u7d20\u6570\n\n\n\n//n\u4ee5\u4e0b\u306e\u7d20\u6570\u306e\u6570\u3092\u8fd4\u3059\n\nint eratos(int n){\n\n    int p = 0;\n\n    for(int i = 0; i <= n; i++) is_prime[i] = true;\n\n    is_prime[0] = is_prime[1] = false;\n\n    for(int i = 2; i <= n; i++){\n\n        if(is_prime[i]){\n\n            prime[p++] = i;\n\n            for(int j = 2 * i; j <= n; j += i) is_prime[j] = false;\n\n        }\n\n    }\n\n    return p;\n\n}\n\n\n\nsigned main(){\n\n    int n;\n\n    cin >> n;\n\n    eratos(MAX_N);\n\n    int cnt = 0;\n\n    for(int i = 6; i <= MAX_N; i += 5){\n\n        if(is_prime[i] == true){\n\n            cout << i << endl;\n\n            cnt++;\n\n            if(cnt >= n){\n\n                break;\n\n            }\n\n        }\n\n    }\n\n    return 0;\n\n}",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define REP(i,a) for(int i = 0; i < (a); i++)\n\n#define ALL(a) (a).begin(),(a).end()\n\ntypedef long long ll;\n\ntypedef pair<int, int> P;\n\nconst int INF = 1e9;\n\nconst long long LINF = 1e18;\n\nconst long long MOD = 1e9 + 7;\n\n\n\nvector<bool> eratos(int n){\n\n    vector<bool> primes(n + 1, true);\n\n    primes[0] = primes[1] = false;\n\n    for(int i = 2; i * i <= n; i++){\n\n        if(!primes[i]) continue;\n\n        for(int j = i * i; j <= n; j += i){\n\n            primes[j] = false;\n\n        }\n\n    }\n\n    return primes;\n\n}\n\n\n\nsigned main(){\n\n    int n;\n\n    cin >> n;\n\n    vector<int> ans;\n\n    vector<bool> vec = eratos(55555);\n\n    for(int i = 1; i <= 55555; i += 5){\n\n        if(vec[i]) ans.emplace_back(i);\n\n    }\n\n    REP(i,n){\n\n        cout << ans[i] << endl;\n\n    }\n\n    return 0;\n\n}"
    },
    {
        "id": "74",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef pair<int,int> iint;\n\ntypedef pair<ll,ll> llll;\n\n#define ALL(x) (x).begin(),(x).end()\n\nconst ll zero = 0;\n\nconst ll INF = 3000000000000000000; //10^18\n\nconst int inINF = 1000000000; //10^9\n\nconst ll MOD = 1000000007; //10^9+7\n\nconst ll MOD2 = 998244353;\n\n\n\nint main(){\n\n    int N;\n\n    cin >> N;\n\n\n\n    vector<bool> P(56000, true);\n\n    P[0] = false;\n\n    P[1] = false;\n\n    for (int i = 2; i < 56000; i++) {\n\n        if(P[i] == false){\n\n            continue;\n\n        }\n\n        else{\n\n            for (int j = 2; i * j < 56000; j++) {\n\n                P[i * j] = false;\n\n            }\n\n        }\n\n    }\n\n    vector<int> ans;\n\n    for (int i = 1; i < 56000; i+=5) {\n\n        if(P[i] == true){\n\n            ans.push_back(i);\n\n        }\n\n    }\n\n    for (int i = 0; i < N; i++) {\n\n        printf(\"%d \", ans[i]);\n\n    }\n\n    printf(\"\\n\");\n\n\n\n}",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef pair<int,int> iint;\n\ntypedef pair<ll,ll> llll;\n\n#define ALL(x) (x).begin(),(x).end()\n\nconst ll zero = 0;\n\nconst ll INF = 3000000000000000000; //10^18\n\nconst int inINF = 1000000000; //10^9\n\nconst ll MOD = 1000000007; //10^9+7\n\nconst ll MOD2 = 998244353;\n\n\n\nint main(){\n\n    int N;\n\n    cin >> N;\n\n\n\n    vector<bool> P(56000, true);\n\n    P[0] = false;\n\n    P[1] = false;\n\n    for (int i = 2; i < 250; i++) {\n\n        if(P[i] == false){\n\n            continue;\n\n        }\n\n        else{\n\n            for (int j = i; i * j < 56000; j++) {\n\n                P[i * j] = false;\n\n            }\n\n        }\n\n    }\n\n    vector<int> ans;\n\n    for (int i = 1; i < 56000; i+=5) {\n\n        if(P[i] == true){\n\n            ans.push_back(i);\n\n        }\n\n    }\n\n    for (int i = 0; i < N; i++) {\n\n        printf(\"%d \", ans[i]);\n\n    }\n\n    printf(\"\\n\");\n\n\n\n}"
    },
    {
        "id": "75",
        "source_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <string>\n\n#include <vector>\n\nusing namespace std;\n\ntypedef long long  ll;\n\n#define rep(i,s,n)for(ll i=s;i<n;i++)\n\n#define repe(i,s,n)for(ll i=s;i<=n;i++)\n\n\n\nbool p[100001] = {};\n\nvector<ll> g;\n\n\n\nint main() {\n\n\tll n; cin >> n;\n\n\n\n\tll size = 100001;\n\n\trep(i, 0, size) p[i] = true;\n\n\n\n\tp[0] = false;\n\n\tp[1] = false;\n\n\n\n\tfor (int i = 2; i*i < size; i++) {\n\n\t\tif (p[i]) {\n\n\t\t\tfor (int j = 2; i*j < size; j++) {\n\n\t\t\t\tp[i*j] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\n\trep(i, 0, size) {\n\n\t\tif (p[i] && i % 10 == 1) {\n\n\t\t\tg.push_back(i);\n\n\t\t}\n\n\t}\n\n\n\n\trep(i, 0, n\n\n\t) {\n\n\t\tcout << g[i];\n\n\t\tif (i != g.size() - 1) {\n\n\t\t\tcout << \" \";\n\n\t\t}\n\n\t}\n\n\tcout << endl;\n\n\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <string>\n\n#include <algorithm>\n\n#include <vector>\n\n#include <map>\n\nusing namespace std;\n\ntypedef long long  ll;\n\n#define rep(i,s,n)for(ll i=s;i<n;i++)\n\n#define repe(i,s,n)for(ll i=s;i<=n;i++)\n\n\n\nbool p[100001];\n\nint main()\n\n{\n\n\tll n; cin >> n;\n\n\n\n\tll maxV = 100000;\n\n\trep(i, 0, maxV)p[i] = true;\n\n\tp[0] = false;\n\n\tp[1] = false;\n\n\n\n\tfor (int i = 2; i*i <= maxV; i++) {\n\n\t\tif (!p[i])continue;\n\n\t\tfor (int j = 2; i*j <= maxV; j++) {\n\n\t\t\tif (i*j <= maxV) {\n\n\t\t\t\tp[i*j] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\n\trep(i, 0, maxV) {\n\n\t\tif (p[i] && i % 10 == 1) {\n\n\t\t\tcout << i;\n\n\t\t\tn--;\n\n\n\n\t\t\tif (n != 0)cout << \" \";\n\n\n\n\t\t\tif (n == 0) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcout << endl;\n\n\treturn 0;\n\n}"
    },
    {
        "id": "76",
        "source_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <string>\n\n#include <vector>\n\n#include <map>\n\nusing namespace std;\n\ntypedef long long  ll;\n\n#define rep(i,s,n)for(ll i=s;i<n;i++)\n\n#define repe(i,s,n)for(ll i=s;i<=n;i++)\n\n\n\nbool p[100000] = {};\n\nvector<ll> ans;\n\n\n\nint main() {\n\n\tll n = 100000;\n\n\trep(i, 0, n)p[i] = true;\n\n\tp[0] = false;\n\n\tp[1] = false;\n\n\tfor (int i = 2; i*i < n; i++) {\n\n\t\tif (p[i]) {\n\n\t\t\tfor (int j = 2; i*j < n; j++) {\n\n\t\t\t\tp[i*j] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\trep(i, 0, n) {\n\n\t\tif (p[i] && i % 10 == 1) {\n\n\t\t\tans.push_back(i);\n\n\t\t}\n\n\t}\n\n\n\n\tll N; cin >> N;\n\n\trep(i, 0, N) {\n\n\t\tcout << ans[i];\n\n\t\tif (i != N - 1) {\n\n\t\t\tcout << \" \";\n\n\t\t}\n\n\t}\n\n\tcout << endl;\n\n\treturn 0;\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <string>\n\n#include <algorithm>\n\n#include <vector>\n\n#include <map>\n\nusing namespace std;\n\ntypedef long long  ll;\n\n#define rep(i,s,n)for(ll i=s;i<n;i++)\n\n#define repe(i,s,n)for(ll i=s;i<=n;i++)\n\n\n\nbool p[100001];\n\nint main()\n\n{\n\n\tll n; cin >> n;\n\n\n\n\tll maxV = 100000;\n\n\trep(i, 0, maxV)p[i] = true;\n\n\tp[0] = false;\n\n\tp[1] = false;\n\n\n\n\tfor (int i = 2; i*i <= maxV; i++) {\n\n\t\tif (!p[i])continue;\n\n\t\tfor (int j = 2; i*j <= maxV; j++) {\n\n\t\t\tif (i*j <= maxV) {\n\n\t\t\t\tp[i*j] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\n\trep(i, 0, maxV) {\n\n\t\tif (p[i] && i % 10 == 1) {\n\n\t\t\tcout << i;\n\n\t\t\tn--;\n\n\n\n\t\t\tif (n != 0)cout << \" \";\n\n\n\n\t\t\tif (n == 0) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcout << endl;\n\n\treturn 0;\n\n}"
    },
    {
        "id": "77",
        "source_code": "#include <bits/stdc++.h>\n\n\n\n#define rep2(x,fr,to) for(int (x)=(fr);(x)<(to);(x)++)\n\n#define rep(x,to) for(int (x)=0;(x)<(to);(x)++)\n\n#define repr(x,fr,to) for(int (x)=(fr);(x)>=(to);(x)--)\n\n#define all(c) (c).begin(),(c).end()\n\n#define sz(v) (int)(v).size()\n\n\n\nusing namespace std;\n\ntypedef long long ll; typedef vector<int> VI; typedef pair<int,int> pii;\n\nconst int mod = (int)1e9 + 7;\n\nvoid dbg(){ cerr << \"\\n\"; }  \n\ntemplate <typename T,typename ...T2>\n\nvoid dbg(const T& fst, const T2&...rst){ cerr << fst << \": \"; dbg(rst...); }\n\n\n\n\n\nvector<bool> prime(300100);\n\n\n\nvoid eratos ( int n){\n\n\tprime[2] = true; prime[0] = prime[1] = false;\n\n\tfor(int i = 3; i <= n; i += 2) prime[i] = true, prime[i+1] = false;\n\n\tint limit = (int)sqrt((double)n) + 1;\n\n\tfor(int i = 3; i <= limit; i += 2){\n\n\t\tif(!prime[i]) continue;\n\n\t\tfor(int j = i * i, k = i * 2; j <= n; j += k) prime[j] = false;\n\n\t}\n\n}\n\nint main()\n\n{\n\n\t\n\n\t//cin.tie(0); ios_base::sync_with_stdio(false);\n\n\teratos(300000);\n\n\tVI prm;\n\n\tconst int MX = 100;\n\n\trep(i,300000){\n\n\t\tif(prime[i] && i%5==1) prm.push_back(i);\n\n\t\tif(sz(prm) > MX+4) break;\n\n\t}\n\n\tint n;\n\n\tcin >> n;\n\n\t\n\n\t//dbg(sz(prm));\n\n\tstring sq=string(MX, '0');\n\n\trep(i,n) sq[i] ='1';\n\n\tsort(all(sq));\n\n\tdo {\n\n\t\tint sm =0;\n\n\t\trep(i, MX) if(sq[i]=='1') sm += prm[i];\n\n\t\tif(!prime[sm] ){\n\n\t\t\t//dbg(\"sm=\",sm);\n\n\t\t\trep(i, MX) if(sq[i]=='1'){ cout << prm[i] <<\" \";}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t} while ( next_permutation(all(sq)) );\n\n\n\n\t\n\n\treturn 0;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n\n\n\n\n#define rep2(x,fr,to) for(int (x)=(fr);(x)<(to);(x)++)\n\n#define rep(x,to) for(int (x)=0;(x)<(to);(x)++)\n\n#define repr(x,fr,to) for(int (x)=(fr);(x)>=(to);(x)--)\n\n#define all(c) (c).begin(),(c).end()\n\n#define sz(v) (int)(v).size()\n\n\n\nusing namespace std;\n\ntypedef long long ll; typedef vector<int> VI; typedef pair<int,int> pii;\n\nconst int MD = (int)1e9 + 7; typedef vector<ll> VL;\n\nvoid dbg(){ cerr << \"\\n\"; }  template <class T, class ...T2>\n\nvoid dbg(const T& fst, const T2&...rst){ cerr << fst << \": \"; dbg(rst...); }\n\ntemplate <class T> void amax(T& a,T b){ a=max(a,b);}\n\n\n\nVI eratos ( int n){\n\n\tvector<bool> prime(n+10);\n\n\tprime[2] = true; prime[0] = prime[1] = false;\n\n\tfor(int i = 3; i <= n; i += 2) prime[i] = true, prime[i+1] = false;\n\n\tint limit = (int)sqrt((double)n) + 1;\n\n\tfor(int i = 3; i <= limit; i += 2){\n\n\t\tif(!prime[i]) continue;\n\n\t\tfor(int j = i * i, k = i * 2; j <= n; j += k) prime[j] = false;\n\n\t}\n\n\tVI v;\n\n\trep(i, n+1) if(prime[i]) v.push_back(i);\n\n\treturn v;\n\n}\n\nint main() {\n\n\tcin.tie(0); ios_base::sync_with_stdio(false);\n\n\tint n;\n\n\tcin >>n;\n\n\tauto pr = eratos(55555);\n\n\t\n\n\tVI ans;\n\n\tfor(auto x: pr) if(x%5==1) ans.push_back(x);\n\n\t//dbg(sz(ans));\n\n\trep(i, n) cout << ans[i] <<\" \"; cout<<\"\\n\";\n\n\treturn 0;\n\n}\n\n\n"
    },
    {
        "id": "78",
        "source_code": "#include <bits/stdc++.h>\n\n\n\n#define rep2(x,fr,to) for(int (x)=(fr);(x)<(to);(x)++)\n\n#define rep(x,to) for(int (x)=0;(x)<(to);(x)++)\n\n#define repr(x,fr,to) for(int (x)=(fr);(x)>=(to);(x)--)\n\n#define all(c) (c).begin(),(c).end()\n\n#define sz(v) (int)(v).size()\n\n\n\nusing namespace std;\n\ntypedef long long ll; typedef vector<int> VI; typedef pair<int,int> pii;\n\nconst int mod = (int)1e9 + 7;\n\nvoid dbg(){ cerr << \"\\n\"; }  \n\ntemplate <typename T,typename ...T2>\n\nvoid dbg(const T& fst, const T2&...rst){ cerr << fst << \": \"; dbg(rst...); }\n\n\n\n\n\nvector<bool> prime(300100);\n\n\n\nvoid eratos ( int n){\n\n\tprime[2] = true; prime[0] = prime[1] = false;\n\n\tfor(int i = 3; i <= n; i += 2) prime[i] = true, prime[i+1] = false;\n\n\tint limit = (int)sqrt((double)n) + 1;\n\n\tfor(int i = 3; i <= limit; i += 2){\n\n\t\tif(!prime[i]) continue;\n\n\t\tfor(int j = i * i, k = i * 2; j <= n; j += k) prime[j] = false;\n\n\t}\n\n}\n\nint main()\n\n{\n\n\t\n\n\t//cin.tie(0); ios_base::sync_with_stdio(false);\n\n\teratos(300000);\n\n\tVI prm;\n\n\tconst int MX = 100;\n\n\trep(i,300000){\n\n\t\tif(prime[i] && i%5==1) prm.push_back(i);\n\n\t\tif(sz(prm) > MX+4) break;\n\n\t}\n\n\tint n;\n\n\tcin >> n;\n\n\t\n\n\t//dbg(sz(prm));\n\n\tstring sq=string(MX, '0');\n\n\trep(i,n) sq[i] ='1';\n\n\tsort(all(sq));\n\n\tdo {\n\n\t\tint sm =0;\n\n\t\trep(i, MX) if(sq[i]=='1') sm += prm[i];\n\n\t\tif(!prime[sm] ){\n\n\t\t\t//dbg(\"sm=\",sm);\n\n\t\t\trep(i, MX) if(sq[i]=='1'){ cout << prm[i] <<\" \";}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t} while ( next_permutation(all(sq)) );\n\n\n\n\t\n\n\treturn 0;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n\n\n#define rep2(x,fr,to) for(int (x)=(fr);(x)<(to);(x)++)\n\n#define rep(x,to) for(int (x)=0;(x)<(to);(x)++)\n\n#define repr(x,fr,to) for(int (x)=(fr);(x)>=(to);(x)--)\n\n#define all(c) (c).begin(),(c).end()\n\n#define sz(v) (int)(v).size()\n\n\n\nusing namespace std;\n\ntypedef long long ll; typedef vector<int> VI; typedef pair<int,int> pii;\n\nconst int MD = (int)1e9 + 7; typedef vector<ll> VL;\n\nvoid dbg(){ cerr << \"\\n\"; }  template <class T, class ...T2> void dbg(const T& fst, const T2&...rst){ cerr << fst << \": \"; dbg(rst...); }\n\ntemplate <class T, class T2> void amax(T& a,T2 b){ if(a < b) a = b;}\n\n\n\nvector<bool> prime(60000);\n\nVI pr;\n\nvoid eratos ( int n){\n\n\tprime[2] = true; prime[0] = prime[1] = false;\n\n\tfor(int i = 3; i <= n; i += 2) prime[i] = true, prime[i+1] = false;\n\n\tint limit = (int)sqrt((double)n) + 1;\n\n\tfor(int i = 3; i <= limit; i += 2){\n\n\t\tif(!prime[i]) continue;\n\n\t\tfor(int j = i * i, k = i * 2; j <= n; j += k) prime[j] = false;\n\n\t}\n\n\trep(i, n+1) if(prime[i]) pr.push_back(i);\n\n}\n\n\n\nint main()\n\n{\n\n\tcin.tie(0); ios_base::sync_with_stdio(false);\n\n\tint n;\n\n\tcin >>n;\n\n\teratos(55555);\n\n\tint ct = 1;\n\n\tfor(auto x: pr) if(x%5==1){\n\n\t\tcout <<x <<\" \";\n\n\t\tif(ct++ >=n) break;\n\n\t}\n\n\tcout <<\"\\n\";\n\n\treturn 0;\n\n}\n"
    },
    {
        "id": "79",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nvector<bool> bs(2);\n\nvoid f(int n)\n\n  {if (n <= 1) return;\n\n  bs.resize(n + 1, true);\n\n  for (int i = 2; i * i <= n; ++i)\n\n    if (bs[i]) for (int j = i + i; j <= n; j += i) bs[j] = false;}\n\nint main()\n\n  {int N; cin >> N;\n\n  f(55555);\n\n  int c = 0;\n\n  for (int j = 2; j <= 55555 and c < N; ++j)\n\n    if (bs[j] and j % 5 == 1) {++c; cout << j << (c == N ? \"\\n\" : \" \");}}",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nbool f(int64_t n)\n\n  {if (n <= 1) return false;\n\n  for (auto i = 2LL; i * i <= n; ++i) if (!(n % i)) return false;\n\n  return true;}\n\nint main()\n\n  {int N; cin >> N;\n\n  for (int i = 2; i <= 55555 and N; ++i)\n\n    if (f(i) and i % 5 == 1) {--N; cout << i << (N ? \" \" : \"\\n\");}}"
    },
    {
        "id": "80",
        "source_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <map>\n\n#include <queue>\n\n#include <set>\n\n#include <stack>\n\n#include <string>\n\n#include <vector>\n\n#include <queue>\n\n#include <cmath>\n\n#include <bitset>\n\n#include <complex>\n\n#include <functional>\n\n#include <numeric>\n\n\n\n// output\n\n#define SPBR(w, n) std::cout<<(w + 1 == n ? '\\n' : ' ');\n\n#define YES cout << \"YES\" << endl\n\n#define Yes cout << \"Yes\" << endl\n\n#define NO cout << \"NO\" << endl\n\n#define No cout << \"No\" << endl\n\n// utility\n\n#define ALL(i) (i).begin(), (i).end()\n\n#define FOR(i, a, n) for(int i=(a);i<(n);++i)\n\n#define RFOR(i, a, n) for(int i=(n)-1;i>=(a);--i)\n\n#define REP(i, n) for(int i=0;i<int(n);++i)\n\n#define RREP(i, n) for(int i=int(n)-1;i>=0;--i)\n\n#define IN(a, x, b) (a<=x && x<b)\n\n#define OUT(a, x, b) (x<a || b<=x)\n\ntemplate<class T> inline T chmax(T & a, const T b) { return a = (a < b) ? b : a; }\n\ntemplate<class T> inline T chmin(T& a, const T b) { return a = (a > b) ? b : a; }\n\n\n\n// type/const\n\n#define int ll\n\nusing ll = long long;\n\nusing ull = unsigned long long;\n\nusing ld = long double;\n\nconst int MOD = 1000000007;\n\n/* const int MOD = 998244353; */\n\nconst int INF = 1e18;\n\nconst double PI = acos(-1);\n\n\n\nusing namespace std;\n\n\n\nvector<bool> prime(int n){\n\n  vector<bool> is_prime(n, true);\n\n  is_prime[0] = is_prime[1] = false;\n\n  REP(i, n){\n\n    if(!is_prime[i]) continue;\n\n    for(int j = 2; i*j < n; j++){\n\n      is_prime[i*j] = false;\n\n    }\n\n  }\n\n  return is_prime;\n\n}\n\n\n\nsigned main() {\n\n  int N; \n\n  cin >> N;\n\n\n\n  auto is_prime = prime(60000);\n\n\n\n  vector<int> ans;\n\n  REP(i, 55555+1){\n\n    if(is_prime[i] && i%5 == 1) ans.emplace_back(i);\n\n  }\n\n\n\n  REP(i, N){\n\n    cout << ans[i]; SPBR(i, N);\n\n  }\n\n\n\n  return 0;\n\n}",
        "optimized_code": "#include <iostream>\n\n#include <algorithm>\n\n#include <map>\n\n#include <queue>\n\n#include <set>\n\n#include <stack>\n\n#include <string>\n\n#include <string.h>\n\n#include <vector>\n\n#include <queue>\n\n#include <cmath>\n\n#include <bitset>\n\n#include <complex>\n\n#include <functional>\n\n#include <numeric>\n\n#include <iomanip>\n\n\n\n// output\n\n#define SPBR(w, n) std::cout<<(w + 1 == n ? '\\n' : ' ');\n\n#define YES cout << \"YES\" << endl\n\n#define Yes cout << \"Yes\" << endl\n\n#define NO cout << \"NO\" << endl\n\n#define No cout << \"No\" << endl\n\n// utility\n\n#define ALL(i) (i).begin(), (i).end()\n\n#define FOR(i, a, n) for(int i=(a);i<(n);++i)\n\n#define RFOR(i, a, n) for(int i=(n)-1;i>=(a);--i)\n\n#define REP(i, n) for(int i=0;i<int(n);++i)\n\n#define RREP(i, n) for(int i=int(n)-1;i>=0;--i)\n\n#define IN(a, x, b) (a<=x && x<b)\n\n#define OUT(a, x, b) (x<a || b<=x)\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\n\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n\n\n\n// type/const\n\n#define int ll\n\nusing ll = long long;\n\nusing ull = unsigned long long;\n\nusing ld = long double;\n\nconst int MOD = 1000000007;\n\n/* const int MOD = 998244353; */\n\nconst int INF = 1e18;\n\nconst double PI = acos(-1);\n\n\n\nusing namespace std;\n\nstruct INIT { INIT(){\n\n  cin.tie(0); ios::sync_with_stdio(false);\n\n  cout << fixed << setprecision(10);\n\n}}INIT;\n\n\n\nvector<bool> prime(int n){\n\n  vector<bool> is_prime(n, true);\n\n  is_prime[0] = is_prime[1] = false;\n\n  REP(i, n){\n\n    if(!is_prime[i]) continue;\n\n    for(int j = 2; i*j < n; j++){\n\n      is_prime[i*j] = false;\n\n    }\n\n  }\n\n  return is_prime;\n\n}\n\n\n\nsigned main() {\n\n  int N;\n\n  cin >> N;\n\n\n\n  auto p = prime(55555);\n\n   \n\n  vector<int> ans(N);;\n\n\n\n  int cnt = 0;\n\n  REP(i, 55555){\n\n    if(cnt == N) break;\n\n    if(p[i] && i%5 == 1) ans[cnt++] = i;\n\n  }\n\n\n\n  REP(i, N){\n\n    cout << ans[i]; SPBR(i, N);\n\n  }\n\n\n\n  return 0;\n\n}"
    },
    {
        "id": "81",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n\nint main(){\n\n\tios::sync_with_stdio(false);\n\n\tcin.tie(0);\n\n\tint mx = 55556;\n\n\tvector<bool> a(mx);\n\n\tfill(a.begin(), a.end(), true);\n\n\ta[0] = a[1] = false;\n\n\tfor(int i = 2; i < mx; i++) {\n\n\t\tif(a[i]) {\n\n\t\t\tfor(int j = i * 2; j < mx; j += i) {\n\n\t\t\t\ta[j] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvector<int> p;\n\n\tfor(int i = 0; i < a.size(); i++) {\n\n\t\tif(a[i]) {\n\n\t\t\tp.push_back(i);\n\n\t\t}\n\n\t}\n\n\tint n;\n\n\tcin >> n;\n\n\tint cnt = 0;\n\n\tfor(int i = 0; i < p.size(); i++) {\n\n\t\tif(p[i] % 5 == 1) {\n\n\t\t\tcout << p[i] << \" \";\n\n\t\t\tcnt++;\n\n\t\t}\n\n\t\tif(cnt == n) {\n\n\t\t\tcout << endl;\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\treturn 0;\t\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n\nint main(){\n\n\tios::sync_with_stdio(false);\n\n\tcin.tie(0);\n\n\tint n;\n\n\tcin >> n;\n\n\tint cnt = 0;\n\n\tfor(int i = 2; i < 55556; i++) {\n\n\t\tfor(int j = 2; j * j <= i; j++) {\n\n\t\t\tif(i % j == 0) {\n\n\t\t\t\tgoto NEXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif(i % 5 == 1) {\n\n\t\t\tcout << i << \" \";\n\n\t\t\tcnt++;\n\n\t\t}\n\n\t\tif(cnt == n) {\n\n\t\t\tcout << endl;\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tNEXT:;\n\n\t}\n\n\treturn 0;\t\n\n}\n"
    },
    {
        "id": "82",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n\nint main(){\n\n\tios::sync_with_stdio(false);\n\n\tcin.tie(0);\n\n\tint mx = 55556;\n\n\tvector<bool> a(mx);\n\n\tfill(a.begin(), a.end(), true);\n\n\ta[0] = a[1] = false;\n\n\tfor(int i = 2; i < mx; i++) {\n\n\t\tif(a[i]) {\n\n\t\t\tfor(int j = i * 2; j < mx; j += i) {\n\n\t\t\t\ta[j] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvector<int> p;\n\n\tfor(int i = 0; i < a.size(); i++) {\n\n\t\tif(a[i]) {\n\n\t\t\tp.push_back(i);\n\n\t\t}\n\n\t}\n\n\tint n;\n\n\tcin >> n;\n\n\tint cnt = 0;\n\n\tfor(int i = 0; i < p.size(); i++) {\n\n\t\tif(p[i] % 5 == 1) {\n\n\t\t\tcout << p[i] << \" \";\n\n\t\t\tcnt++;\n\n\t\t}\n\n\t\tif(cnt == n) {\n\n\t\t\tcout << endl;\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\treturn 0;\t\n\n}\n",
        "optimized_code": "#define _USE_MATH_DEFINES\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n\nint main() {\n\n\tios::sync_with_stdio(false);\n\n\tcin.tie(0);\n\n\tconst int max_num = 55556;\n\n\tbool prime[max_num];\n\n\tfill(prime, prime + max_num, true);\n\n\tprime[0] = prime[1] = false;\n\n\tfor(int i = 0; i < max_num; i++) {\n\n\t\tif(prime[i]) {\n\n\t\t\tfor(int j = i * 2; j < max_num; j += i) {\n\n\t\t\t\tprime[j] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint n;\n\n\tcin >> n;\n\n\tfor(int i = 0; i < max_num; i++) {\n\n\t\tif(prime[i] && i % 5 == 1) {\n\n\t\t\tif(i != 11) cout << \" \";\n\n\t\t\tcout << i;\n\n\t\t\tn--;\n\n\t\t}\n\n\t\tif(n == 0) {\n\n\t\t\tcout << endl;\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t}\n\n\treturn 0;\t\n\n}"
    },
    {
        "id": "84",
        "source_code": "#include<bits/stdc++.h>\n\n#define MAXN 95555\n\nusing namespace std;\n\n\n\nvector<int> Prime;\n\nint flag[MAXN];\n\nvoid siv() {\n\n  Prime.push_back(2);\n\n  for(int i = 4 ; i <= MAXN ; i += 2) flag[i] = 1;\n\n  for(int i = 3 ; i * i <= MAXN ; i += 2) {\n\n    if(!flag[i]) {\n\n      for(int j = i * i , k = (i * 2) ; j <= MAXN ; j += k) {\n\n        flag[j] = 1;\n\n      }\n\n    }\n\n  }\n\n  for(int i = 3 ; i < MAXN ; i += 2) {\n\n    if(!flag[i]) {\n\n      Prime.push_back(i);\n\n    }\n\n  }\n\n}\n\n\n\nint main()\n\n{\n\n  siv();\n\n  int n;\n\n  cin >> n;\n\n  for(int i = 0 , ans = 0 ; i < Prime.size() && ans != n ; i++) {\n\n    if(Prime[i] % 5 == 1) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 2) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 3) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 4) ans++ , printf(\"%d \", Prime[i]);\n\n  }\n\n}\n",
        "optimized_code": "#include<stdio.h>\n\n#include<algorithm>\n\n#define maxn 200005\n\n#define inf 0x3f3f3f3f\n\nusing namespace std;\n\ntypedef long int ll;\n\nbool prime[60000];\n\nint ans[60000], p;\n\nint main()\n\n{\n\n    for (int i = 2; i < 60000; ++i){\n\n        if (!prime[i]) for (int j = 2; j * i < 60000; ++j) prime[j * i] = 1;\n\n    }\n\n    int n;\n\n    scanf(\"%d\", &n);\n\n    for (int i = 2; i <= 55555; ++i) if (!prime[i] && i % 5 == 1) ans[++p] = i;\n\n    for (int i = 1; i < n; ++i) printf(\"%d \", ans[i]);\n\n    printf(\"%d\\n\", ans[n]);\n\n    return 0;\n\n}\n"
    },
    {
        "id": "85",
        "source_code": "#include<bits/stdc++.h>\n\n#define MAXN 95555\n\nusing namespace std;\n\n\n\nvector<int> Prime;\n\nint flag[MAXN];\n\nvoid siv() {\n\n  Prime.push_back(2);\n\n  for(int i = 4 ; i <= MAXN ; i += 2) flag[i] = 1;\n\n  for(int i = 3 ; i * i <= MAXN ; i += 2) {\n\n    if(!flag[i]) {\n\n      for(int j = i * i , k = (i * 2) ; j <= MAXN ; j += k) {\n\n        flag[j] = 1;\n\n      }\n\n    }\n\n  }\n\n  for(int i = 3 ; i < MAXN ; i += 2) {\n\n    if(!flag[i]) {\n\n      Prime.push_back(i);\n\n    }\n\n  }\n\n}\n\n\n\nint main()\n\n{\n\n  siv();\n\n  int n;\n\n  cin >> n;\n\n  for(int i = 0 , ans = 0 ; i < Prime.size() && ans != n ; i++) {\n\n    if(Prime[i] % 5 == 1) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 2) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 3) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 4) ans++ , printf(\"%d \", Prime[i]);\n\n  }\n\n}\n",
        "optimized_code": "#include <cstdio>\n\n#include <cmath>\n\n#include <iostream>\n\n\n\nusing namespace std;\n\n\n\nint pri[60];\n\nint n;\n\n\n\nbool prime(int x)\n\n{\n\n    int i,t=0;\n\n    for(i=2;i<sqrt(x);i++)\n\n    {\n\n        if(x%i==0)\n\n        {\n\n            t++;\n\n            break;\n\n        }\n\n    }\n\n    if(t!=0)\n\n    return false;\n\n    return true;\n\n}\n\n\n\nint main()\n\n{\n\n    int a,i;\n\n    while(scanf(\"%d\",&n)!=EOF)\n\n    {\n\n        a=3;\n\n        for(i=1;i<55;i++)\n\n        {\n\n            a=a+10;\n\n            while(!prime(a))\n\n            {\n\n                a=a+10;\n\n            }\n\n            pri[i]=a;\n\n        }\n\n        pri[0]=2;\n\n        for(i=0;i<n-1;i++)\n\n            printf(\"%d \",pri[i]);\n\n        printf(\"%d\\n\",pri[n-1]);\n\n    }\n\n    return 0;\n\n}\n"
    },
    {
        "id": "86",
        "source_code": "#include<bits/stdc++.h>\n\n#define MAXN 95555\n\nusing namespace std;\n\n\n\nvector<int> Prime;\n\nint flag[MAXN];\n\nvoid siv() {\n\n  Prime.push_back(2);\n\n  for(int i = 4 ; i <= MAXN ; i += 2) flag[i] = 1;\n\n  for(int i = 3 ; i * i <= MAXN ; i += 2) {\n\n    if(!flag[i]) {\n\n      for(int j = i * i , k = (i * 2) ; j <= MAXN ; j += k) {\n\n        flag[j] = 1;\n\n      }\n\n    }\n\n  }\n\n  for(int i = 3 ; i < MAXN ; i += 2) {\n\n    if(!flag[i]) {\n\n      Prime.push_back(i);\n\n    }\n\n  }\n\n}\n\n\n\nint main()\n\n{\n\n  siv();\n\n  int n;\n\n  cin >> n;\n\n  for(int i = 0 , ans = 0 ; i < Prime.size() && ans != n ; i++) {\n\n    if(Prime[i] % 5 == 1) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 2) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 3) ans++ , printf(\"%d \", Prime[i]);\n\n    //if(Prime[i] % 5 == 4) ans++ , printf(\"%d \", Prime[i]);\n\n  }\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<algorithm>\n\n#include <cstring>\n\nusing namespace std;\n\nbool judge(int n)\n\n{\n\n    for (int i=2;i*i<=n;i++)\n\n        if (n%i==0) return false;\n\n        return true;\n\n}\n\nint main ()\n\n{    int n;\n\n     cin>>n;\n\n    for (int i=11;;i=i+10)\n\n    {\n\n        if (judge(i))\n\n        {\n\n            cout<<i<<\" \";\n\n            n--;\n\n        }\n\n        if (n==0) {cout<<endl;break;}\n\n    }\n\n    return 0;\n\n}\n"
    },
    {
        "id": "89",
        "source_code": "#include <bits/stdc++.h>\n\nconst int MOD = (int)1e9+7;using namespace std;using ll = long long;using ld = long double;using P = pair<ll,ll>;const string rt = \"\\n\", sp = \" \";/* GCD */template<typename M, typename N> constexpr common_type_t<M,N> gcd(M a, N b){return b != 0 ? gcd(b, a % b) : a;}/* LCM */template<typename M, typename N> constexpr common_type_t<M,N> lcm(M a, N b){return a*b/gcd(a,b);}/* UnionFind */template<typename T> struct UnionFind{vector<T> par;UnionFind(T n) : par(n, -1){}void init(T n){par.assign(n, -1);}T root(T x){if (par[x] < 0) return x;else return par[x] = root(par[x]);}bool issame(T x, T y){return root(x) == root(y);}bool merge(T x, T y){x = root(x); y = root(y);if(x == y) return false;if(par[x] > par[y]) swap(x, y);par[x] += par[y];par[y] = x;return true;}int size(int x) {return -par[root(x)];}};/* COMB */ll comb(ll n, ll r) {if(n < r) return 0;if ( r * 2 > n ) r = n - r;ll dividend = 1;ll divisor  = 1;for (ll i = 1; i <= r; ++i ) {dividend *= (n-i+1);divisor  *= i;}return dividend / divisor;}/* COMB % MOD */template<typename T> ll combpm(T N_, T C_) {const int NUM_=400001;static ll fact[NUM_+1],factr[NUM_+1],inv[NUM_+1];if (fact[0]==0) {inv[1]=fact[0]=factr[0]=1;for (int i=2;i<=NUM_;++i) inv[i] = inv[MOD % i] * (MOD - MOD / i) % MOD;for (int i=1;i<=NUM_;++i) fact[i]=fact[i-1]*i%MOD, factr[i]=factr[i-1]*inv[i]%MOD;}if(C_<0 || C_>N_) return 0;return factr[C_]*fact[N_]%MOD*factr[N_-C_]%MOD;}/* MAKE VECTOR */template<class T> constexpr vector<T> mvec(size_t a){return vector<T>(a);}template<class T, class... Ts>auto mvec(size_t a, Ts... ts){return vector<decltype(mvec<T>(ts...))>(a, mvec<T>(ts...));}/* MAKE DEQUE */template<class T>constexpr deque<T> mdeq(size_t a){return deque<T>(a);}template<class T, class... Ts>auto mdeq(size_t a, Ts... ts){return deque<decltype(mdeq<T>(ts...))>(a, mdeq<T>(ts...));}/* TEST */void test(ll n){cout << \"test\" << n << endl;}/* PRECISION */void fixsp(ll n){cout << fixed << setprecision(n);}void defsp(ll n){cout << defaultfloat << setprecision(n);}/* WEIGHTENED UnionFind */struct WUnionFind {vector<int> par;vector<int> rank;WUnionFind(int n = 1) {init(n);}void init(int n = 1) {par.resize(n); rank.resize(n);for (int i = 0; i < n; ++i) par[i] = i, rank[i] = 0;}int root(int x) {if (par[x] == x) {return x;}else {int r = root(par[x]);return par[x] = r;}}bool issame(int x, int y) {return root(x) == root(y);}bool merge(int x, int y) {x = root(x); y = root(y);if (x == y) return false;if (rank[x] < rank[y]) swap(x, y);if (rank[x] == rank[y]) ++rank[x];par[y] = x;return true;}};/* DIVISOR */deque<ll> divisor(ll n) {deque<ll> ret;for(ll i = 1; i * i <= n; i++) {if(n % i == 0) {ret.push_back(i);if(i * i != n) ret.push_back(n / i);}}sort(begin(ret), end(ret));return (ret);}/* MODE */template<typename T> auto mode(T data){if(data.size() == 1) return *begin(data);sort(begin(data), end(data));typename decltype(data)::value_type mode{};size_t n{},count{1};for(auto iter = adjacent_find(begin(data), end(data)),last = end(data), next = end(data); iter != last;){next = upper_bound(iter, last, *iter);count = distance(iter,next);if(n < count) n = count, mode = *iter;iter = adjacent_find(next, last);}return mode;}/* MEDIAN */template<typename T> auto median(T data){sort(begin(data), end(data));size_t median_index = data.size() / 2;return (data.size() % 2 == 0? static_cast<double>(data[median_index] + data[median_index - 1]) / 2: data[median_index]);}/* INT POW */template<typename T> ll multi(T a, T b){ll ans{1};for(int i{}; i<b; i++) ans *= a;return ans;}/* INF */template<typename T> constexpr T inf(){return numeric_limits<T>::max();}/* FASTER IO */void fastio(){ios::sync_with_stdio(false);cin.tie(NULL);}/* MIN COST FLOW */template< typename flow_t, typename cost_t >struct PrimalDual {const cost_t INF;struct edge {int to;flow_t cap;cost_t cost;int rev;bool isrev;};vector< vector< edge > > graph;vector< cost_t > potential, min_cost;vector< int > prevv, preve;PrimalDual(int V) : graph(V), INF(numeric_limits< cost_t >::max()) {}void add_edge(int from, int to, flow_t cap, cost_t cost) {graph[from].emplace_back((edge) {to, cap, cost, (int) graph[to].size(), false});graph[to].emplace_back((edge) {from, 0, -cost, (int) graph[from].size() - 1, true});}cost_t min_cost_flow(int s, int t, flow_t f) {int V = (int) graph.size();cost_t ret = 0;using Pi = pair< cost_t, int >;priority_queue< Pi, vector< Pi >, greater< Pi > > que;potential.assign(V, 0);preve.assign(V, -1);prevv.assign(V, -1);while(f > 0) {min_cost.assign(V, INF);que.emplace(0, s);min_cost[s] = 0;while(!que.empty()) {Pi p = que.top();que.pop();if(min_cost[p.second] < p.first) continue;for(int i = 0; i < graph[p.second].size(); i++) {edge &e = graph[p.second][i];cost_t nextCost = min_cost[p.second] + e.cost + potential[p.second] - potential[e.to];if(e.cap > 0 && min_cost[e.to] > nextCost) {min_cost[e.to] = nextCost;prevv[e.to] = p.second, preve[e.to] = i;que.emplace(min_cost[e.to], e.to);}}}if(min_cost[t] == INF) return -1;for(int v = 0; v < V; v++) potential[v] += min_cost[v];flow_t addflow = f;for(int v = t; v != s; v = prevv[v]) {addflow = min(addflow, graph[prevv[v]][preve[v]].cap);}f -= addflow;ret += addflow * potential[t];for(int v = t; v != s; v = prevv[v]) {edge &e = graph[prevv[v]][preve[v]];e.cap -= addflow;graph[v][e.rev].cap += addflow;}}return ret;}void output() {for(int i = 0; i < graph.size(); i++) {for(auto &e : graph[i]) {if(e.isrev) continue;auto &rev_e = graph[e.to][e.rev];cout << i << \"->\" << e.to << \" (flow: \" << rev_e.cap << \"/\" << rev_e.cap + e.cap << \")\" << endl;}}}};\n\n#define all(a) a.begin(), a.end()\n\n#define rall(a) a.rbegin(), a.rend()\n\n#define rep(i, s, N) for(ll i{s}; i < (N); i++)\n\n#define rem(i, N, s) for(ll i{N}; i > (s); i--)\n\n\n\n/* CODE STARTS FROM HERE */\n\n\n\nint main(){\n\n  fastio();\n\n  ll N;\n\n  cin >> N;\n\n  auto mem = mdeq<ll>(0);\n\n  auto IsPN = [&](ll n) -> bool{\n\n    return divisor(n).size()==2;\n\n  };\n\n  ll n{};\n\n  rep(times,0,N){\n\n    a:\n\n    if(IsPN(n)){\n\n      if(n%5==1){\n\n        mem.push_front(n);\n\n        n++;\n\n      }\n\n      else{\n\n        n++;\n\n        goto a;\n\n      }\n\n    }\n\n    else{\n\n      n++;\n\n      goto a;\n\n    }\n\n  }\n\n  reverse(all(mem));\n\n  for(auto&& i : mem){\n\n    cout << (i==11? \"\" : sp) << i;\n\n  }\n\n}",
        "optimized_code": "#include <bits/stdc++.h>\n\nconst int MOD = (int)1e9+7;using namespace std;using ll = long long;using ld = long double;using P = pair<ll,ll>;const string rt = \"\\n\", sp = \" \";/* GCD */template<typename M, typename N> constexpr common_type_t<M,N> gcd(M a, N b){return b != 0 ? gcd(b, a % b) : a;}/* LCM */template<typename M, typename N> constexpr common_type_t<M,N> lcm(M a, N b){return a*b/gcd(a,b);}/* UnionFind */template<typename T> struct UnionFind{vector<T> par;UnionFind(T n) : par(n, -1){}void init(T n){par.assign(n, -1);}T root(T x){if (par[x] < 0) return x;else return par[x] = root(par[x]);}bool issame(T x, T y){return root(x) == root(y);}bool merge(T x, T y){x = root(x); y = root(y);if(x == y) return false;if(par[x] > par[y]) swap(x, y);par[x] += par[y];par[y] = x;return true;}int size(int x) {return -par[root(x)];}};/* COMB */ll comb(ll n, ll r) {if(n < r) return 0;if ( r * 2 > n ) r = n - r;ll dividend = 1;ll divisor  = 1;for (ll i = 1; i <= r; ++i ) {dividend *= (n-i+1);divisor  *= i;}return dividend / divisor;}/* COMB % MOD */template<typename T> ll combpm(T N_, T C_) {const int NUM_=400001;static ll fact[NUM_+1],factr[NUM_+1],inv[NUM_+1];if (fact[0]==0) {inv[1]=fact[0]=factr[0]=1;for (int i=2;i<=NUM_;++i) inv[i] = inv[MOD % i] * (MOD - MOD / i) % MOD;for (int i=1;i<=NUM_;++i) fact[i]=fact[i-1]*i%MOD, factr[i]=factr[i-1]*inv[i]%MOD;}if(C_<0 || C_>N_) return 0;return factr[C_]*fact[N_]%MOD*factr[N_-C_]%MOD;}/* MAKE VECTOR */template<class T> constexpr vector<T> mvec(size_t a){return vector<T>(a);}template<class T, class... Ts>auto mvec(size_t a, Ts... ts){return vector<decltype(mvec<T>(ts...))>(a, mvec<T>(ts...));}/* MAKE DEQUE */template<class T>constexpr deque<T> mdeq(size_t a){return deque<T>(a);}template<class T, class... Ts>auto mdeq(size_t a, Ts... ts){return deque<decltype(mdeq<T>(ts...))>(a, mdeq<T>(ts...));}/* TEST */void test(ll n){cout << \"test\" << n << endl;}/* PRECISION */void fixsp(ll n){cout << fixed << setprecision(n);}void defsp(ll n){cout << defaultfloat << setprecision(n);}/* WEIGHTENED UnionFind */struct WUnionFind {vector<int> par;vector<int> rank;WUnionFind(int n = 1) {init(n);}void init(int n = 1) {par.resize(n); rank.resize(n);for (int i = 0; i < n; ++i) par[i] = i, rank[i] = 0;}int root(int x) {if (par[x] == x) {return x;}else {int r = root(par[x]);return par[x] = r;}}bool issame(int x, int y) {return root(x) == root(y);}bool merge(int x, int y) {x = root(x); y = root(y);if (x == y) return false;if (rank[x] < rank[y]) swap(x, y);if (rank[x] == rank[y]) ++rank[x];par[y] = x;return true;}};/* DIVISOR */deque<ll> divisor(ll n) {deque<ll> ret;for(ll i = 1; i * i <= n; i++) {if(n % i == 0) {ret.push_back(i);if(i * i != n) ret.push_back(n / i);}}sort(begin(ret), end(ret));return (ret);}/* MODE */template<typename T> auto mode(T data){if(data.size() == 1) return *begin(data);sort(begin(data), end(data));typename decltype(data)::value_type mode{};size_t n{},count{1};for(auto iter = adjacent_find(begin(data), end(data)),last = end(data), next = end(data); iter != last;){next = upper_bound(iter, last, *iter);count = distance(iter,next);if(n < count) n = count, mode = *iter;iter = adjacent_find(next, last);}return mode;}/* MEDIAN */template<typename T> auto median(T data){sort(begin(data), end(data));size_t median_index = data.size() / 2;return (data.size() % 2 == 0? static_cast<double>(data[median_index] + data[median_index - 1]) / 2: data[median_index]);}/* INT POW */template<typename T> ll multi(T a, T b){ll ans{1};for(int i{}; i<b; i++) ans *= a;return ans;}/* INF */template<typename T> constexpr T inf(){return numeric_limits<T>::max();}/* FASTER IO */void fastio(){ios::sync_with_stdio(false);cin.tie(NULL);}/* MIN COST FLOW */template< typename flow_t, typename cost_t >struct PrimalDual {const cost_t INF;struct edge {int to;flow_t cap;cost_t cost;int rev;bool isrev;};vector< vector< edge > > graph;vector< cost_t > potential, min_cost;vector< int > prevv, preve;PrimalDual(int V) : graph(V), INF(numeric_limits< cost_t >::max()) {}void add_edge(int from, int to, flow_t cap, cost_t cost) {graph[from].emplace_back((edge) {to, cap, cost, (int) graph[to].size(), false});graph[to].emplace_back((edge) {from, 0, -cost, (int) graph[from].size() - 1, true});}cost_t min_cost_flow(int s, int t, flow_t f) {int V = (int) graph.size();cost_t ret = 0;using Pi = pair< cost_t, int >;priority_queue< Pi, vector< Pi >, greater< Pi > > que;potential.assign(V, 0);preve.assign(V, -1);prevv.assign(V, -1);while(f > 0) {min_cost.assign(V, INF);que.emplace(0, s);min_cost[s] = 0;while(!que.empty()) {Pi p = que.top();que.pop();if(min_cost[p.second] < p.first) continue;for(int i = 0; i < graph[p.second].size(); i++) {edge &e = graph[p.second][i];cost_t nextCost = min_cost[p.second] + e.cost + potential[p.second] - potential[e.to];if(e.cap > 0 && min_cost[e.to] > nextCost) {min_cost[e.to] = nextCost;prevv[e.to] = p.second, preve[e.to] = i;que.emplace(min_cost[e.to], e.to);}}}if(min_cost[t] == INF) return -1;for(int v = 0; v < V; v++) potential[v] += min_cost[v];flow_t addflow = f;for(int v = t; v != s; v = prevv[v]) {addflow = min(addflow, graph[prevv[v]][preve[v]].cap);}f -= addflow;ret += addflow * potential[t];for(int v = t; v != s; v = prevv[v]) {edge &e = graph[prevv[v]][preve[v]];e.cap -= addflow;graph[v][e.rev].cap += addflow;}}return ret;}void output() {for(int i = 0; i < graph.size(); i++) {for(auto &e : graph[i]) {if(e.isrev) continue;auto &rev_e = graph[e.to][e.rev];cout << i << \"->\" << e.to << \" (flow: \" << rev_e.cap << \"/\" << rev_e.cap + e.cap << \")\" << endl;}}}};\n\n#define all(a) a.begin(), a.end()\n\n#define rall(a) a.rbegin(), a.rend()\n\n#define rep(i, s, N) for(ll i{s}; i < (N); i++)\n\n#define rem(i, N, s) for(ll i{N}; i > (s); i--)\n\n\n\n/* CODE STARTS FROM HERE */\n\n\n\nint main(){\n\n  fastio();\n\n  ll N;\n\n  cin >> N;\n\n  auto mem = mdeq<ll>(0);\n\n  auto IsPN = [&](ll n) -> bool{\n\n    return divisor(n).size()==2;\n\n  };\n\n  ll n{11};\n\n  rep(times,0,N){\n\n    a:\n\n    if(IsPN(n)){\n\n      mem.push_front(n);\n\n      n+=10;\n\n    }\n\n    else{\n\n      n+=10;\n\n      goto a;\n\n    }\n\n  }\n\n  reverse(all(mem));\n\n  for(auto&& i : mem){\n\n    cout << (i==11? \"\" : sp) << i;\n\n  }\n\n}"
    },
    {
        "id": "90",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef pair<int, int> P;\n\n#define rep(i, n) for (int i = 0; i < (int)(n); ++i)\n\n#define all(x) (x).begin(),(x).end()\n\ntemplate <class T> inline bool chmin(T &a, T b) {if (a > b){a = b;return true;}return false;}\n\ntemplate <class T> inline bool chmax(T &a, T b) {if (a < b){a = b;return true;}return false;}\n\n\n\nvector<int> sieve(int n){\n\n    vector<bool> is_prime(n+1, true);\n\n    vector<int> p;\n\n    for(int i=2; i<=n; i++){\n\n        if(is_prime[i]) {\n\n            for(int j=2*i; j<=n; j+=i){\n\n                is_prime[j] = false;\n\n            }\n\n            p.emplace_back(i);\n\n        }\n\n    }\n\n    return p;\n\n}\n\n\n\nint main(){\n\n    cin.tie(0);\n\n    ios::sync_with_stdio(false);\n\n    int n; cin>>n;\n\n    vector<int> p = sieve(55555);\n\n    int cnt = 0;\n\n    for(auto a : p){\n\n        if(a % 5 == 1){\n\n            cout<<a<<\" \";\n\n            cnt++;\n\n        }\n\n        if(cnt == n) break;\n\n    }\n\n    cout<<endl;\n\n    return 0;\n\n}\n\n// abc096_d",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\ntypedef pair<int, int> P;\n\n#define rep(i, n) for (int i = 0; i < (int)(n); ++i)\n\n#define all(x) (x).begin(),(x).end()\n\ntemplate <class T> inline bool chmin(T &a, T b) {if (a > b){a = b;return true;}return false;}\n\ntemplate <class T> inline bool chmax(T &a, T b) {if (a < b){a = b;return true;}return false;}\n\n\n\nbool isPrime(int x){\n\n    int i;\n\n    if(x < 2)return 0;\n\n    else if(x == 2) return 1;\n\n    if(x%2 == 0) return 0;\n\n    for(i = 3; i*i <= x; i += 2) if(x%i == 0) return 0;\n\n    return 1;\n\n}\n\n\n\nint main(){\n\n    cin.tie(0);\n\n    ios::sync_with_stdio(false);\n\n    int n; cin>>n;\n\n    int cnt = 0;\n\n    for(int i=1; i<= 55555; i++){\n\n        if(isPrime(i) && i%5==1){\n\n            cout<<i<<\" \";\n\n            cnt++;\n\n        } \n\n        if(cnt==n) break;\n\n    }\n\n    cout<<endl;\n\n    return 0;\n\n}\n\n// abc096_d"
    },
    {
        "id": "95",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n\n\nconst int MAXN=200005;\n\n\n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n\n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n\n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot;\n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\nconst int maxn = 2e5 + 10;\n\n\n\ntypedef long long ll;\n\n\n\nll p[maxn];\n\nll a[maxn],b[maxn];\n\nmap<ll,int> m;\n\nll lowbit(ll x) {return x & -x;};\n\n\n\nll sum(ll x) {\n\n    ll res = 0;\n\n    while (x > 0) {\n\n        res += p[x];\n\n        x -= lowbit(x);\n\n    }\n\n    return res;\n\n}\n\n\n\nvoid add(ll x) {\n\n    while (x < maxn) {\n\n        p[x]++;\n\n        x += lowbit(x);\n\n    }\n\n}\n\n\n\nint main() {\n\n    int n,k; cin>>n>>k;\n\n    for (int i = 1; i <= n; i++) {\n\n        cin>>a[i];\n\n        a[i] += a[i - 1] - k;\n\n        b[i] = a[i];\n\n    }\n\n    sort(b, b + n + 1);\n\n    int len = 1;\n\n    for (int i = 0; i <= n; i++) {\n\n        if (m[b[i]]) continue;\n\n        m[b[i]] = len++;\n\n    }\n\n    ll res = 0;\n\n    for (int i = 0; i <= n; i++) {\n\n        ll t = m[a[i]];\n\n        res += sum(t);\n\n        add(t);\n\n    }\n\n    cout<<res<<endl;\n\n\n\n\n\n    return 0;\n\n}\n"
    },
    {
        "id": "96",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n\n\nusing namespace std;\n\n\n\nconst int maxn = 2e5 + 10;\n\n\n\ntypedef long long ll;\n\n\n\nll p[maxn];\n\nll a[maxn],b[maxn];\n\nmap<ll,int> m;\n\nll lowbit(ll x) {return x & -x;};\n\n\n\nll sum(ll x) {\n\n    ll res = 0;\n\n    while (x > 0) {\n\n        res += p[x];\n\n        x -= lowbit(x);\n\n    }\n\n    return res;\n\n}\n\n\n\nvoid add(ll x) {\n\n    while (x < maxn) {\n\n        p[x]++;\n\n        x += lowbit(x);\n\n    }\n\n}\n\n\n\nint main() {\n\n    int n,k; cin>>n>>k;\n\n    for (int i = 1; i <= n; i++) {\n\n        cin>>a[i];\n\n        a[i] += a[i - 1] - k;\n\n        b[i] = a[i];\n\n    }\n\n    sort(b, b + n + 1);\n\n    int len = 1;\n\n    for (int i = 0; i <= n; i++) {\n\n        if (m[b[i]]) continue;\n\n        m[b[i]] = len++;\n\n    }\n\n    ll res = 0;\n\n    for (int i = 0; i <= n; i++) {\n\n        ll t = m[a[i]];\n\n        res += sum(t);\n\n        add(t);\n\n    }\n\n    cout<<res<<endl;\n\n\n\n\n\n    return 0;\n\n}\n"
    },
    {
        "id": "97",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n\n\nconst int MAXN=200005;\n\n\n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n\n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n\n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot;\n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n}\n",
        "optimized_code": "    #include<bits/stdc++.h>\n\n\n\n    using namespace std;\n\n\n\n    const int maxn = 2e5+111;\n\n\n\n    long long c[maxn];\n\n    long long s[maxn];\n\n    long long lowbit(long long x)\n\n    {\n\n        return x & -x;\n\n    }\n\n\n\n    long long sum(long long x)\n\n    {\n\n        long long res = 0;\n\n        while(x>0)\n\n        {\n\n            res += c[x];\n\n            x -= lowbit(x);\n\n        }\n\n        return res;\n\n    }\n\n\n\n    void add(long long x,long long v)\n\n    {\n\n        while(x<maxn)\n\n        {\n\n            c[x] += v;\n\n            x += lowbit(x);\n\n        }\n\n    }\n\n\n\n    int main()\n\n    {\n\n        long long n,k;\n\n        cin>>n>>k;\n\n        long long x;\n\n        vector<long long> v;\n\n        for(int i =1;i<=n;i++)\n\n        {\n\n            scanf(\"%lld\",&x);\n\n            x -= k;\n\n            s[i] = s[i-1] + x;\n\n            //v.push_back(s[i]);\n\n        }\n\n        for(int i =0;i<=n;i++)\n\n        v.push_back(s[i]);\n\n        sort(v.begin(),v.end());\n\n        v.resize(unique(v.begin(),v.end()) - v.begin());\n\n        for(int i = 0;i<=n;i++)\n\n            s[i] = lower_bound(v.begin(),v.end(),s[i])-v.begin()+1;\n\n        long long ans = 0;\n\n        for(int i = 0;i<=n;i++)\n\n            {ans += sum(s[i]);\n\n            add(s[i],1);}\n\n        cout<<ans<<endl;\n\n    }\n"
    },
    {
        "id": "98",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "    #include<bits/stdc++.h>\n\n\n\n    using namespace std;\n\n\n\n    const int maxn = 2e5+111;\n\n\n\n    long long c[maxn];\n\n    long long s[maxn];\n\n    long long lowbit(long long x)\n\n    {\n\n        return x & -x;\n\n    }\n\n\n\n    long long sum(long long x)\n\n    {\n\n        long long res = 0;\n\n        while(x>0)\n\n        {\n\n            res += c[x];\n\n            x -= lowbit(x);\n\n        }\n\n        return res;\n\n    }\n\n\n\n    void add(long long x,long long v)\n\n    {\n\n        while(x<maxn)\n\n        {\n\n            c[x] += v;\n\n            x += lowbit(x);\n\n        }\n\n    }\n\n\n\n    int main()\n\n    {\n\n        long long n,k;\n\n        cin>>n>>k;\n\n        long long x;\n\n        vector<long long> v;\n\n        for(int i =1;i<=n;i++)\n\n        {\n\n            scanf(\"%lld\",&x);\n\n            x -= k;\n\n            s[i] = s[i-1] + x;\n\n            //v.push_back(s[i]);\n\n        }\n\n        for(int i =0;i<=n;i++)\n\n        v.push_back(s[i]);\n\n        sort(v.begin(),v.end());\n\n        v.resize(unique(v.begin(),v.end()) - v.begin());\n\n        for(int i = 0;i<=n;i++)\n\n            s[i] = lower_bound(v.begin(),v.end(),s[i])-v.begin()+1;\n\n        long long ans = 0;\n\n        for(int i = 0;i<=n;i++)\n\n            {ans += sum(s[i]);\n\n            add(s[i],1);}\n\n        cout<<ans<<endl;\n\n    }\n"
    },
    {
        "id": "99",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n\n\nconst int MAXN=200005;\n\n\n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n\n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n\n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot;\n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n#define N 200001\n\nusing namespace std;\n\n\n\ntypedef unsigned ui;\n\ntypedef long long ll;\n\ntypedef unsigned long long ul;\n\n\n\nll a[N], s[N];\n\n\n\nui st[1 << 19], m;\n\nvoid modify(ui w) {\n\n\tw += m;\n\n\tdo st[w]++; while (w >>= 1);\n\n}\n\n\n\nui query(ui l, ui r) {\n\n\tui res = 0;\n\n\tfor (l += m - 1, r += m + 1; l ^ r ^ 1; l >>= 1, r >>= 1) {\n\n\t\tif (~l & 1) res += st[l ^ 1];\n\n\t\tif (r & 1) res += st[r ^ 1];\n\n\t}\n\n\treturn res;\n\n}\n\n\n\nint main(void) {\n\n\tios::sync_with_stdio(0); cin.tie(0);\n\n#ifdef _DEBUG\n\n\tifstream cin(\"1.in\");\n\n#endif\n\n\tui n; ll k; cin >> n >> k;\n\n\tfor (ui i = 1; i <= n; ++i) cin >> a[i];\n\n\tfor (ui i = 1; i <= n; ++i) s[i] = a[i] + s[i - 1];\n\n\tfor (ui i = 1; i <= n; ++i) a[i] = s[i] - k * i;\n\n\tvector<ll> sv; sv.push_back(0);\n\n\tfor (ui i = 1; i <= n; ++i) sv.push_back(a[i]);\n\n\tsort(sv.begin(), sv.end()); sv.erase(unique(sv.begin(), sv.end()), sv.end());\n\n\tfor (m = 1; m <= sv.size() + 2; m <<= 1);\n\n\tul ans = 0;\n\n\tmodify(lower_bound(sv.begin(), sv.end(), 0) - sv.begin() + 1);\n\n\tfor (ui i = 1; i <= n; ++i) {\n\n\t\tui w = lower_bound(sv.begin(), sv.end(), a[i]) - sv.begin() + 1;\n\n\t\tans += query(1, w);\n\n\t\tmodify(w);\n\n\t}\n\n\tcout << ans << endl;\n\n\treturn 0;\n\n}"
    },
    {
        "id": "100",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n#define N 200001\n\nusing namespace std;\n\n\n\ntypedef unsigned ui;\n\ntypedef long long ll;\n\ntypedef unsigned long long ul;\n\n\n\nll a[N], s[N];\n\n\n\nui st[1 << 19], m;\n\nvoid modify(ui w) {\n\n\tw += m;\n\n\tdo st[w]++; while (w >>= 1);\n\n}\n\n\n\nui query(ui l, ui r) {\n\n\tui res = 0;\n\n\tfor (l += m - 1, r += m + 1; l ^ r ^ 1; l >>= 1, r >>= 1) {\n\n\t\tif (~l & 1) res += st[l ^ 1];\n\n\t\tif (r & 1) res += st[r ^ 1];\n\n\t}\n\n\treturn res;\n\n}\n\n\n\nint main(void) {\n\n\tios::sync_with_stdio(0); cin.tie(0);\n\n#ifdef _DEBUG\n\n\tifstream cin(\"1.in\");\n\n#endif\n\n\tui n; ll k; cin >> n >> k;\n\n\tfor (ui i = 1; i <= n; ++i) cin >> a[i];\n\n\tfor (ui i = 1; i <= n; ++i) s[i] = a[i] + s[i - 1];\n\n\tfor (ui i = 1; i <= n; ++i) a[i] = s[i] - k * i;\n\n\tvector<ll> sv; sv.push_back(0);\n\n\tfor (ui i = 1; i <= n; ++i) sv.push_back(a[i]);\n\n\tsort(sv.begin(), sv.end()); sv.erase(unique(sv.begin(), sv.end()), sv.end());\n\n\tfor (m = 1; m <= sv.size() + 2; m <<= 1);\n\n\tul ans = 0;\n\n\tmodify(lower_bound(sv.begin(), sv.end(), 0) - sv.begin() + 1);\n\n\tfor (ui i = 1; i <= n; ++i) {\n\n\t\tui w = lower_bound(sv.begin(), sv.end(), a[i]) - sv.begin() + 1;\n\n\t\tans += query(1, w);\n\n\t\tmodify(w);\n\n\t}\n\n\tcout << ans << endl;\n\n\treturn 0;\n\n}"
    },
    {
        "id": "101",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n\n\nconst int MAXN=200005;\n\n\n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n\n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n\n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot;\n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nlong long aa;bool bb;char ch;\n\nlong long scan()\n\n{\n\n\twhile(ch=getchar(),(ch<'0'||ch>'9')&&ch!='-');\n\n\tch=='-'?(bb=1,aa=0):(bb=0,aa=ch-48);\n\n\twhile(ch=getchar(),(ch>='0'&&ch<='9'))\n\n\t\taa=aa*10+ch-48;\n\n\treturn (bb?(-aa):(aa));\n\n} \n\n//\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u6570  \n\nlong long Length;\n\nstruct Node  \n\n{  \n\n    long long data;  \n\n    long long pos;  \n\n};  \n\nNode seq[200010];  \n\nlong long TreeArray[200010]; \n\n\n\nlong long LowBit(long long num)  \n\n{  \n\n    return num&(num^(num-1));  \n\n}  \n\nlong long cmp(Node num1,Node num2)  \n\n{  \n\n\tif(num2.data==num1.data)\n\n\t\treturn num1.pos<num2.pos;\n\n    return num1.data>num2.data;  \n\n}  \n\nlong long sum(long long pos)  \n\n{  \n\n    long long result=0;  \n\n    while (pos)  \n\n    {  \n\n        result+=TreeArray[pos];  \n\n        pos-=LowBit(pos);  \n\n    }  \n\n    return result;  \n\n}  \n\nvoid INC(long long pos)  \n\n{  \n\n    while(pos<=Length)  \n\n    {  \n\n        TreeArray[pos]++;  \n\n        pos+=LowBit(pos);  \n\n    }  \n\n}  \n\nvoid insertNum(long long &reverseNum)  \n\n{  \n\n    for (long long i=1;i<=Length;i++)  \n\n    {  \n\n        reverseNum+=sum(seq[i].pos); \n\n        //cout<<i<<\" \"<<seq[i].data<<\"\\t\"<<seq[i].pos<<\"\\t\"<<reverseNum<<endl;\n\n        INC(seq[i].pos);   \n\n    }  \n\n}  \n\nlong long n,k;\n\nlong long arr[200010];\n\nint main()  \n\n{  \n\n\tscanf(\"%lld%lld\",&n,&k);\n\n\tLength=n+1;\n\n\tfor(int i=1;i<=n;++i)\n\n\t\tarr[i]=scan()-k;\n\n\tfor(int i=2;i<=n;++i)\n\n\t\tarr[i]=arr[i-1]+arr[i]; \n\n\tseq[1].data=0;\n\n\tseq[1].pos=1;\n\n    for(int i=1;i<=n;i++)  \n\n    {  \n\n        seq[i+1].data=-arr[i];  \n\n    \t\n\n        seq[i+1].pos=i+1; \n\n    }  \n\n    \n\n    //\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\n    sort(seq+1,seq+Length+1,cmp);\n\n    \n\n    //for(int i=1;i<=Length;i++)  \n\n\t//\tcout<<seq[i].data<<\" \"<<seq[i].pos<<endl;\n\n\t//cout<<endl;\n\n    long long reverseNum=0;  \n\n    insertNum(reverseNum); \n\n    cout<<reverseNum<<endl;\n\n    return 0;  \n\n}  \n"
    },
    {
        "id": "102",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nlong long aa;bool bb;char ch;\n\nlong long scan()\n\n{\n\n\twhile(ch=getchar(),(ch<'0'||ch>'9')&&ch!='-');\n\n\tch=='-'?(bb=1,aa=0):(bb=0,aa=ch-48);\n\n\twhile(ch=getchar(),(ch>='0'&&ch<='9'))\n\n\t\taa=aa*10+ch-48;\n\n\treturn (bb?(-aa):(aa));\n\n} \n\n//\u7528\u6811\u72b6\u6570\u7ec4\u6c42\u9006\u5e8f\u6570  \n\nlong long Length;\n\nstruct Node  \n\n{  \n\n    long long data;  \n\n    long long pos;  \n\n};  \n\nNode seq[200010];  \n\nlong long TreeArray[200010]; \n\n\n\nlong long LowBit(long long num)  \n\n{  \n\n    return num&(num^(num-1));  \n\n}  \n\nlong long cmp(Node num1,Node num2)  \n\n{  \n\n\tif(num2.data==num1.data)\n\n\t\treturn num1.pos<num2.pos;\n\n    return num1.data>num2.data;  \n\n}  \n\nlong long sum(long long pos)  \n\n{  \n\n    long long result=0;  \n\n    while (pos)  \n\n    {  \n\n        result+=TreeArray[pos];  \n\n        pos-=LowBit(pos);  \n\n    }  \n\n    return result;  \n\n}  \n\nvoid INC(long long pos)  \n\n{  \n\n    while(pos<=Length)  \n\n    {  \n\n        TreeArray[pos]++;  \n\n        pos+=LowBit(pos);  \n\n    }  \n\n}  \n\nvoid insertNum(long long &reverseNum)  \n\n{  \n\n    for (long long i=1;i<=Length;i++)  \n\n    {  \n\n        reverseNum+=sum(seq[i].pos); \n\n        //cout<<i<<\" \"<<seq[i].data<<\"\\t\"<<seq[i].pos<<\"\\t\"<<reverseNum<<endl;\n\n        INC(seq[i].pos);   \n\n    }  \n\n}  \n\nlong long n,k;\n\nlong long arr[200010];\n\nint main()  \n\n{  \n\n\tscanf(\"%lld%lld\",&n,&k);\n\n\tLength=n+1;\n\n\tfor(int i=1;i<=n;++i)\n\n\t\tarr[i]=scan()-k;\n\n\tfor(int i=2;i<=n;++i)\n\n\t\tarr[i]=arr[i-1]+arr[i]; \n\n\tseq[1].data=0;\n\n\tseq[1].pos=1;\n\n    for(int i=1;i<=n;i++)  \n\n    {  \n\n        seq[i+1].data=-arr[i];  \n\n    \t\n\n        seq[i+1].pos=i+1; \n\n    }  \n\n    \n\n    //\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\n\n    sort(seq+1,seq+Length+1,cmp);\n\n    \n\n    //for(int i=1;i<=Length;i++)  \n\n\t//\tcout<<seq[i].data<<\" \"<<seq[i].pos<<endl;\n\n\t//cout<<endl;\n\n    long long reverseNum=0;  \n\n    insertNum(reverseNum); \n\n    cout<<reverseNum<<endl;\n\n    return 0;  \n\n}  \n"
    },
    {
        "id": "103",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n\n\nconst int MAXN=200005;\n\n\n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n\n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n\n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot;\n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n#define FAST_IO std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n\n#define pause system(\"pause\")\n\ntypedef long long ll;\n\ntypedef unsigned int UINT;\n\ntypedef unsigned long long ull;\n\nusing namespace std;\n\nconst int maxn = 2e5 + 10;\n\n\n\ninline int lc(int x) { return x << 1; }\n\ninline int rc(int x) { return x << 1 | 1; }\n\n\n\nstruct node {\n\n    int pos;\n\n    ll val;\n\n    bool operator<(const node &p) const {\n\n        if (val == p.val)\n\n            return pos < p.pos;\n\n        return val < p.val;\n\n    }\n\n}a[maxn];\n\n\n\nstruct seg {\n\n    int l, r;\n\n    ll sum;\n\n}tree[maxn << 2];\n\n\n\nvoid push_up(int p) {\n\n    tree[p].sum = tree[lc(p)].sum + tree[rc(p)].sum;\n\n}\n\n\n\nvoid bulid(int p, int l, int r) {\n\n    tree[p].l = l, tree[p].r = r;\n\n    tree[p].sum = 0;\n\n    if (l == r)\n\n        return;\n\n    int mid = (l + r) >> 1;\n\n    bulid(lc(p), l, mid);\n\n    bulid(rc(p), mid + 1, r);\n\n    push_up(p);\n\n}\n\n\n\nvoid update(int p, int pos) {\n\n    if (tree[p].l == pos && tree[p].r == pos) {\n\n        tree[p].sum++;\n\n        return;\n\n    }\n\n    int mid = (tree[p].l + tree[p].r) >> 1;\n\n    if(pos <= mid)\n\n        update(lc(p), pos);\n\n    else \n\n        update(rc(p), pos);\n\n    push_up(p);\n\n}\n\n\n\nll query(int p, int l, int r) {\n\n    if(tree[p].l == l && tree[p].r == r) {\n\n        return tree[p].sum;\n\n    }\n\n    int mid = (tree[p].l + tree[p].r) >> 1;\n\n    if (mid < l)\n\n        return query(rc(p), l, r);\n\n    else if (mid >= r)\n\n        return query(lc(p), l, r);\n\n    else \n\n        return query(lc(p), l, mid) + query(rc(p), mid + 1, r);\n\n}\n\n\n\nint main(void) {\n\n    FAST_IO;\n\n    ll n, k, x;\n\n    cin >> n >> k;\n\n    for (int i = 1; i<= n; i++) {\n\n        cin >> x;\n\n        x -= k;\n\n        a[i].pos = i;\n\n        a[i].val = a[i - 1].val + x;\n\n    }\n\n    sort(a + 1, a + 1 + n);\n\n    bulid(1, 1, n);\n\n    ll ans = 0;\n\n    for (int i = 1; i <= n; i++) {\n\n        update(1, a[i].pos);\n\n        if (a[i].val >= 0)\n\n            ans++;\n\n        if (a[i].pos == 1)\n\n            continue;\n\n        ans += query(1, 1, a[i].pos - 1);\n\n    }\n\n    cout << ans << endl;\n\n    // pause;\n\n    return 0;\n\n}"
    },
    {
        "id": "104",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\n#define FAST_IO std::ios::sync_with_stdio(false),std::cin.tie(0),std::cout.tie(0)\n\n#define pause system(\"pause\")\n\ntypedef long long ll;\n\ntypedef unsigned int UINT;\n\ntypedef unsigned long long ull;\n\nusing namespace std;\n\nconst int maxn = 2e5 + 10;\n\n\n\ninline int lc(int x) { return x << 1; }\n\ninline int rc(int x) { return x << 1 | 1; }\n\n\n\nstruct node {\n\n    int pos;\n\n    ll val;\n\n    bool operator<(const node &p) const {\n\n        if (val == p.val)\n\n            return pos < p.pos;\n\n        return val < p.val;\n\n    }\n\n}a[maxn];\n\n\n\nstruct seg {\n\n    int l, r;\n\n    ll sum;\n\n}tree[maxn << 2];\n\n\n\nvoid push_up(int p) {\n\n    tree[p].sum = tree[lc(p)].sum + tree[rc(p)].sum;\n\n}\n\n\n\nvoid bulid(int p, int l, int r) {\n\n    tree[p].l = l, tree[p].r = r;\n\n    tree[p].sum = 0;\n\n    if (l == r)\n\n        return;\n\n    int mid = (l + r) >> 1;\n\n    bulid(lc(p), l, mid);\n\n    bulid(rc(p), mid + 1, r);\n\n    push_up(p);\n\n}\n\n\n\nvoid update(int p, int pos) {\n\n    if (tree[p].l == pos && tree[p].r == pos) {\n\n        tree[p].sum++;\n\n        return;\n\n    }\n\n    int mid = (tree[p].l + tree[p].r) >> 1;\n\n    if(pos <= mid)\n\n        update(lc(p), pos);\n\n    else \n\n        update(rc(p), pos);\n\n    push_up(p);\n\n}\n\n\n\nll query(int p, int l, int r) {\n\n    if(tree[p].l == l && tree[p].r == r) {\n\n        return tree[p].sum;\n\n    }\n\n    int mid = (tree[p].l + tree[p].r) >> 1;\n\n    if (mid < l)\n\n        return query(rc(p), l, r);\n\n    else if (mid >= r)\n\n        return query(lc(p), l, r);\n\n    else \n\n        return query(lc(p), l, mid) + query(rc(p), mid + 1, r);\n\n}\n\n\n\nint main(void) {\n\n    FAST_IO;\n\n    ll n, k, x;\n\n    cin >> n >> k;\n\n    for (int i = 1; i<= n; i++) {\n\n        cin >> x;\n\n        x -= k;\n\n        a[i].pos = i;\n\n        a[i].val = a[i - 1].val + x;\n\n    }\n\n    sort(a + 1, a + 1 + n);\n\n    bulid(1, 1, n);\n\n    ll ans = 0;\n\n    for (int i = 1; i <= n; i++) {\n\n        update(1, a[i].pos);\n\n        if (a[i].val >= 0)\n\n            ans++;\n\n        if (a[i].pos == 1)\n\n            continue;\n\n        ans += query(1, 1, a[i].pos - 1);\n\n    }\n\n    cout << ans << endl;\n\n    // pause;\n\n    return 0;\n\n}"
    },
    {
        "id": "105",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n\n\nconst int MAXN=200005;\n\n\n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n\n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n\n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot;\n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<stdio.h>\n\n#include<vector>\n\n#include<cmath>\n\n#include<queue>\n\n#include<string.h>\n\n#include<map>\n\n#include<set>\n\n#include<algorithm>\n\n#define ll long long\n\n#define pi pair < ll,ll >\n\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,a,b) for(int i = a;i < b;i++)\n\n#define N 300004\n\n#define INF 1e9+7\n\n\n\nusing namespace std;\n\n\n\nll n,k,ar[N],ans,cnt;\n\nll sum[N];\n\nll seg[4*N];\n\nvector < ll > vals;\n\nmap < ll,ll > mapper;\n\n\n\nll get_sum(ll i,ll j)\n\n{\n\n    if(i == 0)\n\n        return sum[j];\n\n\n\n    return sum[j] - sum[i-1];\n\n}\n\n\n\nll query(ll low,ll high,ll pos,ll slow)\n\n{\n\n    if(high <= slow)\n\n        return seg[pos];\n\n    if(low > slow)\n\n        return 0;\n\n\n\n    ll mid = (low+high)/2;\n\n\n\n    return query(low,mid,pos*2+1,slow)+query(mid+1,high,pos*2+2,slow);\n\n}\n\n\n\nvoid update(ll low,ll high,ll pos,ll slow)\n\n{\n\n    if(low == slow && low == high)\n\n    {\n\n        seg[pos]++;\n\n        return;\n\n    }\n\n    if(low > slow || high < slow)\n\n        return;\n\n\n\n    ll mid = (low+high)/2;\n\n\n\n    update(low,mid,pos*2+1,slow);\n\n    update(mid+1,high,pos*2+2,slow);\n\n    seg[pos] = seg[pos*2+1] + seg[pos*2+2];\n\n    return;\n\n}\n\n\n\nint main()\n\n{\n\n    ios_base::sync_with_stdio(false);\n\n\n\n    cin >> n >> k;\n\n\n\n    rep(i,0,n)\n\n    {\n\n        cin >> ar[i];\n\n\n\n        ar[i] -= k;\n\n\n\n        if(i == 0)\n\n            sum[i] = ar[i];\n\n        else\n\n            sum[i] = sum[i-1] + ar[i];\n\n\n\n        vals.push_back(sum[i]);\n\n    }\n\n\n\n    vals.push_back(0);\n\n    sort(vals.begin(),vals.end());\n\n\n\n    rep(i,0,vals.size())\n\n    {\n\n        if(!mapper[vals[i]])\n\n        {\n\n            mapper[vals[i]] = cnt;\n\n            cnt++;\n\n        }\n\n    }\n\n\n\n    update(0,cnt,0,mapper[0]);\n\n\n\n    rep(i,0,n)\n\n    {\n\n   //     cout << sum[i] << \" \" << mapper[sum[i]] << \" \" << query(0,cnt,0,mapper[sum[i]]) << endl;\n\n        ans += query(0,cnt,0,mapper[sum[i]]);\n\n        update(0,cnt,0,mapper[sum[i]]);\n\n    }\n\n\n\n    cout << ans;\n\n\n\n    return 0;\n\n}\n\n\n"
    },
    {
        "id": "106",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<stdio.h>\n\n#include<vector>\n\n#include<cmath>\n\n#include<queue>\n\n#include<string.h>\n\n#include<map>\n\n#include<set>\n\n#include<algorithm>\n\n#define ll long long\n\n#define pi pair < ll,ll >\n\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,a,b) for(int i = a;i < b;i++)\n\n#define N 300004\n\n#define INF 1e9+7\n\n\n\nusing namespace std;\n\n\n\nll n,k,ar[N],ans,cnt;\n\nll sum[N];\n\nll seg[4*N];\n\nvector < ll > vals;\n\nmap < ll,ll > mapper;\n\n\n\nll get_sum(ll i,ll j)\n\n{\n\n    if(i == 0)\n\n        return sum[j];\n\n\n\n    return sum[j] - sum[i-1];\n\n}\n\n\n\nll query(ll low,ll high,ll pos,ll slow)\n\n{\n\n    if(high <= slow)\n\n        return seg[pos];\n\n    if(low > slow)\n\n        return 0;\n\n\n\n    ll mid = (low+high)/2;\n\n\n\n    return query(low,mid,pos*2+1,slow)+query(mid+1,high,pos*2+2,slow);\n\n}\n\n\n\nvoid update(ll low,ll high,ll pos,ll slow)\n\n{\n\n    if(low == slow && low == high)\n\n    {\n\n        seg[pos]++;\n\n        return;\n\n    }\n\n    if(low > slow || high < slow)\n\n        return;\n\n\n\n    ll mid = (low+high)/2;\n\n\n\n    update(low,mid,pos*2+1,slow);\n\n    update(mid+1,high,pos*2+2,slow);\n\n    seg[pos] = seg[pos*2+1] + seg[pos*2+2];\n\n    return;\n\n}\n\n\n\nint main()\n\n{\n\n    ios_base::sync_with_stdio(false);\n\n\n\n    cin >> n >> k;\n\n\n\n    rep(i,0,n)\n\n    {\n\n        cin >> ar[i];\n\n\n\n        ar[i] -= k;\n\n\n\n        if(i == 0)\n\n            sum[i] = ar[i];\n\n        else\n\n            sum[i] = sum[i-1] + ar[i];\n\n\n\n        vals.push_back(sum[i]);\n\n    }\n\n\n\n    vals.push_back(0);\n\n    sort(vals.begin(),vals.end());\n\n\n\n    rep(i,0,vals.size())\n\n    {\n\n        if(!mapper[vals[i]])\n\n        {\n\n            mapper[vals[i]] = cnt;\n\n            cnt++;\n\n        }\n\n    }\n\n\n\n    update(0,cnt,0,mapper[0]);\n\n\n\n    rep(i,0,n)\n\n    {\n\n   //     cout << sum[i] << \" \" << mapper[sum[i]] << \" \" << query(0,cnt,0,mapper[sum[i]]) << endl;\n\n        ans += query(0,cnt,0,mapper[sum[i]]);\n\n        update(0,cnt,0,mapper[sum[i]]);\n\n    }\n\n\n\n    cout << ans;\n\n\n\n    return 0;\n\n}\n\n\n"
    },
    {
        "id": "107",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<stdio.h>\n\n#include<vector>\n\n#include<cmath>\n\n#include<queue>\n\n#include<string.h>\n\n#include<map>\n\n#include<set>\n\n#include<algorithm>\n\n#define ll long long\n\n#define pi pair < ll,ll >\n\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,a,b) for(int i = a;i < b;i++)\n\n#define N 300004\n\n#define INF 1e9+7\n\n\n\nusing namespace std;\n\n\n\nll n,k,ar[N],ans,cnt;\n\nll sum[N];\n\nll seg[4*N];\n\nvector < ll > vals;\n\nmap < ll,ll > mapper;\n\n\n\nll get_sum(ll i,ll j)\n\n{\n\n    if(i == 0)\n\n        return sum[j];\n\n\n\n    return sum[j] - sum[i-1];\n\n}\n\n\n\nll query(ll low,ll high,ll pos,ll slow)\n\n{\n\n    if(high <= slow)\n\n        return seg[pos];\n\n    if(low > slow)\n\n        return 0;\n\n\n\n    ll mid = (low+high)/2;\n\n\n\n    return query(low,mid,pos*2+1,slow)+query(mid+1,high,pos*2+2,slow);\n\n}\n\n\n\nvoid update(ll low,ll high,ll pos,ll slow)\n\n{\n\n    if(low == slow && low == high)\n\n    {\n\n        seg[pos]++;\n\n        return;\n\n    }\n\n    if(low > slow || high < slow)\n\n        return;\n\n\n\n    ll mid = (low+high)/2;\n\n\n\n    update(low,mid,pos*2+1,slow);\n\n    update(mid+1,high,pos*2+2,slow);\n\n    seg[pos] = seg[pos*2+1] + seg[pos*2+2];\n\n    return;\n\n}\n\n\n\nint main()\n\n{\n\n    ios_base::sync_with_stdio(false);\n\n\n\n    cin >> n >> k;\n\n\n\n    rep(i,0,n)\n\n    {\n\n        cin >> ar[i];\n\n\n\n        ar[i] -= k;\n\n\n\n        if(i == 0)\n\n            sum[i] = ar[i];\n\n        else\n\n            sum[i] = sum[i-1] + ar[i];\n\n\n\n        vals.push_back(sum[i]);\n\n    }\n\n\n\n    vals.push_back(0);\n\n    sort(vals.begin(),vals.end());\n\n\n\n    rep(i,0,vals.size())\n\n    {\n\n        if(!mapper[vals[i]])\n\n        {\n\n            mapper[vals[i]] = cnt;\n\n            cnt++;\n\n        }\n\n    }\n\n\n\n    update(0,cnt,0,mapper[0]);\n\n\n\n    rep(i,0,n)\n\n    {\n\n   //     cout << sum[i] << \" \" << mapper[sum[i]] << \" \" << query(0,cnt,0,mapper[sum[i]]) << endl;\n\n        ans += query(0,cnt,0,mapper[sum[i]]);\n\n        update(0,cnt,0,mapper[sum[i]]);\n\n    }\n\n\n\n    cout << ans;\n\n\n\n    return 0;\n\n}\n\n\n"
    },
    {
        "id": "108",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n\n\nconst int MAXN=200005;\n\n\n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n\n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n\n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot;\n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nstruct SPLAY\n\n{\n\n\tstatic const int N=200005;\n\n\tint ch[N][2],fa[N],size[N],cnt[N],val[N],sz,root;\n\n\tint newnode(int v,int f)\n\n\t{\n\n\t\tsz++;\n\n\t\tch[sz][0]=ch[sz][1]=0;\n\n\t\tfa[sz]=f;\n\n\t\tsize[sz]=cnt[sz]=1;\n\n\t\tval[sz]=v;\n\n\t\treturn sz;\n\n\t}\n\n\tvoid pushup(int k)\n\n\t{\n\n\t\tsize[k]=cnt[k]+size[ch[k][0]]+size[ch[k][1]];\n\n\t}\n\n\tvoid rotate(int x)\n\n\t{\n\n\t\tint f=fa[x],d=ch[f][0]==x?1:0;\n\n\t\tfa[x]=fa[f];\n\n\t\tfa[f]=x,fa[ch[x][d]]=f;\n\n\t\tch[f][d^1]=ch[x][d],ch[x][d]=f;\n\n\t\tif(fa[x]) ch[fa[x]][ch[fa[x]][0]==f?0:1]=x;\n\n\t\tpushup(f),pushup(x);\n\n\t}\n\n\tvoid splay(int x,int k=0)\n\n\t{\n\n\t\twhile(fa[x]!=k)\n\n\t\t{\n\n\t\t\tint f=fa[x],g=fa[f];\n\n\t\t\tif(g!=k)\n\n\t\t\t\trotate((ch[f][0]==x)==(ch[g][0]==f)?f:x);\n\n\t\t\trotate(x);\n\n\t\t}\n\n\t\tif(k==0)\n\n\t\t\troot=x;\n\n\t}\n\n\tvoid insert(int v)\n\n\t{\n\n\t\tint now=root,f=0;\n\n\t\twhile(now&&val[now]!=v)\n\n\t\t\tf=now,now=ch[now][v>val[now]];\n\n\t\tif(now)\n\n\t\t\tcnt[now]++;\n\n\t\telse\n\n\t\t{\n\n\t\t\tnow=newnode(v,f);\n\n\t\t\tif(f)\n\n\t\t\t\tch[f][v>val[f]]=now;\n\n\t\t}\n\n\t\tsplay(now);\n\n\t}\n\n\tint rank(int v)\n\n\t{\n\n\t\tint now=root,ans=1;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]>v)\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tans+=size[ch[now][0]];\n\n\t\t\t\tif(val[now]==v)\n\n\t\t\t\t{\n\n\t\t\t\t\tsplay(now);\n\n\t\t\t\t\treturn ans;\n\n\t\t\t\t}\n\n\t\t\t\tans+=cnt[now];\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn ans;\n\n\t}\n\n\tint kth(int k)\n\n\t{\n\n\t\tint now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(k<=size[ch[now][0]])\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tk-=size[ch[now][0]]+cnt[now];\n\n\t\t\t\tif(k<=0)\n\n\t\t\t\t\treturn val[now];\n\n\t\t\t\tnow=ch[now][1]; \n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint pre(int v,int fl=0)\n\n\t{\n\n\t\tint ans=-1e18,id=0,now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]>=v)\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tif(val[now]>ans)\n\n\t\t\t\t\tans=val[now],id=now;\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn fl?id:ans;\n\n\t}\n\n\tint suc(int v,int fl=0)\n\n\t{\n\n\t\tint ans=1e18,id=0,now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]<=v)\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tif(val[now]<ans)\n\n\t\t\t\t\tans=val[now],id=now;\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn fl?id:ans;\n\n\t}\n\n\tvoid remove(int v)\n\n\t{\n\n\t\trank(v);\n\n\t\tif(cnt[root]>1)\n\n\t\t\tcnt[root]--;\n\n\t\telse if(!ch[root][0]&&!ch[root][1])\n\n\t\t\troot=0;\n\n\t\telse if(!ch[root][0]||!ch[root][1])\n\n\t\t\troot=ch[root][0]?ch[root][0]:ch[root][1],fa[root]=0;\n\n\t\telse\n\n\t\t{\n\n\t\t\tint p=pre(v,1),o=root;\n\n\t\t\tsplay(p);\n\n\t\t\tfa[ch[o][1]]=p;\n\n\t\t\tch[p][1]=ch[o][1];\n\n\t\t\tpushup(p);\n\n\t\t}\n\n\t}\n\n}s;\n\nconst int N=200005;\n\nint a[N],sum[N],n,k,ans;\n\nsigned main()\n\n{\n\n\tios::sync_with_stdio(false);\n\n\tcin>>n>>k;\n\n\ts.insert(0);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tcin>>a[i];\n\n\t\ta[i]-=k;\n\n\t\tsum[i]=sum[i-1]+a[i];\n\n\t\tans+=s.rank(s.suc(sum[i]))-1;\n\n\t\ts.insert(sum[i]);\n\n\t}\n\n\tcout<<ans<<endl;\n\n\treturn 0;\n\n}"
    },
    {
        "id": "109",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nstruct SPLAY\n\n{\n\n\tstatic const int N=200005;\n\n\tint ch[N][2],fa[N],size[N],cnt[N],val[N],sz,root;\n\n\tint newnode(int v,int f)\n\n\t{\n\n\t\tsz++;\n\n\t\tch[sz][0]=ch[sz][1]=0;\n\n\t\tfa[sz]=f;\n\n\t\tsize[sz]=cnt[sz]=1;\n\n\t\tval[sz]=v;\n\n\t\treturn sz;\n\n\t}\n\n\tvoid pushup(int k)\n\n\t{\n\n\t\tsize[k]=cnt[k]+size[ch[k][0]]+size[ch[k][1]];\n\n\t}\n\n\tvoid rotate(int x)\n\n\t{\n\n\t\tint f=fa[x],d=ch[f][0]==x?1:0;\n\n\t\tfa[x]=fa[f];\n\n\t\tfa[f]=x,fa[ch[x][d]]=f;\n\n\t\tch[f][d^1]=ch[x][d],ch[x][d]=f;\n\n\t\tif(fa[x]) ch[fa[x]][ch[fa[x]][0]==f?0:1]=x;\n\n\t\tpushup(f),pushup(x);\n\n\t}\n\n\tvoid splay(int x,int k=0)\n\n\t{\n\n\t\twhile(fa[x]!=k)\n\n\t\t{\n\n\t\t\tint f=fa[x],g=fa[f];\n\n\t\t\tif(g!=k)\n\n\t\t\t\trotate((ch[f][0]==x)==(ch[g][0]==f)?f:x);\n\n\t\t\trotate(x);\n\n\t\t}\n\n\t\tif(k==0)\n\n\t\t\troot=x;\n\n\t}\n\n\tvoid insert(int v)\n\n\t{\n\n\t\tint now=root,f=0;\n\n\t\twhile(now&&val[now]!=v)\n\n\t\t\tf=now,now=ch[now][v>val[now]];\n\n\t\tif(now)\n\n\t\t\tcnt[now]++;\n\n\t\telse\n\n\t\t{\n\n\t\t\tnow=newnode(v,f);\n\n\t\t\tif(f)\n\n\t\t\t\tch[f][v>val[f]]=now;\n\n\t\t}\n\n\t\tsplay(now);\n\n\t}\n\n\tint rank(int v)\n\n\t{\n\n\t\tint now=root,ans=1;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]>v)\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tans+=size[ch[now][0]];\n\n\t\t\t\tif(val[now]==v)\n\n\t\t\t\t{\n\n\t\t\t\t\tsplay(now);\n\n\t\t\t\t\treturn ans;\n\n\t\t\t\t}\n\n\t\t\t\tans+=cnt[now];\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn ans;\n\n\t}\n\n\tint kth(int k)\n\n\t{\n\n\t\tint now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(k<=size[ch[now][0]])\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tk-=size[ch[now][0]]+cnt[now];\n\n\t\t\t\tif(k<=0)\n\n\t\t\t\t\treturn val[now];\n\n\t\t\t\tnow=ch[now][1]; \n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint pre(int v,int fl=0)\n\n\t{\n\n\t\tint ans=-1e18,id=0,now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]>=v)\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tif(val[now]>ans)\n\n\t\t\t\t\tans=val[now],id=now;\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn fl?id:ans;\n\n\t}\n\n\tint suc(int v,int fl=0)\n\n\t{\n\n\t\tint ans=1e18,id=0,now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]<=v)\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tif(val[now]<ans)\n\n\t\t\t\t\tans=val[now],id=now;\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn fl?id:ans;\n\n\t}\n\n\tvoid remove(int v)\n\n\t{\n\n\t\trank(v);\n\n\t\tif(cnt[root]>1)\n\n\t\t\tcnt[root]--;\n\n\t\telse if(!ch[root][0]&&!ch[root][1])\n\n\t\t\troot=0;\n\n\t\telse if(!ch[root][0]||!ch[root][1])\n\n\t\t\troot=ch[root][0]?ch[root][0]:ch[root][1],fa[root]=0;\n\n\t\telse\n\n\t\t{\n\n\t\t\tint p=pre(v,1),o=root;\n\n\t\t\tsplay(p);\n\n\t\t\tfa[ch[o][1]]=p;\n\n\t\t\tch[p][1]=ch[o][1];\n\n\t\t\tpushup(p);\n\n\t\t}\n\n\t}\n\n}s;\n\nconst int N=200005;\n\nint a[N],sum[N],n,k,ans;\n\nsigned main()\n\n{\n\n\tios::sync_with_stdio(false);\n\n\tcin>>n>>k;\n\n\ts.insert(0);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tcin>>a[i];\n\n\t\ta[i]-=k;\n\n\t\tsum[i]=sum[i-1]+a[i];\n\n\t\tans+=s.rank(s.suc(sum[i]))-1;\n\n\t\ts.insert(sum[i]);\n\n\t}\n\n\tcout<<ans<<endl;\n\n\treturn 0;\n\n}"
    },
    {
        "id": "110",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include<bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nstruct SPLAY\n\n{\n\n\tstatic const int N=200005;\n\n\tint ch[N][2],fa[N],size[N],cnt[N],val[N],sz,root;\n\n\tint newnode(int v,int f)\n\n\t{\n\n\t\tsz++;\n\n\t\tch[sz][0]=ch[sz][1]=0;\n\n\t\tfa[sz]=f;\n\n\t\tsize[sz]=cnt[sz]=1;\n\n\t\tval[sz]=v;\n\n\t\treturn sz;\n\n\t}\n\n\tvoid pushup(int k)\n\n\t{\n\n\t\tsize[k]=cnt[k]+size[ch[k][0]]+size[ch[k][1]];\n\n\t}\n\n\tvoid rotate(int x)\n\n\t{\n\n\t\tint f=fa[x],d=ch[f][0]==x?1:0;\n\n\t\tfa[x]=fa[f];\n\n\t\tfa[f]=x,fa[ch[x][d]]=f;\n\n\t\tch[f][d^1]=ch[x][d],ch[x][d]=f;\n\n\t\tif(fa[x]) ch[fa[x]][ch[fa[x]][0]==f?0:1]=x;\n\n\t\tpushup(f),pushup(x);\n\n\t}\n\n\tvoid splay(int x,int k=0)\n\n\t{\n\n\t\twhile(fa[x]!=k)\n\n\t\t{\n\n\t\t\tint f=fa[x],g=fa[f];\n\n\t\t\tif(g!=k)\n\n\t\t\t\trotate((ch[f][0]==x)==(ch[g][0]==f)?f:x);\n\n\t\t\trotate(x);\n\n\t\t}\n\n\t\tif(k==0)\n\n\t\t\troot=x;\n\n\t}\n\n\tvoid insert(int v)\n\n\t{\n\n\t\tint now=root,f=0;\n\n\t\twhile(now&&val[now]!=v)\n\n\t\t\tf=now,now=ch[now][v>val[now]];\n\n\t\tif(now)\n\n\t\t\tcnt[now]++;\n\n\t\telse\n\n\t\t{\n\n\t\t\tnow=newnode(v,f);\n\n\t\t\tif(f)\n\n\t\t\t\tch[f][v>val[f]]=now;\n\n\t\t}\n\n\t\tsplay(now);\n\n\t}\n\n\tint rank(int v)\n\n\t{\n\n\t\tint now=root,ans=1;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]>v)\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tans+=size[ch[now][0]];\n\n\t\t\t\tif(val[now]==v)\n\n\t\t\t\t{\n\n\t\t\t\t\tsplay(now);\n\n\t\t\t\t\treturn ans;\n\n\t\t\t\t}\n\n\t\t\t\tans+=cnt[now];\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn ans;\n\n\t}\n\n\tint kth(int k)\n\n\t{\n\n\t\tint now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(k<=size[ch[now][0]])\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tk-=size[ch[now][0]]+cnt[now];\n\n\t\t\t\tif(k<=0)\n\n\t\t\t\t\treturn val[now];\n\n\t\t\t\tnow=ch[now][1]; \n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tint pre(int v,int fl=0)\n\n\t{\n\n\t\tint ans=-1e18,id=0,now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]>=v)\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tif(val[now]>ans)\n\n\t\t\t\t\tans=val[now],id=now;\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn fl?id:ans;\n\n\t}\n\n\tint suc(int v,int fl=0)\n\n\t{\n\n\t\tint ans=1e18,id=0,now=root;\n\n\t\twhile(now)\n\n\t\t{\n\n\t\t\tif(val[now]<=v)\n\n\t\t\t\tnow=ch[now][1];\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\tif(val[now]<ans)\n\n\t\t\t\t\tans=val[now],id=now;\n\n\t\t\t\tnow=ch[now][0];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn fl?id:ans;\n\n\t}\n\n\tvoid remove(int v)\n\n\t{\n\n\t\trank(v);\n\n\t\tif(cnt[root]>1)\n\n\t\t\tcnt[root]--;\n\n\t\telse if(!ch[root][0]&&!ch[root][1])\n\n\t\t\troot=0;\n\n\t\telse if(!ch[root][0]||!ch[root][1])\n\n\t\t\troot=ch[root][0]?ch[root][0]:ch[root][1],fa[root]=0;\n\n\t\telse\n\n\t\t{\n\n\t\t\tint p=pre(v,1),o=root;\n\n\t\t\tsplay(p);\n\n\t\t\tfa[ch[o][1]]=p;\n\n\t\t\tch[p][1]=ch[o][1];\n\n\t\t\tpushup(p);\n\n\t\t}\n\n\t}\n\n}s;\n\nconst int N=200005;\n\nint a[N],sum[N],n,k,ans;\n\nsigned main()\n\n{\n\n\tios::sync_with_stdio(false);\n\n\tcin>>n>>k;\n\n\ts.insert(0);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tcin>>a[i];\n\n\t\ta[i]-=k;\n\n\t\tsum[i]=sum[i-1]+a[i];\n\n\t\tans+=s.rank(s.suc(sum[i]))-1;\n\n\t\ts.insert(sum[i]);\n\n\t}\n\n\tcout<<ans<<endl;\n\n\treturn 0;\n\n}"
    },
    {
        "id": "117",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<string.h>\n\n#include<cstdio>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX=200000+10; \n\nint n,k;\n\nll a[MAX];\n\nll b[MAX];\n\nll s[MAX];\n\nmap<ll, int>mp;\n\nint lowbit(int x)\n\n{\n\n\treturn (x&-x);\n\n}\n\nll sum(int x)\n\n{\n\n\tll ans=0;\n\n\twhile(x>0)\n\n\t{\n\n\t\tans+=a[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn ans;\n\n}\n\nvoid inite(int x,int num)//\u7ef4\u62a4\u524d\u7f00\u6570\u7ec4a \n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%d\",&n,&k);\n\n\ts[0]=b[0]=0;\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\t\n\n\t\tint t;\n\n\t\tscanf(\"%d\",&t);\n\n\t\ts[i]=s[i-1]+(long long)(t-k);\n\n\t\tb[i]=s[i];\n\n\t}\n\n\tsort(b,b+1+n);\n\n\tint tot=0;\n\n\tfor(int i=0;i<=n;i++)\n\n\t\tif(!mp.count(b[i]))mp[b[i]]=++tot;\n\n\tmemset(a,0,sizeof(a));\n\n\tll res=0;\n\n\tfor(int i=0;i<=n;i++)\n\n\t{\n\n\t\tres+=sum(mp[s[i]]);\n\n\t\tinite(mp[s[i]],1);\n\n\t}\n\n\tprintf(\"%lld\\n\",res); \n\nreturn 0;\n\n}"
    },
    {
        "id": "118",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<string.h>\n\n#include<cstdio>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX=200000+10; \n\nint n,k;\n\nll a[MAX];\n\nll b[MAX];\n\nll s[MAX];\n\nmap<ll, int>mp;\n\nint lowbit(int x)\n\n{\n\n\treturn (x&-x);\n\n}\n\nll sum(int x)\n\n{\n\n\tll ans=0;\n\n\twhile(x>0)\n\n\t{\n\n\t\tans+=a[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn ans;\n\n}\n\nvoid inite(int x,int num)//\u7ef4\u62a4\u524d\u7f00\u6570\u7ec4a \n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%d\",&n,&k);\n\n\ts[0]=b[0]=0;\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\t\n\n\t\tint t;\n\n\t\tscanf(\"%d\",&t);\n\n\t\ts[i]=s[i-1]+(long long)(t-k);\n\n\t\tb[i]=s[i];\n\n\t}\n\n\tsort(b,b+1+n);\n\n\tint tot=0;\n\n\tfor(int i=0;i<=n;i++)\n\n\t\tif(!mp.count(b[i]))mp[b[i]]=++tot;\n\n\tmemset(a,0,sizeof(a));\n\n\tll res=0;\n\n\tfor(int i=0;i<=n;i++)\n\n\t{\n\n\t\tres+=sum(mp[s[i]]);\n\n\t\tinite(mp[s[i]],1);\n\n\t}\n\n\tprintf(\"%lld\\n\",res); \n\nreturn 0;\n\n}"
    },
    {
        "id": "119",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n\n\nconst int MAXN=200005;\n\n\n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n\n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n\n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot;\n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n\n#define int long long\n\n#define fi first\n\n#define se second\n\n#define sz(x) (int)(x).size()\n\n#define all(x) (x).begin(), (x).end()\n\n#define yn(x) ((x) ? \"YES\" : \"NO\")\n\n\n\ntypedef pair <int, int> ii;\n\ntypedef pair <int, ii> iii;\n\n\n\nconst int siz = 2e5 + 10;\n\nconst int SIZ = 2e5 + 10;\n\nconst int mod = 1e9 + 7;\n\nconst int maxx = 2e9;\n\nconst int MAXX = 1e18;\n\nconst string file = \"data\";\n\n\n\nint n;\n\nint psum[siz];\n\n\n\nvoid compress() {\n\n    vector <ii> data; /// value, index;\n\n    for (int i = 0; i <= n; i++) {\n\n        data.push_back(ii(psum[i], i));\n\n    }\n\n\n\n    sort (all(data));\n\n\n\n    int num = 0, prv = MAXX;\n\n    for (auto &x : data) {\n\n        if (x.fi != prv) {\n\n            prv = x.fi;\n\n            num++;\n\n        }\n\n        psum[x.se] = num;\n\n    }\n\n}\n\n\n\nint fen[SIZ];\n\n\n\nvoid updatePos(int index, int value) {\n\n    for (int i = index; i < SIZ; i += i & (-i)) {\n\n        fen[i] += value;\n\n    }\n\n}\n\n\n\nint getSum(int index) {\n\n    int sum = 0;\n\n    for (int i = index; i > 0; i -= i & (-i)) {\n\n        sum += fen[i];\n\n    }\n\n    return sum;\n\n}\n\n\n\nint32_t main() {\n\n    ios::sync_with_stdio(0);\n\n    cin.tie(0); cout.tie(0);\n\n\n\n//    freopen ((file + \".inp\").c_str(), \"r\", stdin);\n\n//    freopen ((file + \".out\").c_str(), \"w\", stdout);\n\n\n\n    int k;\n\n    cin >> n >> k;\n\n\n\n    for (int i = 1; i <= n; i++) {\n\n        int a;\n\n        cin >> a;\n\n\n\n        psum[i] = psum[i - 1] + a - k;\n\n    }\n\n\n\n    compress();\n\n\n\n    int ans = 0;\n\n    for (int i = 0; i <= n; i++) {\n\n        ans += getSum(psum[i]);\n\n        updatePos(psum[i], 1);\n\n    }\n\n\n\n    cout << ans << \"\\n\";\n\n\n\n//    cerr << \"Time: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\n\n\n\n    return 0;\n\n}\n"
    },
    {
        "id": "120",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n\n#define int long long\n\n#define fi first\n\n#define se second\n\n#define sz(x) (int)(x).size()\n\n#define all(x) (x).begin(), (x).end()\n\n#define yn(x) ((x) ? \"YES\" : \"NO\")\n\n\n\ntypedef pair <int, int> ii;\n\ntypedef pair <int, ii> iii;\n\n\n\nconst int siz = 2e5 + 10;\n\nconst int SIZ = 2e5 + 10;\n\nconst int mod = 1e9 + 7;\n\nconst int maxx = 2e9;\n\nconst int MAXX = 1e18;\n\nconst string file = \"data\";\n\n\n\nint n;\n\nint psum[siz];\n\n\n\nvoid compress() {\n\n    vector <ii> data; /// value, index;\n\n    for (int i = 0; i <= n; i++) {\n\n        data.push_back(ii(psum[i], i));\n\n    }\n\n\n\n    sort (all(data));\n\n\n\n    int num = 0, prv = MAXX;\n\n    for (auto &x : data) {\n\n        if (x.fi != prv) {\n\n            prv = x.fi;\n\n            num++;\n\n        }\n\n        psum[x.se] = num;\n\n    }\n\n}\n\n\n\nint fen[SIZ];\n\n\n\nvoid updatePos(int index, int value) {\n\n    for (int i = index; i < SIZ; i += i & (-i)) {\n\n        fen[i] += value;\n\n    }\n\n}\n\n\n\nint getSum(int index) {\n\n    int sum = 0;\n\n    for (int i = index; i > 0; i -= i & (-i)) {\n\n        sum += fen[i];\n\n    }\n\n    return sum;\n\n}\n\n\n\nint32_t main() {\n\n    ios::sync_with_stdio(0);\n\n    cin.tie(0); cout.tie(0);\n\n\n\n//    freopen ((file + \".inp\").c_str(), \"r\", stdin);\n\n//    freopen ((file + \".out\").c_str(), \"w\", stdout);\n\n\n\n    int k;\n\n    cin >> n >> k;\n\n\n\n    for (int i = 1; i <= n; i++) {\n\n        int a;\n\n        cin >> a;\n\n\n\n        psum[i] = psum[i - 1] + a - k;\n\n    }\n\n\n\n    compress();\n\n\n\n    int ans = 0;\n\n    for (int i = 0; i <= n; i++) {\n\n        ans += getSum(psum[i]);\n\n        updatePos(psum[i], 1);\n\n    }\n\n\n\n    cout << ans << \"\\n\";\n\n\n\n//    cerr << \"Time: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\n\n\n\n    return 0;\n\n}\n"
    },
    {
        "id": "121",
        "source_code": "#include <iostream>\n\n#include<stdio.h>\n\n#include<string.h>\n\n#include<math.h>\n\n#include<queue>\n\n#include<algorithm>\n\n#define N 200500\n\n#define LL long long\n\n#define mem(a,b) memset(a,b,sizeof(a));\n\nusing namespace std;\n\nLL sum[N],t[N];\n\nLL tree[N];\n\nint n,k,a,m,nn;\n\nvoid add(int x)\n\n{\n\n    while(x<=nn)\n\n    {\n\n        tree[x]++;\n\n        x+=x&-x;\n\n    }\n\n}\n\nLL query(int x)\n\n{\n\n    LL num=0;\n\n    while(x)\n\n    {\n\n        num+=tree[x];\n\n        x-=x&-x;\n\n    }\n\n    return num;\n\n}\n\nint main()\n\n{\n\n    mem(t,0);\n\n    mem(tree,0);\n\n    mem(sum,0);\n\n    scanf(\"%d%d\",&n,&k);\n\n    nn=n+10;\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        scanf(\"%d\",&a);\n\n        t[i]=sum[i]=sum[i-1]+a-k;\n\n    }\n\n    sort(t,t+n+1);\n\n    m=unique(t,t+n+1)-t;\n\n    for(int i=0; i<=n; i++)\n\n        sum[i]=lower_bound(t,t+m+1,sum[i])-t+1;\n\n    LL ans=0;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        ans+=query(sum[i]);\n\n        add(sum[i]);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n\n#define int long long\n\n#define fi first\n\n#define se second\n\n#define sz(x) (int)(x).size()\n\n#define all(x) (x).begin(), (x).end()\n\n#define yn(x) ((x) ? \"YES\" : \"NO\")\n\n\n\ntypedef pair <int, int> ii;\n\ntypedef pair <int, ii> iii;\n\n\n\nconst int siz = 2e5 + 10;\n\nconst int SIZ = 2e5 + 10;\n\nconst int mod = 1e9 + 7;\n\nconst int maxx = 2e9;\n\nconst int MAXX = 1e18;\n\nconst string file = \"data\";\n\n\n\nint n;\n\nint psum[siz];\n\n\n\nvoid compress() {\n\n    vector <ii> data; /// value, index;\n\n    for (int i = 0; i <= n; i++) {\n\n        data.push_back(ii(psum[i], i));\n\n    }\n\n\n\n    sort (all(data));\n\n\n\n    int num = 0, prv = MAXX;\n\n    for (auto &x : data) {\n\n        if (x.fi != prv) {\n\n            prv = x.fi;\n\n            num++;\n\n        }\n\n        psum[x.se] = num;\n\n    }\n\n}\n\n\n\nint fen[SIZ];\n\n\n\nvoid updatePos(int index, int value) {\n\n    for (int i = index; i < SIZ; i += i & (-i)) {\n\n        fen[i] += value;\n\n    }\n\n}\n\n\n\nint getSum(int index) {\n\n    int sum = 0;\n\n    for (int i = index; i > 0; i -= i & (-i)) {\n\n        sum += fen[i];\n\n    }\n\n    return sum;\n\n}\n\n\n\nint32_t main() {\n\n    ios::sync_with_stdio(0);\n\n    cin.tie(0); cout.tie(0);\n\n\n\n//    freopen ((file + \".inp\").c_str(), \"r\", stdin);\n\n//    freopen ((file + \".out\").c_str(), \"w\", stdout);\n\n\n\n    int k;\n\n    cin >> n >> k;\n\n\n\n    for (int i = 1; i <= n; i++) {\n\n        int a;\n\n        cin >> a;\n\n\n\n        psum[i] = psum[i - 1] + a - k;\n\n    }\n\n\n\n    compress();\n\n\n\n    int ans = 0;\n\n    for (int i = 0; i <= n; i++) {\n\n        ans += getSum(psum[i]);\n\n        updatePos(psum[i], 1);\n\n    }\n\n\n\n    cout << ans << \"\\n\";\n\n\n\n//    cerr << \"Time: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\n\n\n\n    return 0;\n\n}\n"
    },
    {
        "id": "122",
        "source_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<string.h>\n\n#include<cstdio>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX=200000+10; \n\nint n,k;\n\nll a[MAX];\n\nll b[MAX];\n\nll s[MAX];\n\nmap<ll, int>mp;\n\nint lowbit(int x)\n\n{\n\n\treturn (x&-x);\n\n}\n\nll sum(int x)\n\n{\n\n\tll ans=0;\n\n\twhile(x>0)\n\n\t{\n\n\t\tans+=a[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn ans;\n\n}\n\nvoid inite(int x,int num)//\u7ef4\u62a4\u524d\u7f00\u6570\u7ec4a \n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%d\",&n,&k);\n\n\ts[0]=b[0]=0;\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\t\n\n\t\tint t;\n\n\t\tscanf(\"%d\",&t);\n\n\t\ts[i]=s[i-1]+(long long)(t-k);\n\n\t\tb[i]=s[i];\n\n\t}\n\n\tsort(b,b+1+n);\n\n\tint tot=0;\n\n\tfor(int i=0;i<=n;i++)\n\n\t\tif(!mp.count(b[i]))mp[b[i]]=++tot;\n\n\tmemset(a,0,sizeof(a));\n\n\tll res=0;\n\n\tfor(int i=0;i<=n;i++)\n\n\t{\n\n\t\tres+=sum(mp[s[i]]);\n\n\t\tinite(mp[s[i]],1);\n\n\t}\n\n\tprintf(\"%lld\\n\",res); \n\nreturn 0;\n\n}",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\n\n#define int long long\n\n#define fi first\n\n#define se second\n\n#define sz(x) (int)(x).size()\n\n#define all(x) (x).begin(), (x).end()\n\n#define yn(x) ((x) ? \"YES\" : \"NO\")\n\n\n\ntypedef pair <int, int> ii;\n\ntypedef pair <int, ii> iii;\n\n\n\nconst int siz = 2e5 + 10;\n\nconst int SIZ = 2e5 + 10;\n\nconst int mod = 1e9 + 7;\n\nconst int maxx = 2e9;\n\nconst int MAXX = 1e18;\n\nconst string file = \"data\";\n\n\n\nint n;\n\nint psum[siz];\n\n\n\nvoid compress() {\n\n    vector <ii> data; /// value, index;\n\n    for (int i = 0; i <= n; i++) {\n\n        data.push_back(ii(psum[i], i));\n\n    }\n\n\n\n    sort (all(data));\n\n\n\n    int num = 0, prv = MAXX;\n\n    for (auto &x : data) {\n\n        if (x.fi != prv) {\n\n            prv = x.fi;\n\n            num++;\n\n        }\n\n        psum[x.se] = num;\n\n    }\n\n}\n\n\n\nint fen[SIZ];\n\n\n\nvoid updatePos(int index, int value) {\n\n    for (int i = index; i < SIZ; i += i & (-i)) {\n\n        fen[i] += value;\n\n    }\n\n}\n\n\n\nint getSum(int index) {\n\n    int sum = 0;\n\n    for (int i = index; i > 0; i -= i & (-i)) {\n\n        sum += fen[i];\n\n    }\n\n    return sum;\n\n}\n\n\n\nint32_t main() {\n\n    ios::sync_with_stdio(0);\n\n    cin.tie(0); cout.tie(0);\n\n\n\n//    freopen ((file + \".inp\").c_str(), \"r\", stdin);\n\n//    freopen ((file + \".out\").c_str(), \"w\", stdout);\n\n\n\n    int k;\n\n    cin >> n >> k;\n\n\n\n    for (int i = 1; i <= n; i++) {\n\n        int a;\n\n        cin >> a;\n\n\n\n        psum[i] = psum[i - 1] + a - k;\n\n    }\n\n\n\n    compress();\n\n\n\n    int ans = 0;\n\n    for (int i = 0; i <= n; i++) {\n\n        ans += getSum(psum[i]);\n\n        updatePos(psum[i], 1);\n\n    }\n\n\n\n    cout << ans << \"\\n\";\n\n\n\n//    cerr << \"Time: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\n\n\n\n    return 0;\n\n}\n"
    },
    {
        "id": "123",
        "source_code": "#include <cstdio>\n\n#include <cstring>\n\n#include <cstdlib>\n\n#include <vector>\n\n#include <iostream>\n\nusing namespace std;\n\n\n\ntypedef long long int LL;\n\nconst LL INF=1000000000000000ll;\n\nconst int maxn=100000*64;\n\nstruct ACM\n\n{\n\n    struct Node\n\n    {\n\n        LL val;\n\n        int lson,rson;\n\n    }seg[maxn];\n\n    int sz;\n\n    int newnode()\n\n    {\n\n        sz++;\n\n        seg[sz].val=0;\n\n        seg[sz].rson=-1;\n\n        seg[sz].lson=-1;\n\n        return sz;\n\n    }\n\n    void init()\n\n    {\n\n        sz=-1;\n\n    }\n\n    void update(int &root,LL l,LL r,LL val)\n\n    {\n\n        if(root==-1) root=newnode();\n\n        seg[root].val++;\n\n        if(l==r) return ;\n\n        LL mid=(l+r)>>1;\n\n        if(val<=mid) update(seg[root].lson,l,mid,val);\n\n        else update(seg[root].rson,mid+1,r,val);\n\n    }\n\n    LL query(int root,LL l,LL r,LL ql,LL qr)\n\n    {\n\n        if(root==-1) return 0;\n\n        if(l==ql&&r==qr) return seg[root].val;\n\n        LL mid=(l+r)>>1;\n\n        if(qr<=mid) return query(seg[root].lson,l,mid,ql,qr);\n\n        else if(ql>mid) return query(seg[root].rson,mid+1,r,ql,qr);\n\n        else return query(seg[root].lson,l,mid,ql,mid)+query(seg[root].rson,mid+1,r,mid+1,qr);\n\n    }\n\n    /**\n\n    void debug(int i)\n\n    {\n\n        if(i==-1) return ;\n\n        printf(\"node=%d val=%lld lson=%d rson=%d\\n\",i,seg[i].val,seg[i].lson,seg[i].rson);\n\n        debug(seg[i].lson),debug(seg[i].rson);\n\n    }\n\n    */\n\n}AC;\n\n\n\nint main()\n\n{\n\n    int n,k,root=-1;\n\n    scanf(\"%d%d\",&n,&k);\n\n    LL sum=0,ans=0;\n\n    AC.init();\n\n    for(int i=1; i<=n; i++)\n\n    {\n\n        int num;\n\n        scanf(\"%d\",&num);\n\n\t\tnum-=k;\n\n        AC.update(root,-INF,INF,sum);\n\n        sum+=num;\n\n        ans+=AC.query(root,-INF,INF,-INF,sum);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <cstdio>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\n\n\nconst int MAX_N = 200000;\n\n\n\nll cnt = 0ll;\n\nint n;\n\nll K, a[MAX_N + 10], s[MAX_N + 10], b[MAX_N + 10], t[MAX_N + 10];\n\n\n\nvoid merge_sort(ll* A, int x, int y, ll* T) {\n\n    if (y - x > 1) {\n\n        int m = x + (y - x) / 2;\n\n        int p = x, q = m, i = x;\n\n        merge_sort(A, x, m, T);\n\n        merge_sort(A, m, y, T);\n\n        while (p < m || q < y) {\n\n            if (q >= y || (p < m && A[p] <= A[q])) T[i++] = A[p++];\n\n            else { T[i++] = A[q++]; cnt += m - p; }\n\n        }\n\n        for (i = x; i < y; i++) A[i] = T[i];\n\n    }\n\n}\n\n\n\nint main() {\n\n    scanf(\"%d%lld\", &n, &K);\n\n    for (int i = 0; i < n; i++) {\n\n        scanf(\"%lld\", &a[i]);\n\n        s[i] = a[i] + (i ? s[i - 1] : 0);\n\n        b[i] = (i ? s[i - 1] : 0) - K * i;\n\n    }\n\n    b[n] = s[n - 1] - n * K;\n\n    merge_sort(b, 0, n + 1, t);\n\n    printf(\"%lld\\n\", (ll)n * (n + 1) / 2 - cnt);\n\n    return 0;\n\n}"
    },
    {
        "id": "124",
        "source_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define maxn 200010\n\n#define lowb(x) (x & (-x))\n\nint t[maxn], n, c[maxn], d[maxn];\n\nlong long a[maxn], b[maxn];\n\nvoid add(int x) {\n\n\tfor (int i = x; i <= n + 1; i += lowb(i)) {\n\n\t\tt[i]++;\n\n\t}\n\n}\n\nlong long query(int x) {\n\n\tlong long s = 0;\n\n\tfor (int i = x; i > 0; i -= lowb(i)) {\n\n\t\ts += t[i];\n\n\t}\n\n\treturn s;\n\n}\n\nint cmp(int i, int j) {\n\n\treturn b[i] < b[j];\n\n}\n\nint main()\n\n{\n\n\tint k;\n\n\t\n\n\tscanf(\"%d%d\", &n, &k);\n\n\tfor (int i = 1; i <= n; i++) {\n\n\t\tscanf(\"%lld\", &a[i]);\n\n\t}\n\n\tb[0] = 0;\n\n\tc[0] = 0;\n\n\tfor (int i = 1; i <= n; i++) {\n\n\t\tc[i] = i;\n\n\t\tb[i] = b[i - 1] + a[i] - k;\n\n\t}\n\n\tstable_sort(c, c + n + 1, cmp);\n\n\tfor (int i = 0; i <= n; i++) {\n\n\t\td[c[i]] = i + 1;\n\n\t}\n\n\tlong long s = 0;\n\n\tfor (int i = 0; i <= n; i++) {\n\n\t\ts += query(d[i]);\n\n\t\tadd(d[i]);\n\n\t}\n\n\tprintf(\"%lld\\n\", s);\n\n}",
        "optimized_code": "#include <cstdio>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\n\n\nconst int MAX_N = 200000;\n\n\n\nll cnt = 0ll;\n\nint n;\n\nll K, a[MAX_N + 10], s[MAX_N + 10], b[MAX_N + 10], t[MAX_N + 10];\n\n\n\nvoid merge_sort(ll* A, int x, int y, ll* T) {\n\n    if (y - x > 1) {\n\n        int m = x + (y - x) / 2;\n\n        int p = x, q = m, i = x;\n\n        merge_sort(A, x, m, T);\n\n        merge_sort(A, m, y, T);\n\n        while (p < m || q < y) {\n\n            if (q >= y || (p < m && A[p] <= A[q])) T[i++] = A[p++];\n\n            else { T[i++] = A[q++]; cnt += m - p; }\n\n        }\n\n        for (i = x; i < y; i++) A[i] = T[i];\n\n    }\n\n}\n\n\n\nint main() {\n\n    scanf(\"%d%lld\", &n, &K);\n\n    for (int i = 0; i < n; i++) {\n\n        scanf(\"%lld\", &a[i]);\n\n        s[i] = a[i] + (i ? s[i - 1] : 0);\n\n        b[i] = (i ? s[i - 1] : 0) - K * i;\n\n    }\n\n    b[n] = s[n - 1] - n * K;\n\n    merge_sort(b, 0, n + 1, t);\n\n    printf(\"%lld\\n\", (ll)n * (n + 1) / 2 - cnt);\n\n    return 0;\n\n}"
    },
    {
        "id": "126",
        "source_code": "#include<iostream>\n\n#include<cstdio>\n\n#include<algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int N=2e5+5;\n\nint n;ll m,a[N]={0},tree[20][N],as[N];\n\nint num[20][N];\n\nvoid build(int c,int lef,int rig) {\n\n    int mid=(lef+rig)>>1,left_num=mid-lef+1,l=lef,r=mid+1;\n\n    for(int i=lef;i<=rig;i++) if(tree[c][i]<as[mid]) left_num--;\n\n    for(int i=lef;i<=rig;i++) {\n\n        num[c][i]=num[c][i-1];\n\n        if(i==lef) num[c][i]=0;\n\n        if(tree[c][i]==as[mid]) {\n\n            if(left_num) left_num--,num[c][i]++,tree[c+1][l++]=tree[c][i];\n\n            else tree[c+1][r++]=tree[c][i];\n\n        }\n\n        else if(tree[c][i]<as[mid]) tree[c+1][l++]=tree[c][i],num[c][i]++;\n\n        else tree[c+1][r++]=tree[c][i];\n\n    }\n\n    if(lef==rig) return;\n\n    build(c+1,lef,mid);build(c+1,mid+1,rig);\n\n}\n\nll query(int c,int lef,int rig,int ql,int qr,int k) {\n\n    int s,ss,mid=(lef+rig)>>1;//s\u4e3aql--qr\u533a\u95f4\u8fdb\u5165\u5de6\u5b50\u6811\u7684\u4e2a\u6570\uff0css\u4e3alef--ql-1\u533a\u95f4\u8fdb\u5165\u5de6\u5b50\u6811\u7684\u4e2a\u6570\n\n    int b,bb;//b\u4e3alef--qr-1\u533a\u95f4\u8fdb\u5165\u53f3\u5b50\u6811\u7684\u4e2a\u6570\uff0cbb\u4e3aql--qr\u533a\u95f4\u8fdb\u5165\u53f3\u5b50\u6811\u7684\u4e2a\u6570\n\n    if(ql==lef) s=num[c][qr],ss=0;\n\n    else s=num[c][qr]-num[c][ql-1],ss=num[c][ql-1];\n\n    if(lef==rig) return tree[c][lef];\n\n    if(s>=k) {\n\n        ql=lef+ss;qr=ql+s-1;\n\n        return query(c+1,lef,mid,ql,qr,k);\n\n    }\n\n    else {\n\n        b=ql-lef-ss;\n\n        bb=qr-ql+1-s;\n\n        ql=mid+b+1;//\u9700\u8981\u5ffd\u7565lef--ql-1\u533a\u95f4\u4e2d\u8fdb\u5165\u53f3\u5b50\u6811\u7684\u6570\n\n        qr=ql+bb-1;\n\n        return query(c+1,mid+1,rig,ql,qr,k-s);\n\n    }\n\n}\n\nint main() {\n\n    scanf(\"%d%lld\",&n,&m);\n\n    for(int i=1;i<=n;i++) scanf(\"%lld\",a+i),a[i]-=m,a[i]+=a[i-1],as[i]=a[i];\n\n    for(int i=1;i<=n;i++) tree[0][i]=a[i];\n\n    ll ans=0,cur=0;\n\n    sort(as+1,as+1+n);\n\n    build(0,1,n);\n\n    for(int i=1;i<=n;i++) {\n\n        int l=i,r=n+1,mid;\n\n        while(l<r) {\n\n            mid=((l+r)>>1)-i+1;\n\n            if(query(0,1,n,i,n,mid)<cur) l=mid+i;\n\n            else r=mid+i-1;\n\n        }\n\n        ans+=n+1-r;\n\n        cur=a[i];\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <cstdio>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\n\n\nconst int MAX_N = 200000;\n\n\n\nll cnt = 0ll;\n\nint n;\n\nll K, a[MAX_N + 10], s[MAX_N + 10], b[MAX_N + 10], t[MAX_N + 10];\n\n\n\nvoid merge_sort(ll* A, int x, int y, ll* T) {\n\n    if (y - x > 1) {\n\n        int m = x + (y - x) / 2;\n\n        int p = x, q = m, i = x;\n\n        merge_sort(A, x, m, T);\n\n        merge_sort(A, m, y, T);\n\n        while (p < m || q < y) {\n\n            if (q >= y || (p < m && A[p] <= A[q])) T[i++] = A[p++];\n\n            else { T[i++] = A[q++]; cnt += m - p; }\n\n        }\n\n        for (i = x; i < y; i++) A[i] = T[i];\n\n    }\n\n}\n\n\n\nint main() {\n\n    scanf(\"%d%lld\", &n, &K);\n\n    for (int i = 0; i < n; i++) {\n\n        scanf(\"%lld\", &a[i]);\n\n        s[i] = a[i] + (i ? s[i - 1] : 0);\n\n        b[i] = (i ? s[i - 1] : 0) - K * i;\n\n    }\n\n    b[n] = s[n - 1] - n * K;\n\n    merge_sort(b, 0, n + 1, t);\n\n    printf(\"%lld\\n\", (ll)n * (n + 1) / 2 - cnt);\n\n    return 0;\n\n}"
    },
    {
        "id": "127",
        "source_code": "#include<iostream>\n\n#include<cstdio>\n\n#include<map>\n\n#include<algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\nmap<ll,int> t;\n\nint cnt;\n\nconst int N=2e5+5;\n\nint n;ll k,a[N]={0},as[N];\n\nint bit[N]={0};\n\nvoid add(int x,int val) {\n\n    while(x<cnt) bit[x]+=val,x+=x&-x;\n\n}\n\nint sum(int x) {\n\n    int s=0;while(x) s+=bit[x],x-=x&-x;return s;\n\n}\n\nint main() {\n\n    scanf(\"%d%lld\",&n,&k);\n\n    t.clear();\n\n    for(int i=1;i<=n;i++) scanf(\"%lld\",a+i),a[i]-=k,a[i]+=a[i-1],as[i]=a[i];\n\n    ll ans=0;\n\n    sort(as+1,as+1+n);\n\n    cnt=1;\n\n    for(int i=1;i<=n;i++) if(!t.count(as[i])) t[as[i]]=cnt++;\n\n    for(int i=1;i<=n;i++) {\n\n        if(a[i]>=0) ans++;\n\n        ans+=sum(t[a[i]]);\n\n        add(t[a[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n    return 0;\n\n}\n",
        "optimized_code": "#include <cstdio>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\n\n\nconst int MAX_N = 200000;\n\n\n\nll cnt = 0ll;\n\nint n;\n\nll K, a[MAX_N + 10], s[MAX_N + 10], b[MAX_N + 10], t[MAX_N + 10];\n\n\n\nvoid merge_sort(ll* A, int x, int y, ll* T) {\n\n    if (y - x > 1) {\n\n        int m = x + (y - x) / 2;\n\n        int p = x, q = m, i = x;\n\n        merge_sort(A, x, m, T);\n\n        merge_sort(A, m, y, T);\n\n        while (p < m || q < y) {\n\n            if (q >= y || (p < m && A[p] <= A[q])) T[i++] = A[p++];\n\n            else { T[i++] = A[q++]; cnt += m - p; }\n\n        }\n\n        for (i = x; i < y; i++) A[i] = T[i];\n\n    }\n\n}\n\n\n\nint main() {\n\n    scanf(\"%d%lld\", &n, &K);\n\n    for (int i = 0; i < n; i++) {\n\n        scanf(\"%lld\", &a[i]);\n\n        s[i] = a[i] + (i ? s[i - 1] : 0);\n\n        b[i] = (i ? s[i - 1] : 0) - K * i;\n\n    }\n\n    b[n] = s[n - 1] - n * K;\n\n    merge_sort(b, 0, n + 1, t);\n\n    printf(\"%lld\\n\", (ll)n * (n + 1) / 2 - cnt);\n\n    return 0;\n\n}"
    },
    {
        "id": "128",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <cstdio>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\n\n\nconst int MAX_N = 200000;\n\n\n\nll cnt = 0ll;\n\nint n;\n\nll K, a[MAX_N + 10], s[MAX_N + 10], b[MAX_N + 10], t[MAX_N + 10];\n\n\n\nvoid merge_sort(ll* A, int x, int y, ll* T) {\n\n    if (y - x > 1) {\n\n        int m = x + (y - x) / 2;\n\n        int p = x, q = m, i = x;\n\n        merge_sort(A, x, m, T);\n\n        merge_sort(A, m, y, T);\n\n        while (p < m || q < y) {\n\n            if (q >= y || (p < m && A[p] <= A[q])) T[i++] = A[p++];\n\n            else { T[i++] = A[q++]; cnt += m - p; }\n\n        }\n\n        for (i = x; i < y; i++) A[i] = T[i];\n\n    }\n\n}\n\n\n\nint main() {\n\n    scanf(\"%d%lld\", &n, &K);\n\n    for (int i = 0; i < n; i++) {\n\n        scanf(\"%lld\", &a[i]);\n\n        s[i] = a[i] + (i ? s[i - 1] : 0);\n\n        b[i] = (i ? s[i - 1] : 0) - K * i;\n\n    }\n\n    b[n] = s[n - 1] - n * K;\n\n    merge_sort(b, 0, n + 1, t);\n\n    printf(\"%lld\\n\", (ll)n * (n + 1) / 2 - cnt);\n\n    return 0;\n\n}"
    },
    {
        "id": "129",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <cstdio>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\n\n\nconst int MAX_N = 200000;\n\n\n\nll cnt = 0ll;\n\nint n;\n\nll K, a[MAX_N + 10], s[MAX_N + 10], b[MAX_N + 10], t[MAX_N + 10];\n\n\n\nvoid merge_sort(ll* A, int x, int y, ll* T) {\n\n    if (y - x > 1) {\n\n        int m = x + (y - x) / 2;\n\n        int p = x, q = m, i = x;\n\n        merge_sort(A, x, m, T);\n\n        merge_sort(A, m, y, T);\n\n        while (p < m || q < y) {\n\n            if (q >= y || (p < m && A[p] <= A[q])) T[i++] = A[p++];\n\n            else { T[i++] = A[q++]; cnt += m - p; }\n\n        }\n\n        for (i = x; i < y; i++) A[i] = T[i];\n\n    }\n\n}\n\n\n\nint main() {\n\n    scanf(\"%d%lld\", &n, &K);\n\n    for (int i = 0; i < n; i++) {\n\n        scanf(\"%lld\", &a[i]);\n\n        s[i] = a[i] + (i ? s[i - 1] : 0);\n\n        b[i] = (i ? s[i - 1] : 0) - K * i;\n\n    }\n\n    b[n] = s[n - 1] - n * K;\n\n    merge_sort(b, 0, n + 1, t);\n\n    printf(\"%lld\\n\", (ll)n * (n + 1) / 2 - cnt);\n\n    return 0;\n\n}"
    },
    {
        "id": "130",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<algorithm>\n\n#include<iostream>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn = 200000 + 10;\n\nll a[maxn];\n\nll c[maxn];\n\nint n, k;\n\nstruct node{\n\n    ll v;\n\n\tint t;\n\n    int id;\n\n}d[maxn];\n\n\n\nbool cmp(node f, node g){\n\n    return f.v < g.v;\n\n}\n\n\n\nbool cmp1(node f, node g){\n\n    return f.id < g.id;\n\n}\n\n\n\nint lowbit(int x){\n\n    return x & (-x);\n\n}\n\n\n\nvoid add(int x, ll value){\n\n    while(x < maxn){\n\n        c[x] += value;\n\n        x = x + lowbit(x);\n\n    }\n\n}\n\n\n\nll sum(int x){\n\n    ll ans = 0;\n\n    while(x > 0){\n\n        ans += c[x];\n\n        x = x - lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main(){\n\n    scanf(\"%d%d\", &n, &k);\n\n\n\n    for(int i = 1; i <= n; i++){\n\n        scanf(\"%d\", &a[i]);\n\n        a[i] = a[i] - k;\n\n\n\n    }\n\n    for(int i = 1; i <= n; i++){\n\n        d[i].v = d[i - 1].v + a[i];\n\n        d[i].id = i;\n\n    }\n\n    d[0].v = 0;\n\n    d[0].id = 0;\n\n    sort(d, d + n + 1, cmp);\n\n    int cnt = 0;\n\n    for(int i = 0; i <= n; i++){\n\n        if(i == 0 || d[i].v != d[i - 1].v){\n\n            cnt++;\n\n            d[i].t = cnt;\n\n        }else d[i].t = d[i - 1].t;\n\n    }\n\n    sort(d, d + n + 1, cmp1);\n\n    ll ans = 0;\n\n\n\n\n\n    for(int i = 0; i <= n; i++){\n\n\n\n       ans += sum(d[i].t);\n\n       add(d[i].t, 1);\n\n    }\n\n    printf(\"%lld\\n\", ans);\n\n    return 0;\n\n}"
    },
    {
        "id": "131",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<algorithm>\n\n#include<iostream>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn = 200000 + 10;\n\nll a[maxn];\n\nll c[maxn];\n\nint n, k;\n\nstruct node{\n\n    ll v;\n\n\tint t;\n\n    int id;\n\n}d[maxn];\n\n\n\nbool cmp(node f, node g){\n\n    return f.v < g.v;\n\n}\n\n\n\nbool cmp1(node f, node g){\n\n    return f.id < g.id;\n\n}\n\n\n\nint lowbit(int x){\n\n    return x & (-x);\n\n}\n\n\n\nvoid add(int x, ll value){\n\n    while(x < maxn){\n\n        c[x] += value;\n\n        x = x + lowbit(x);\n\n    }\n\n}\n\n\n\nll sum(int x){\n\n    ll ans = 0;\n\n    while(x > 0){\n\n        ans += c[x];\n\n        x = x - lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\nint main(){\n\n    scanf(\"%d%d\", &n, &k);\n\n\n\n    for(int i = 1; i <= n; i++){\n\n        scanf(\"%d\", &a[i]);\n\n        a[i] = a[i] - k;\n\n\n\n    }\n\n    for(int i = 1; i <= n; i++){\n\n        d[i].v = d[i - 1].v + a[i];\n\n        d[i].id = i;\n\n    }\n\n    d[0].v = 0;\n\n    d[0].id = 0;\n\n    sort(d, d + n + 1, cmp);\n\n    int cnt = 0;\n\n    for(int i = 0; i <= n; i++){\n\n        if(i == 0 || d[i].v != d[i - 1].v){\n\n            cnt++;\n\n            d[i].t = cnt;\n\n        }else d[i].t = d[i - 1].t;\n\n    }\n\n    sort(d, d + n + 1, cmp1);\n\n    ll ans = 0;\n\n\n\n\n\n    for(int i = 0; i <= n; i++){\n\n\n\n       ans += sum(d[i].t);\n\n       add(d[i].t, 1);\n\n    }\n\n    printf(\"%lld\\n\", ans);\n\n    return 0;\n\n}"
    },
    {
        "id": "132",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cmath>\n\n#include <algorithm>\n\n#define maxn 1000100\n\nusing namespace std;\n\ntypedef long long ll;\n\nll n,k;\n\nll sans[maxn];\n\nll s[maxn];\n\nll chara[maxn];\n\nll lowbit(ll x)\n\n{\n\n    return x&(-x);\n\n}\n\nvoid upd(ll x,ll t)\n\n{\n\n    while(x<=n)\n\n    {\n\n        sans[x]+=t;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nll sum(ll x)\n\n{\n\n    ll ans=0;\n\n    while(x>0)\n\n    {\n\n        ans+=sans[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\n\n\nint main()\n\n{\n\n    scanf(\"%I64d%I64d\",&n,&k);\n\n    ll a;\n\n    int cnt=0;\n\n    for(int i=1;i<=n;i++)\n\n    {\n\n        scanf(\"%I64d\",&a);\n\n        s[i]=s[i-1]+a-k;\n\n        chara[cnt++]=s[i];\n\n    }\n\n    ll ans=0;\n\n    sort(chara,chara+cnt);\n\n    int siz=unique(chara,chara+cnt)-chara;\n\n    ll t;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        t=lower_bound(chara,chara+siz,s[i])-chara+1;\n\n        ans+=sum(t);\n\n        upd(t,1);\n\n    }\n\n    cout<<ans<<endl;\n\n    return 0;\n\n}\n"
    },
    {
        "id": "133",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cmath>\n\n#include <algorithm>\n\n#define maxn 1000100\n\nusing namespace std;\n\ntypedef long long ll;\n\nll n,k;\n\nll sans[maxn];\n\nll s[maxn];\n\nll chara[maxn];\n\nll lowbit(ll x)\n\n{\n\n    return x&(-x);\n\n}\n\nvoid upd(ll x,ll t)\n\n{\n\n    while(x<=n)\n\n    {\n\n        sans[x]+=t;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nll sum(ll x)\n\n{\n\n    ll ans=0;\n\n    while(x>0)\n\n    {\n\n        ans+=sans[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\n\n\nint main()\n\n{\n\n    scanf(\"%I64d%I64d\",&n,&k);\n\n    ll a;\n\n    int cnt=0;\n\n    for(int i=1;i<=n;i++)\n\n    {\n\n        scanf(\"%I64d\",&a);\n\n        s[i]=s[i-1]+a-k;\n\n        chara[cnt++]=s[i];\n\n    }\n\n    ll ans=0;\n\n    sort(chara,chara+cnt);\n\n    int siz=unique(chara,chara+cnt)-chara;\n\n    ll t;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        t=lower_bound(chara,chara+siz,s[i])-chara+1;\n\n        ans+=sum(t);\n\n        upd(t,1);\n\n    }\n\n    cout<<ans<<endl;\n\n    return 0;\n\n}\n"
    },
    {
        "id": "134",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cmath>\n\n#include <algorithm>\n\n#define maxn 1000100\n\nusing namespace std;\n\ntypedef long long ll;\n\nll n,k;\n\nll sans[maxn];\n\nll s[maxn];\n\nll chara[maxn];\n\nll lowbit(ll x)\n\n{\n\n    return x&(-x);\n\n}\n\nvoid upd(ll x,ll t)\n\n{\n\n    while(x<=n)\n\n    {\n\n        sans[x]+=t;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nll sum(ll x)\n\n{\n\n    ll ans=0;\n\n    while(x>0)\n\n    {\n\n        ans+=sans[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\n\n\nint main()\n\n{\n\n    scanf(\"%I64d%I64d\",&n,&k);\n\n    ll a;\n\n    int cnt=0;\n\n    for(int i=1;i<=n;i++)\n\n    {\n\n        scanf(\"%I64d\",&a);\n\n        s[i]=s[i-1]+a-k;\n\n        chara[cnt++]=s[i];\n\n    }\n\n    s[0]=0;\n\n    ll ans=0;\n\n    sort(chara,chara+cnt);\n\n    int siz=unique(chara,chara+cnt)-chara;\n\n    ll t;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        t=lower_bound(chara,chara+siz,s[i])-chara+1;\n\n        ans+=sum(t);\n\n        upd(t,1);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n    return 0;\n\n}\n"
    },
    {
        "id": "135",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <cstdio>\n\n#include <cstring>\n\n#include <cmath>\n\n#include <algorithm>\n\n#define maxn 1000100\n\nusing namespace std;\n\ntypedef long long ll;\n\nll n,k;\n\nll sans[maxn];\n\nll s[maxn];\n\nll chara[maxn];\n\nll lowbit(ll x)\n\n{\n\n    return x&(-x);\n\n}\n\nvoid upd(ll x,ll t)\n\n{\n\n    while(x<=n)\n\n    {\n\n        sans[x]+=t;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nll sum(ll x)\n\n{\n\n    ll ans=0;\n\n    while(x>0)\n\n    {\n\n        ans+=sans[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n\n\n\n\nint main()\n\n{\n\n    scanf(\"%I64d%I64d\",&n,&k);\n\n    ll a;\n\n    int cnt=0;\n\n    for(int i=1;i<=n;i++)\n\n    {\n\n        scanf(\"%I64d\",&a);\n\n        s[i]=s[i-1]+a-k;\n\n        chara[cnt++]=s[i];\n\n    }\n\n    s[0]=0;\n\n    ll ans=0;\n\n    sort(chara,chara+cnt);\n\n    int siz=unique(chara,chara+cnt)-chara;\n\n    ll t;\n\n    for(int i=0;i<=n;i++)\n\n    {\n\n        t=lower_bound(chara,chara+siz,s[i])-chara+1;\n\n        ans+=sum(t);\n\n        upd(t,1);\n\n    }\n\n    printf(\"%lld\\n\",ans);\n\n    return 0;\n\n}\n"
    },
    {
        "id": "136",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<string>\n\n#include<cmath>\n\n#include<iostream>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n#define INF 0x3f3f3f3f\n\ntypedef long long LL;\n\nconst int MAX_N = 200000 +10;\n\n\n\nstruct BIT{\n\n    int N;\n\n    LL a[MAX_N];\n\n\n\n    void clear(int n){\n\n        N = n;\n\n        for (int i=0;i<=N;i++) a[i] = 0;\n\n    }\n\n    int lowbit(int x){\n\n        return x & (-x);\n\n    }\n\n    void update(int x){\n\n        for (;x <= N;x += lowbit(x))\n\n            a[x]++;\n\n    }\n\n    LL sum(int x)\n\n    {\n\n        LL ret = 0LL;\n\n        for (; x; x -= lowbit(x))\n\n            ret += a[x];\n\n        return ret;\n\n    }\n\n} tree;\n\n\n\nLL b[MAX_N],s[MAX_N];\n\nmap<LL,int> mp;\n\n\n\nint main()\n\n{\n\n    int n, m, x;\n\n    scanf(\"%d%d\",&n,&m);\n\n\n\n    mp.clear();\n\n    tree.clear(n);\n\n    LL ans = 0LL;\n\n\n\n    for (int i=1;i<=n;i++){\n\n        scanf(\"%d\",&x);\n\n        s[i] = s[i - 1] + x - m;\n\n        if (s[i] < 0) ans++;\n\n        b[i] = s[i];\n\n    }\n\n    sort(b+1,b+n+1);\n\n\n\n    for (int i=1;i<=n;i++)\n\n       if (mp[b[i]] == 0) mp[b[i]] = i;\n\n\n\n    for (int i=n;i>=1;i--){\n\n        x = mp[s[i]];\n\n        ans += tree.sum(x);\n\n        tree.update(x+1);\n\n    }\n\n    printf(\"%lld\\n\",1LL * n * (n + 1) / 2 - ans);\n\n}\n"
    },
    {
        "id": "137",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<string>\n\n#include<cmath>\n\n#include<iostream>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n#define INF 0x3f3f3f3f\n\ntypedef long long LL;\n\nconst int MAX_N = 200000 +10;\n\n\n\nstruct BIT{\n\n    int N;\n\n    LL a[MAX_N];\n\n\n\n    void clear(int n){\n\n        N = n;\n\n        for (int i=0;i<=N;i++) a[i] = 0;\n\n    }\n\n    int lowbit(int x){\n\n        return x & (-x);\n\n    }\n\n    void update(int x){\n\n        for (;x <= N;x += lowbit(x))\n\n            a[x]++;\n\n    }\n\n    LL sum(int x)\n\n    {\n\n        LL ret = 0LL;\n\n        for (; x; x -= lowbit(x))\n\n            ret += a[x];\n\n        return ret;\n\n    }\n\n} tree;\n\n\n\nLL b[MAX_N],s[MAX_N];\n\nmap<LL,int> mp;\n\n\n\nint main()\n\n{\n\n    int n, m, x;\n\n    scanf(\"%d%d\",&n,&m);\n\n\n\n    mp.clear();\n\n    tree.clear(n);\n\n    LL ans = 0LL;\n\n\n\n    for (int i=1;i<=n;i++){\n\n        scanf(\"%d\",&x);\n\n        s[i] = s[i - 1] + x - m;\n\n        if (s[i] < 0) ans++;\n\n        b[i] = s[i];\n\n    }\n\n    sort(b+1,b+n+1);\n\n\n\n    for (int i=1;i<=n;i++)\n\n       if (mp[b[i]] == 0) mp[b[i]] = i;\n\n\n\n    for (int i=n;i>=1;i--){\n\n        x = mp[s[i]];\n\n        ans += tree.sum(x);\n\n        tree.update(x+1);\n\n    }\n\n    printf(\"%lld\\n\",1LL * n * (n + 1) / 2 - ans);\n\n}\n"
    },
    {
        "id": "138",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<string>\n\n#include<cmath>\n\n#include<iostream>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n#define INF 0x3f3f3f3f\n\ntypedef long long LL;\n\nconst int MAX_N = 200000 +10;\n\n\n\nstruct BIT{\n\n    int N;\n\n    LL a[MAX_N];\n\n\n\n    void clear(int n){\n\n        N = n;\n\n        for (int i=0;i<=N;i++) a[i] = 0;\n\n    }\n\n    int lowbit(int x){\n\n        return x & (-x);\n\n    }\n\n    void update(int x){\n\n        for (;x <= N;x += lowbit(x))\n\n            a[x]++;\n\n    }\n\n    LL sum(int x)\n\n    {\n\n        LL ret = 0LL;\n\n        for (; x; x -= lowbit(x))\n\n            ret += a[x];\n\n        return ret;\n\n    }\n\n} tree;\n\n\n\nLL b[MAX_N],s[MAX_N];\n\nmap<LL,int> mp;\n\n\n\nint main()\n\n{\n\n    int n, m, x;\n\n    scanf(\"%d%d\",&n,&m);\n\n\n\n    mp.clear();\n\n    tree.clear(n);\n\n    LL ans = 0LL;\n\n\n\n    for (int i=1;i<=n;i++){\n\n        scanf(\"%d\",&x);\n\n        s[i] = s[i - 1] + x - m;\n\n        if (s[i] < 0) ans++;\n\n        b[i] = s[i];\n\n    }\n\n    sort(b+1,b+n+1);\n\n\n\n    for (int i=1;i<=n;i++)\n\n       if (mp[b[i]] == 0) mp[b[i]] = i;\n\n\n\n    for (int i=n;i>=1;i--){\n\n        x = mp[s[i]];\n\n        ans += tree.sum(x);\n\n        tree.update(x+1);\n\n    }\n\n    printf(\"%lld\\n\",1LL * n * (n + 1) / 2 - ans);\n\n}\n"
    },
    {
        "id": "139",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<string>\n\n#include<cmath>\n\n#include<iostream>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n#define INF 0x3f3f3f3f\n\ntypedef long long LL;\n\nconst int MAX_N = 200000 +10;\n\n\n\nstruct BIT{\n\n    int N;\n\n    LL a[MAX_N];\n\n\n\n    void clear(int n){\n\n        N = n;\n\n        for (int i=0;i<=N;i++) a[i] = 0;\n\n    }\n\n    int lowbit(int x){\n\n        return x & (-x);\n\n    }\n\n    void update(int x){\n\n        while (x <= N){\n\n            a[x]++;\n\n            x += lowbit(x);\n\n        }\n\n    }\n\n    LL sum(int x)\n\n    {\n\n        LL ret = 0LL;\n\n        while (x){\n\n            ret += a[x];\n\n            x -= lowbit(x);\n\n        }\n\n        return ret;\n\n    }\n\n} tree;\n\n\n\nLL b[MAX_N],s[MAX_N];\n\nmap<LL,int> mp;\n\n\n\nint main()\n\n{\n\n    int n, m, x;\n\n    scanf(\"%d%d\",&n,&m);\n\n\n\n    mp.clear();\n\n    tree.clear(n);\n\n    LL ans = 0LL;\n\n\n\n    for (int i=1;i<=n;i++){\n\n        scanf(\"%d\",&x);\n\n        s[i] = s[i - 1] + x - m;\n\n        if (s[i] < 0) ans++;\n\n        b[i] = s[i];\n\n    }\n\n    sort(b+1,b+n+1);\n\n\n\n    for (int i=1;i<=n;i++)\n\n       if (mp[b[i]] == 0) mp[b[i]] = i;\n\n\n\n    for (int i=n;i>=1;i--){\n\n        x = mp[s[i]];\n\n        ans += tree.sum(x);\n\n        tree.update(x+1);\n\n    }\n\n    printf(\"%lld\\n\",1LL * n * (n + 1) / 2 - ans);\n\n}\n"
    },
    {
        "id": "140",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<string>\n\n#include<cmath>\n\n#include<iostream>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n#define INF 0x3f3f3f3f\n\ntypedef long long LL;\n\nconst int MAX_N = 200000 +10;\n\n\n\nstruct BIT{\n\n    int N;\n\n    LL a[MAX_N];\n\n\n\n    void clear(int n){\n\n        N = n;\n\n        for (int i=0;i<=N;i++) a[i] = 0;\n\n    }\n\n    int lowbit(int x){\n\n        return x & (-x);\n\n    }\n\n    void update(int x){\n\n        while (x <= N){\n\n            a[x]++;\n\n            x += lowbit(x);\n\n        }\n\n    }\n\n    LL sum(int x)\n\n    {\n\n        LL ret = 0LL;\n\n        while (x){\n\n            ret += a[x];\n\n            x -= lowbit(x);\n\n        }\n\n        return ret;\n\n    }\n\n} tree;\n\n\n\nLL b[MAX_N],s[MAX_N];\n\nmap<LL,int> mp;\n\n\n\nint main()\n\n{\n\n    int n, m, x;\n\n    scanf(\"%d%d\",&n,&m);\n\n\n\n    mp.clear();\n\n    tree.clear(n);\n\n    LL ans = 0LL;\n\n\n\n    for (int i=1;i<=n;i++){\n\n        scanf(\"%d\",&x);\n\n        s[i] = s[i - 1] + x - m;\n\n        if (s[i] < 0) ans++;\n\n        b[i] = s[i];\n\n    }\n\n    sort(b+1,b+n+1);\n\n\n\n    for (int i=1;i<=n;i++)\n\n       if (mp[b[i]] == 0) mp[b[i]] = i;\n\n\n\n    for (int i=n;i>=1;i--){\n\n        x = mp[s[i]];\n\n        ans += tree.sum(x);\n\n        tree.update(x+1);\n\n    }\n\n    printf(\"%lld\\n\",1LL * n * (n + 1) / 2 - ans);\n\n}\n"
    },
    {
        "id": "141",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<string>\n\n#include<cmath>\n\n#include<iostream>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n#define INF 0x3f3f3f3f\n\ntypedef long long LL;\n\nconst int MAX_N = 200000 +10;\n\n\n\nstruct BIT{\n\n    int N;\n\n    LL a[MAX_N];\n\n\n\n    void clear(int n){\n\n        N = n;\n\n        for (int i=0;i<=N;i++) a[i] = 0;\n\n    }\n\n    int lowbit(int x){\n\n        return x & (-x);\n\n    }\n\n    void update(int x){\n\n        while (x <= N){\n\n            a[x]++;\n\n            x += lowbit(x);\n\n        }\n\n    }\n\n    LL sum(int x)\n\n    {\n\n        LL ret = 0LL;\n\n        while (x){\n\n            ret += a[x];\n\n            x -= lowbit(x);\n\n        }\n\n        return ret;\n\n    }\n\n} tree;\n\n\n\nLL b[MAX_N],s[MAX_N];\n\nmap<LL,int> mp;\n\n\n\nint main()\n\n{\n\n    int n, m, x;\n\n    scanf(\"%d%d\",&n,&m);\n\n\n\n    mp.clear();\n\n    tree.clear(n);\n\n    LL ans = 0LL;\n\n\n\n    for (int i=1;i<=n;i++){\n\n        scanf(\"%d\",&x);\n\n        s[i] = s[i - 1] + x - m;\n\n        if (s[i] < 0) ans++;\n\n        b[i] = s[i];\n\n    }\n\n    sort(b+1,b+n+1);\n\n\n\n    for (int i=1;i<=n;i++)\n\n       if (mp[b[i]] == 0) mp[b[i]] = i;\n\n\n\n    for (int i=n;i>=1;i--){\n\n        x = mp[s[i]];\n\n        ans += tree.sum(x);\n\n        tree.update(x+1);\n\n    }\n\n    printf(\"%lld\\n\",1LL * n * (n + 1) / 2 - ans);\n\n}\n"
    },
    {
        "id": "142",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint t[N];\n\nint lowbit(int x){return x&(-x);}\n\nvoid add(int x){\n\n    while(x<N){\n\n        t[x]++;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nlong long sum(int x){\n\n    long long ans=0;\n\n    while(x){\n\n        ans+=t[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\nstruct node{int id;long long val;};\n\nnode arr[N];\n\nbool comp(node p1,node p2){\n\n    return p1.val<p2.val;\n\n}\n\nint num[N];\n\nint main(){\n\n    std::ios::sync_with_stdio(false);\n\n    int n,k;\n\n    while(cin>>n>>k){\n\n        memset(t,0,sizeof(t));\n\n        long long a;\n\n        arr[0].id = 0;\n\n        arr[0].val = 0;\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].id = i;\n\n            cin>>a;\n\n            arr[i].val = a-k;\n\n        }\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].val += arr[i-1].val;\n\n        }\n\n        sort(arr,arr+n+1,comp);\n\n        for(int i=0;i<=n;i++){\n\n            if(i>0&&arr[i].val==arr[i-1].val)num[arr[i].id] = num[arr[i-1].id];\n\n            else num[arr[i].id] = i+1;\n\n        }\n\n        long long ans = 0;\n\n        for(int i=0;i<=n;i++){\n\n            int x = num[i];\n\n            ans += sum(x);\n\n            add(x);\n\n        }\n\n        cout<<ans<<endl;\n\n    }\n\n}\n"
    },
    {
        "id": "143",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <iostream>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint t[N];\n\nint lowbit(int x){return x&(-x);}\n\nvoid add(int x){\n\n    while(x<N){\n\n        t[x]++;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nlong long sum(int x){\n\n    long long ans=0;\n\n    while(x){\n\n        ans+=t[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\nstruct node{int id;long long val;};\n\nnode arr[N];\n\nbool comp(node p1,node p2){\n\n    return p1.val<p2.val;\n\n}\n\nint num[N];\n\nint main(){\n\n    std::ios::sync_with_stdio(false);\n\n    int n,k;\n\n    while(cin>>n>>k){\n\n        memset(t,0,sizeof(t));\n\n        long long a;\n\n        arr[0].id = 0;\n\n        arr[0].val = 0;\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].id = i;\n\n            cin>>a;\n\n            arr[i].val = a-k;\n\n        }\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].val += arr[i-1].val;\n\n        }\n\n        sort(arr,arr+n+1,comp);\n\n        for(int i=0;i<=n;i++){\n\n            if(i>0&&arr[i].val==arr[i-1].val)num[arr[i].id] = num[arr[i-1].id];\n\n            else num[arr[i].id] = i+1;\n\n        }\n\n        long long ans = 0;\n\n        for(int i=0;i<=n;i++){\n\n            int x = num[i];\n\n            ans += sum(x);\n\n            add(x);\n\n        }\n\n        cout<<ans<<endl;\n\n    }\n\n}\n"
    },
    {
        "id": "144",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include <iostream>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint t[N];\n\nint lowbit(int x){return x&(-x);}\n\nvoid add(int x){\n\n    while(x<N){\n\n        t[x]++;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nlong long sum(int x){\n\n    long long ans=0;\n\n    while(x){\n\n        ans+=t[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\nstruct node{int id;long long val;};\n\nnode arr[N];\n\nbool comp(node p1,node p2){\n\n    return p1.val<p2.val;\n\n}\n\nint num[N];\n\nint main(){\n\n    std::ios::sync_with_stdio(false);\n\n    int n,k;\n\n    while(cin>>n>>k){\n\n        memset(t,0,sizeof(t));\n\n        long long a;\n\n        arr[0].id = 0;\n\n        arr[0].val = 0;\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].id = i;\n\n            cin>>a;\n\n            arr[i].val = a-k;\n\n        }\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].val += arr[i-1].val;\n\n        }\n\n        sort(arr,arr+n+1,comp);\n\n        for(int i=0;i<=n;i++){\n\n            if(i>0&&arr[i].val==arr[i-1].val)num[arr[i].id] = num[arr[i-1].id];\n\n            else num[arr[i].id] = i+1;\n\n        }\n\n        long long ans = 0;\n\n        for(int i=0;i<=n;i++){\n\n            int x = num[i];\n\n            ans += sum(x);\n\n            add(x);\n\n        }\n\n        cout<<ans<<endl;\n\n    }\n\n}\n"
    },
    {
        "id": "145",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} "
    },
    {
        "id": "146",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} "
    },
    {
        "id": "147",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define mod 1000000007\n\n#define MOD(x) ((x)%mod)\n\nint n;\n\nlong long mean;\n\nlong long a[200005]; \n\nlong long s[200005]; \n\nlong long temp[200005]; \n\nlong long ans;\n\nvoid merge(int l,int r)\n\n{\n\n\tint m=(l+r)/2;\n\n\tint h1=l,h2=m+1;\n\n\tint t1=m,t2=r;\n\n\tif(h1<t1) merge(h1,t1);\n\n\tif(h2<t2) merge(h2,t2);\n\n\tfor(int i=l;i<=r;i++)\t\n\n\t{\n\n\t\tif(h1<=t1&&h2<=t2)\n\n\t\t{\n\n\t\t\tif(s[h1]>s[h2])\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h1++];\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h2++];\n\n\t\t\t\tans+=t1-h1+1;\n\n\t\t\t}\n\n\t\t}\n\n\t\telse if(h1<=t1)\n\n\t\t{\n\n\t\t\ttemp[i]=s[h1++];\n\n\t\t}\n\n\t\telse\n\n\t\t{\n\n\t\t\ttemp[i]=s[h2++];\n\n\t\t}\n\n\t}\n\n\tfor(int i=l;i<=r;i++)\n\n\t\ts[i]=temp[i];\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%lld\",&n,&mean);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tscanf(\"%lld\",&a[i]);\n\n\t\ta[i]-=mean;\n\n\t\ts[i]=s[i-1]+a[i];\n\n\t}\n\n\tmerge(1,n);\n\n\tfor(int i=1;i<=n;i++)\n\n\t\tif(s[i]>=0) ans++;\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n}"
    },
    {
        "id": "148",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define mod 1000000007\n\n#define MOD(x) ((x)%mod)\n\nint n;\n\nlong long mean;\n\nlong long a[200005]; \n\nlong long s[200005]; \n\nlong long temp[200005]; \n\nlong long ans;\n\nvoid merge(int l,int r)\n\n{\n\n\tint m=(l+r)/2;\n\n\tint h1=l,h2=m+1;\n\n\tint t1=m,t2=r;\n\n\tif(h1<t1) merge(h1,t1);\n\n\tif(h2<t2) merge(h2,t2);\n\n\tfor(int i=l;i<=r;i++)\t\n\n\t{\n\n\t\tif(h1<=t1&&h2<=t2)\n\n\t\t{\n\n\t\t\tif(s[h1]>s[h2])\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h1++];\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h2++];\n\n\t\t\t\tans+=t1-h1+1;\n\n\t\t\t}\n\n\t\t}\n\n\t\telse if(h1<=t1)\n\n\t\t{\n\n\t\t\ttemp[i]=s[h1++];\n\n\t\t}\n\n\t\telse\n\n\t\t{\n\n\t\t\ttemp[i]=s[h2++];\n\n\t\t}\n\n\t}\n\n\tfor(int i=l;i<=r;i++)\n\n\t\ts[i]=temp[i];\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%lld\",&n,&mean);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tscanf(\"%lld\",&a[i]);\n\n\t\ta[i]-=mean;\n\n\t\ts[i]=s[i-1]+a[i];\n\n\t}\n\n\tmerge(1,n);\n\n\tfor(int i=1;i<=n;i++)\n\n\t\tif(s[i]>=0) ans++;\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n}"
    },
    {
        "id": "149",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define mod 1000000007\n\n#define MOD(x) ((x)%mod)\n\nint n;\n\nlong long mean;\n\nlong long a[200005]; \n\nlong long s[200005]; \n\nlong long temp[200005]; \n\nlong long ans;\n\nvoid merge(int l,int r)\n\n{\n\n\tint m=(l+r)/2;\n\n\tint h1=l,h2=m+1;\n\n\tint t1=m,t2=r;\n\n\tif(h1<t1) merge(h1,t1);\n\n\tif(h2<t2) merge(h2,t2);\n\n\tfor(int i=l;i<=r;i++)\t\n\n\t{\n\n\t\tif(h1<=t1&&h2<=t2)\n\n\t\t{\n\n\t\t\tif(s[h1]>s[h2])\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h1++];\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h2++];\n\n\t\t\t\tans+=t1-h1+1;\n\n\t\t\t}\n\n\t\t}\n\n\t\telse if(h1<=t1)\n\n\t\t{\n\n\t\t\ttemp[i]=s[h1++];\n\n\t\t}\n\n\t\telse\n\n\t\t{\n\n\t\t\ttemp[i]=s[h2++];\n\n\t\t}\n\n\t}\n\n\tfor(int i=l;i<=r;i++)\n\n\t\ts[i]=temp[i];\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%lld\",&n,&mean);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tscanf(\"%lld\",&a[i]);\n\n\t\ta[i]-=mean;\n\n\t\ts[i]=s[i-1]+a[i];\n\n\t}\n\n\tmerge(1,n);\n\n\tfor(int i=1;i<=n;i++)\n\n\t\tif(s[i]>=0) ans++;\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n}"
    },
    {
        "id": "150",
        "source_code": "#include <iostream>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint t[N];\n\nint lowbit(int x){return x&(-x);}\n\nvoid add(int x){\n\n    while(x<N){\n\n        t[x]++;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nlong long sum(int x){\n\n    long long ans=0;\n\n    while(x){\n\n        ans+=t[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\nstruct node{int id;long long val;};\n\nnode arr[N];\n\nbool comp(node p1,node p2){\n\n    return p1.val<p2.val;\n\n}\n\nint num[N];\n\nint main(){\n\n    std::ios::sync_with_stdio(false);\n\n    int n,k;\n\n    while(cin>>n>>k){\n\n        memset(t,0,sizeof(t));\n\n        long long a;\n\n        arr[0].id = 0;\n\n        arr[0].val = 0;\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].id = i;\n\n            cin>>a;\n\n            arr[i].val = a-k;\n\n        }\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].val += arr[i-1].val;\n\n        }\n\n        sort(arr,arr+n+1,comp);\n\n        for(int i=0;i<=n;i++){\n\n            if(i>0&&arr[i].val==arr[i-1].val)num[arr[i].id] = num[arr[i-1].id];\n\n            else num[arr[i].id] = i+1;\n\n        }\n\n        long long ans = 0;\n\n        for(int i=0;i<=n;i++){\n\n            int x = num[i];\n\n            ans += sum(x);\n\n            add(x);\n\n        }\n\n        cout<<ans<<endl;\n\n    }\n\n}\n",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define mod 1000000007\n\n#define MOD(x) ((x)%mod)\n\nint n;\n\nlong long mean;\n\nlong long a[200005]; \n\nlong long s[200005]; \n\nlong long temp[200005]; \n\nlong long ans;\n\nvoid merge(int l,int r)\n\n{\n\n\tint m=(l+r)/2;\n\n\tint h1=l,h2=m+1;\n\n\tint t1=m,t2=r;\n\n\tif(h1<t1) merge(h1,t1);\n\n\tif(h2<t2) merge(h2,t2);\n\n\tfor(int i=l;i<=r;i++)\t\n\n\t{\n\n\t\tif(h1<=t1&&h2<=t2)\n\n\t\t{\n\n\t\t\tif(s[h1]>s[h2])\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h1++];\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h2++];\n\n\t\t\t\tans+=t1-h1+1;\n\n\t\t\t}\n\n\t\t}\n\n\t\telse if(h1<=t1)\n\n\t\t{\n\n\t\t\ttemp[i]=s[h1++];\n\n\t\t}\n\n\t\telse\n\n\t\t{\n\n\t\t\ttemp[i]=s[h2++];\n\n\t\t}\n\n\t}\n\n\tfor(int i=l;i<=r;i++)\n\n\t\ts[i]=temp[i];\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%lld\",&n,&mean);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tscanf(\"%lld\",&a[i]);\n\n\t\ta[i]-=mean;\n\n\t\ts[i]=s[i-1]+a[i];\n\n\t}\n\n\tmerge(1,n);\n\n\tfor(int i=1;i<=n;i++)\n\n\t\tif(s[i]>=0) ans++;\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n}"
    },
    {
        "id": "151",
        "source_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} ",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define mod 1000000007\n\n#define MOD(x) ((x)%mod)\n\nint n;\n\nlong long mean;\n\nlong long a[200005]; \n\nlong long s[200005]; \n\nlong long temp[200005]; \n\nlong long ans;\n\nvoid merge(int l,int r)\n\n{\n\n\tint m=(l+r)/2;\n\n\tint h1=l,h2=m+1;\n\n\tint t1=m,t2=r;\n\n\tif(h1<t1) merge(h1,t1);\n\n\tif(h2<t2) merge(h2,t2);\n\n\tfor(int i=l;i<=r;i++)\t\n\n\t{\n\n\t\tif(h1<=t1&&h2<=t2)\n\n\t\t{\n\n\t\t\tif(s[h1]>s[h2])\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h1++];\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h2++];\n\n\t\t\t\tans+=t1-h1+1;\n\n\t\t\t}\n\n\t\t}\n\n\t\telse if(h1<=t1)\n\n\t\t{\n\n\t\t\ttemp[i]=s[h1++];\n\n\t\t}\n\n\t\telse\n\n\t\t{\n\n\t\t\ttemp[i]=s[h2++];\n\n\t\t}\n\n\t}\n\n\tfor(int i=l;i<=r;i++)\n\n\t\ts[i]=temp[i];\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%lld\",&n,&mean);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tscanf(\"%lld\",&a[i]);\n\n\t\ta[i]-=mean;\n\n\t\ts[i]=s[i-1]+a[i];\n\n\t}\n\n\tmerge(1,n);\n\n\tfor(int i=1;i<=n;i++)\n\n\t\tif(s[i]>=0) ans++;\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n}"
    },
    {
        "id": "152",
        "source_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} ",
        "optimized_code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define mod 1000000007\n\n#define MOD(x) ((x)%mod)\n\nint n;\n\nlong long mean;\n\nlong long a[200005]; \n\nlong long s[200005]; \n\nlong long temp[200005]; \n\nlong long ans;\n\nvoid merge(int l,int r)\n\n{\n\n\tint m=(l+r)/2;\n\n\tint h1=l,h2=m+1;\n\n\tint t1=m,t2=r;\n\n\tif(h1<t1) merge(h1,t1);\n\n\tif(h2<t2) merge(h2,t2);\n\n\tfor(int i=l;i<=r;i++)\t\n\n\t{\n\n\t\tif(h1<=t1&&h2<=t2)\n\n\t\t{\n\n\t\t\tif(s[h1]>s[h2])\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h1++];\n\n\t\t\t}\n\n\t\t\telse\n\n\t\t\t{\n\n\t\t\t\ttemp[i]=s[h2++];\n\n\t\t\t\tans+=t1-h1+1;\n\n\t\t\t}\n\n\t\t}\n\n\t\telse if(h1<=t1)\n\n\t\t{\n\n\t\t\ttemp[i]=s[h1++];\n\n\t\t}\n\n\t\telse\n\n\t\t{\n\n\t\t\ttemp[i]=s[h2++];\n\n\t\t}\n\n\t}\n\n\tfor(int i=l;i<=r;i++)\n\n\t\ts[i]=temp[i];\n\n}\n\nint main()\n\n{\n\n\tscanf(\"%d%lld\",&n,&mean);\n\n\tfor(int i=1;i<=n;i++)\n\n\t{\n\n\t\tscanf(\"%lld\",&a[i]);\n\n\t\ta[i]-=mean;\n\n\t\ts[i]=s[i-1]+a[i];\n\n\t}\n\n\tmerge(1,n);\n\n\tfor(int i=1;i<=n;i++)\n\n\t\tif(s[i]>=0) ans++;\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n}"
    },
    {
        "id": "153",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\n\n\nstruct SetStk {\n\n  vector<vector<LL>> stk;\n\n  void add(LL x) {\n\n    stk.push_back({x});\n\n    while (stk.size() > 1) {\n\n      int n = stk.size();\n\n      if (stk[n - 1].size() == stk[n - 2].size()) {\n\n        vector<LL> ans;\n\n        merge(stk[n - 2].begin(), stk[n - 2].end(), \n\n              stk[n - 1].begin(), stk[n - 1].end(), back_inserter(ans));\n\n        stk.pop_back();\n\n        stk.back() = ans;\n\n      }\n\n      else break;\n\n    }\n\n  }\n\n  int rank(LL a) {\n\n    LL ans = 0;\n\n    for (int i = 0; i < stk.size(); ++i) {\n\n      auto &A = stk[i];\n\n      ans += upper_bound(A.begin(), A.end(), a) - stk[i].begin();\n\n    }\n\n    return ans;\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false); cin.tie(0);\n\n  int n, k; cin >> n >> k;\n\n  vector<LL> A(n + 1);\n\n  for (int i = 0; i < n; ++i) cin >> A[i + 1], A[i + 1] -= k, A[i + 1] += A[i];\n\n  SetStk ds;\n\n  LL ans = 0;\n\n  ds.add(A[0]);\n\n  for (int i = 1; i <= n; ++i) {\n\n    ans += ds.rank(A[i]);\n\n    ds.add(A[i]);\n\n  }\n\n  cout << ans << '\\n';\n\n}  \n"
    },
    {
        "id": "154",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\n\n\nstruct SetStk {\n\n  vector<vector<LL>> stk;\n\n  void add(LL x) {\n\n    stk.push_back({x});\n\n    while (stk.size() > 1) {\n\n      int n = stk.size();\n\n      if (stk[n - 1].size() == stk[n - 2].size()) {\n\n        vector<LL> ans;\n\n        merge(stk[n - 2].begin(), stk[n - 2].end(), \n\n              stk[n - 1].begin(), stk[n - 1].end(), back_inserter(ans));\n\n        stk.pop_back();\n\n        stk.back() = ans;\n\n      }\n\n      else break;\n\n    }\n\n  }\n\n  int rank(LL a) {\n\n    LL ans = 0;\n\n    for (int i = 0; i < stk.size(); ++i) {\n\n      auto &A = stk[i];\n\n      ans += upper_bound(A.begin(), A.end(), a) - stk[i].begin();\n\n    }\n\n    return ans;\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false); cin.tie(0);\n\n  int n, k; cin >> n >> k;\n\n  vector<LL> A(n + 1);\n\n  for (int i = 0; i < n; ++i) cin >> A[i + 1], A[i + 1] -= k, A[i + 1] += A[i];\n\n  SetStk ds;\n\n  LL ans = 0;\n\n  ds.add(A[0]);\n\n  for (int i = 1; i <= n; ++i) {\n\n    ans += ds.rank(A[i]);\n\n    ds.add(A[i]);\n\n  }\n\n  cout << ans << '\\n';\n\n}  \n"
    },
    {
        "id": "155",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\n\n\nstruct SetStk {\n\n  vector<vector<LL>> stk;\n\n  void add(LL x) {\n\n    stk.push_back({x});\n\n    while (stk.size() > 1) {\n\n      int n = stk.size();\n\n      if (stk[n - 1].size() == stk[n - 2].size()) {\n\n        vector<LL> ans;\n\n        merge(stk[n - 2].begin(), stk[n - 2].end(), \n\n              stk[n - 1].begin(), stk[n - 1].end(), back_inserter(ans));\n\n        stk.pop_back();\n\n        stk.back() = ans;\n\n      }\n\n      else break;\n\n    }\n\n  }\n\n  int rank(LL a) {\n\n    LL ans = 0;\n\n    for (int i = 0; i < stk.size(); ++i) {\n\n      auto &A = stk[i];\n\n      ans += upper_bound(A.begin(), A.end(), a) - stk[i].begin();\n\n    }\n\n    return ans;\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false); cin.tie(0);\n\n  int n, k; cin >> n >> k;\n\n  vector<LL> A(n + 1);\n\n  for (int i = 0; i < n; ++i) cin >> A[i + 1], A[i + 1] -= k, A[i + 1] += A[i];\n\n  SetStk ds;\n\n  LL ans = 0;\n\n  ds.add(A[0]);\n\n  for (int i = 1; i <= n; ++i) {\n\n    ans += ds.rank(A[i]);\n\n    ds.add(A[i]);\n\n  }\n\n  cout << ans << '\\n';\n\n}  \n"
    },
    {
        "id": "156",
        "source_code": "#include <iostream>\n\n#include <cstring>\n\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 2e5 + 10;\n\nint t[N];\n\nint lowbit(int x){return x&(-x);}\n\nvoid add(int x){\n\n    while(x<N){\n\n        t[x]++;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\nlong long sum(int x){\n\n    long long ans=0;\n\n    while(x){\n\n        ans+=t[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\nstruct node{int id;long long val;};\n\nnode arr[N];\n\nbool comp(node p1,node p2){\n\n    return p1.val<p2.val;\n\n}\n\nint num[N];\n\nint main(){\n\n    std::ios::sync_with_stdio(false);\n\n    int n,k;\n\n    while(cin>>n>>k){\n\n        memset(t,0,sizeof(t));\n\n        long long a;\n\n        arr[0].id = 0;\n\n        arr[0].val = 0;\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].id = i;\n\n            cin>>a;\n\n            arr[i].val = a-k;\n\n        }\n\n        for(int i=1;i<=n;i++){\n\n            arr[i].val += arr[i-1].val;\n\n        }\n\n        sort(arr,arr+n+1,comp);\n\n        for(int i=0;i<=n;i++){\n\n            if(i>0&&arr[i].val==arr[i-1].val)num[arr[i].id] = num[arr[i-1].id];\n\n            else num[arr[i].id] = i+1;\n\n        }\n\n        long long ans = 0;\n\n        for(int i=0;i<=n;i++){\n\n            int x = num[i];\n\n            ans += sum(x);\n\n            add(x);\n\n        }\n\n        cout<<ans<<endl;\n\n    }\n\n}\n",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\n\n\nstruct SetStk {\n\n  vector<vector<LL>> stk;\n\n  void add(LL x) {\n\n    stk.push_back({x});\n\n    while (stk.size() > 1) {\n\n      int n = stk.size();\n\n      if (stk[n - 1].size() == stk[n - 2].size()) {\n\n        vector<LL> ans;\n\n        merge(stk[n - 2].begin(), stk[n - 2].end(), \n\n              stk[n - 1].begin(), stk[n - 1].end(), back_inserter(ans));\n\n        stk.pop_back();\n\n        stk.back() = ans;\n\n      }\n\n      else break;\n\n    }\n\n  }\n\n  int rank(LL a) {\n\n    LL ans = 0;\n\n    for (int i = 0; i < stk.size(); ++i) {\n\n      auto &A = stk[i];\n\n      ans += upper_bound(A.begin(), A.end(), a) - stk[i].begin();\n\n    }\n\n    return ans;\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false); cin.tie(0);\n\n  int n, k; cin >> n >> k;\n\n  vector<LL> A(n + 1);\n\n  for (int i = 0; i < n; ++i) cin >> A[i + 1], A[i + 1] -= k, A[i + 1] += A[i];\n\n  SetStk ds;\n\n  LL ans = 0;\n\n  ds.add(A[0]);\n\n  for (int i = 1; i <= n; ++i) {\n\n    ans += ds.rank(A[i]);\n\n    ds.add(A[i]);\n\n  }\n\n  cout << ans << '\\n';\n\n}  \n"
    },
    {
        "id": "157",
        "source_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} ",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\n\n\nstruct SetStk {\n\n  vector<vector<LL>> stk;\n\n  void add(LL x) {\n\n    stk.push_back({x});\n\n    while (stk.size() > 1) {\n\n      int n = stk.size();\n\n      if (stk[n - 1].size() == stk[n - 2].size()) {\n\n        vector<LL> ans;\n\n        merge(stk[n - 2].begin(), stk[n - 2].end(), \n\n              stk[n - 1].begin(), stk[n - 1].end(), back_inserter(ans));\n\n        stk.pop_back();\n\n        stk.back() = ans;\n\n      }\n\n      else break;\n\n    }\n\n  }\n\n  int rank(LL a) {\n\n    LL ans = 0;\n\n    for (int i = 0; i < stk.size(); ++i) {\n\n      auto &A = stk[i];\n\n      ans += upper_bound(A.begin(), A.end(), a) - stk[i].begin();\n\n    }\n\n    return ans;\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false); cin.tie(0);\n\n  int n, k; cin >> n >> k;\n\n  vector<LL> A(n + 1);\n\n  for (int i = 0; i < n; ++i) cin >> A[i + 1], A[i + 1] -= k, A[i + 1] += A[i];\n\n  SetStk ds;\n\n  LL ans = 0;\n\n  ds.add(A[0]);\n\n  for (int i = 1; i <= n; ++i) {\n\n    ans += ds.rank(A[i]);\n\n    ds.add(A[i]);\n\n  }\n\n  cout << ans << '\\n';\n\n}  \n"
    },
    {
        "id": "158",
        "source_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} ",
        "optimized_code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long LL;\n\n\n\nstruct SetStk {\n\n  vector<vector<LL>> stk;\n\n  void add(LL x) {\n\n    stk.push_back({x});\n\n    while (stk.size() > 1) {\n\n      int n = stk.size();\n\n      if (stk[n - 1].size() == stk[n - 2].size()) {\n\n        vector<LL> ans;\n\n        merge(stk[n - 2].begin(), stk[n - 2].end(), \n\n              stk[n - 1].begin(), stk[n - 1].end(), back_inserter(ans));\n\n        stk.pop_back();\n\n        stk.back() = ans;\n\n      }\n\n      else break;\n\n    }\n\n  }\n\n  int rank(LL a) {\n\n    LL ans = 0;\n\n    for (int i = 0; i < stk.size(); ++i) {\n\n      auto &A = stk[i];\n\n      ans += upper_bound(A.begin(), A.end(), a) - stk[i].begin();\n\n    }\n\n    return ans;\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false); cin.tie(0);\n\n  int n, k; cin >> n >> k;\n\n  vector<LL> A(n + 1);\n\n  for (int i = 0; i < n; ++i) cin >> A[i + 1], A[i + 1] -= k, A[i + 1] += A[i];\n\n  SetStk ds;\n\n  LL ans = 0;\n\n  ds.add(A[0]);\n\n  for (int i = 1; i <= n; ++i) {\n\n    ans += ds.rank(A[i]);\n\n    ds.add(A[i]);\n\n  }\n\n  cout << ans << '\\n';\n\n}  \n"
    },
    {
        "id": "177",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n \n\nconst int MAXN=200005;\n\n \n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n \n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "178",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n \n\nconst int MAXN=200005;\n\n \n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n \n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "179",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include<iostream>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n \n\nconst int MAXN=200005;\n\n \n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n \n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "180",
        "source_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} ",
        "optimized_code": "#include<iostream>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n \n\nconst int MAXN=200005;\n\n \n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n \n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "181",
        "source_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} ",
        "optimized_code": "#include<iostream>\n\n#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<map>\n\nusing namespace std;\n\n \n\nconst int MAXN=200005;\n\n \n\nint n,k;\n\nlong long a[MAXN],s[MAXN],b[MAXN];\n\nmap<long long,int> mp;\n\n \n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "182",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<string.h>\n\n#include<cstdio>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX=200000+10; \n\nint n,k;\n\nll a[MAX];\n\nll b[MAX];\n\nll s[MAX];\n\nmap<ll, int>mp;\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "183",
        "source_code": "#include<cstdio>\n\n#include<cstring>\n\n#include<algorithm>\n\nusing std::scanf;\n\nusing std::printf;\n\nusing std::memset;\n\nstruct node\n\n{\n\n  long long data;\n\n  int id;\n\n  bool operator< (const node& o) const\n\n  { return this->data < o.data;}\n\n};\n\n\n\ntypedef long long llong;\n\nconst int maxn = 200010;\n\n\n\nllong treeset[maxn];\n\nllong end[maxn];\n\nnode rec[maxn];\n\nllong n;\n\nllong k;\n\n\n\ninline int lowbit(int x)\n\n{ return x&(-x);}\n\n\n\nvoid add(int x, llong d)\n\n{\n\n  while(x <= n)\n\n  {\n\n    treeset[x] += d;\n\n    x += lowbit(x);\n\n  }\n\n}\n\n\n\nllong sum(int x)\n\n{\n\n  llong ans = 0;\n\n  while(x)\n\n  {\n\n    ans += treeset[x];\n\n    x -= lowbit(x);\n\n  }\n\n  return ans;\n\n}\n\n\n\nint main()\n\n{\n\n  llong tmp;\n\n  llong ans = 0;\n\n  scanf(\"%lld%lld\", &n, &k);\n\n  memset(rec, 0, sizeof(rec));\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    scanf(\"%lld\", &tmp);\n\n    rec[i].data = rec[i-1].data +tmp-k;\n\n    rec[i].id = i;\n\n  }\n\n  std::sort(rec+1, rec+1+n);\n\n  end[rec[1].id] = 1;\n\n  for(int i = 2; i <= n; ++i)\n\n  {\n\n    if(rec[i].data != rec[i-1].data)\n\n    { end[rec[i].id] = i;}\n\n    else\n\n    { end[rec[i].id] = end[rec[i-1].id];}\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    add(end[i], 1);\n\n    ans += sum(n) - sum(end[i]);\n\n  }\n\n  for(int i = 1; i <= n; ++i)\n\n  {\n\n    if(rec[i].data < 0)\n\n    { ++ans;}\n\n  }\n\n  ans = n*(n+1)/2 - ans;\n\n  printf(\"%lld\\n\", ans);\n\n}\n",
        "optimized_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<string.h>\n\n#include<cstdio>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX=200000+10; \n\nint n,k;\n\nll a[MAX];\n\nll b[MAX];\n\nll s[MAX];\n\nmap<ll, int>mp;\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "184",
        "source_code": "#include<iostream>\n\n#include<cstring>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<cstdlib>\n\n#include<cstdio>\n\n#include<set>\n\n#include<queue>\n\n#include<map>\n\nusing namespace std;\n\nlong long s[200005],ts[200005],in[200005];\n\nvoid p(int pos)\n\n{\n\n\twhile(pos<=200003)\n\n\t{\n\n\t\tin[pos]+=1;\n\n\t\tpos+=pos&(-pos);\n\n\t}\n\n\t\n\n}\n\nlong long sum(int n)\n\n{\n\n\tlong long sum=0;\n\n\twhile(n>0)\n\n\t{\n\n\t\tsum+=in[n];\n\n\t\tn-=n&(-n);\n\n\t}\n\n\treturn sum;\n\n}\n\nint main()\n\n{\n\n\n\n\tint n,k,x;\n\n\tlong long ans=0;\n\n\tmemset(s,0,sizeof(s));\n\n\tscanf(\"%d%d\",&n,&k);\n\n\tfor(int i=1;i<=n;i++)  \t\n\n\t{\n\n\t\tscanf(\"%d\",&x),s[i]=x-k+s[i-1],ts[i]=s[i];\n\n\t\tif(s[i]>=0)\n\n\t\tans++;\n\n\t\t}\n\n\tsort(ts+1,ts+1+n);\n\n\tint size=unique(ts+1,ts+1+n)-ts+1;\n\n\tfor(int i=1;i<=n;i++)   s[i]=lower_bound(ts+1,ts+1+size,s[i])-ts;\n\n\tmemset(in,0,sizeof(in));\n\n\tfor(int i=1;i<=n;i++)\n\n\t\t{\n\n\t\t\tans+=sum(s[i]);\n\n\t\t\tp(s[i]);\n\n\t\t}\n\n\t\n\n\tprintf(\"%lld\\n\",ans);\n\n\treturn 0;\n\n } ",
        "optimized_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<string.h>\n\n#include<cstdio>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX=200000+10; \n\nint n,k;\n\nll a[MAX];\n\nll b[MAX];\n\nll s[MAX];\n\nmap<ll, int>mp;\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "185",
        "source_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} ",
        "optimized_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<string.h>\n\n#include<cstdio>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX=200000+10; \n\nint n,k;\n\nll a[MAX];\n\nll b[MAX];\n\nll s[MAX];\n\nmap<ll, int>mp;\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "186",
        "source_code": "#include <algorithm>\n\n#include <iostream>\n\n#include <cstring>\n\n#include <cstdio>\n\n#include <cmath>\n\n#include <map>\n\nusing namespace std;\n\n\n\nint n;\n\nlong long m;\n\nlong long sum[300000];\n\nlong long c[300000];\n\nlong long d[300000];\n\n\n\nint lowbit(int x){\n\n\treturn x & -x;\n\n}\n\n\n\nvoid update(int x){\n\n\twhile (x<=n+10){\n\n\t\tc[x]+=1;\n\n\t\tx+=lowbit(x);\n\n\t}\n\n}\n\n\n\nint query(int x){\n\n\tint s=0;\n\n\twhile (x>0){\n\n\t\ts+=c[x];\n\n\t\tx-=lowbit(x);\n\n\t}\n\n\treturn s;\n\n}\n\n\n\nstruct o_O{\n\n\tlong long b;\n\n\tint d;\n\n}p[600000];\n\n\n\nbool cmp(o_O a,o_O b){\n\n\treturn a.b<b.b;\n\n}\n\n\n\nint main(){\n\n\tscanf(\"%d%lld\",&n,&m);\n\n\tlong long w;\n\n\tsum[0]=0;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tscanf(\"%lld\",&w);\n\n\t\tsum[i]=sum[i-1]+w;\n\n\t}\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tsum[i]=sum[i]-m*i;\n\n\t\tp[i].b=sum[i];\n\n\t\tp[i].d=i;\n\n\t}\n\n\tsort(p,p+n+1,cmp);\n\n\tsum[p[0].d]=1;\n\n\tint n1=1;\n\n\tfor (int i=1;i<=n;i++){\n\n\t\tif (p[i].b==p[i-1].b){\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}else {\n\n\t\t\tn1++;\n\n\t\t\tsum[p[i].d]=n1;\n\n\t\t}\n\n\t}\n\n\tmemset(c,0,sizeof(c));\n\n\tlong long ans=0;\n\n\tfor (int i=0;i<=n;i++){\n\n\t\tans+=query(sum[i]);\n\n\t\tupdate(sum[i]); \n\n\t}\n\n\tprintf(\"%lld\",ans);\n\n\treturn 0;\n\n} ",
        "optimized_code": "#include<iostream>\n\n#include<algorithm>\n\n#include<cmath>\n\n#include<string.h>\n\n#include<cstdio>\n\n#include<map>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAX=200000+10; \n\nint n,k;\n\nll a[MAX];\n\nll b[MAX];\n\nll s[MAX];\n\nmap<ll, int>mp;\n\nint lowbit(int x)\n\n{\n\n    return (x&-x);\n\n}\n\n \n\nvoid modify(int x,int num)\n\n{\n\n    while(x<=n+1){\n\n        a[x]+=(long long)num;\n\n        x+=lowbit(x);\n\n    }\n\n}\n\n \n\nlong long sum(int x)\n\n{\n\n    long long ans=0;\n\n    while(x>0){\n\n        ans+=a[x];\n\n        x-=lowbit(x);\n\n    }\n\n    return ans;\n\n}\n\n \n\nint main()\n\n{\n\n    scanf(\"%d %d\",&n,&k);\n\n    s[0]=0;b[0]=0;\n\n    for(int i=1;i<=n;i++){\n\n        int x;\n\n        scanf(\"%d\",&x);\n\n        s[i]=s[i-1]+(long long)(x-k);\n\n        b[i]=s[i];\n\n    }\n\n    sort(b,b+1+n);\n\n    int tot=0;\n\n    for(int i=0;i<=n;i++)\n\n        if(!mp.count(b[i]))mp[b[i]]=++tot; \n\n    long long cnt=0;\n\n    memset(a,0,sizeof(a));\n\n    for(int i=0;i<=n;i++){\n\n        cnt+=sum(mp[s[i]]);\n\n        modify(mp[s[i]],1);\n\n    }\n\n    printf(\"%lld\\n\",cnt);\n\n    return 0;\n\n} "
    },
    {
        "id": "194",
        "source_code": "/**\n\n *    author  : \ud835\udc8c\ud835\udc9a\ud835\udc90\ud835\udc8e\ud835\udc96\ud835\udc8c\ud835\udc9a\ud835\udc90\ud835\udc8e\ud835\udc96\ud835\udc91\ud835\udc96\ud835\udc93\ud835\udc8a\ud835\udc8f\n\n *    created : 2019-12-26 02:39:58\n\n**/\n\n\n\n#include <iostream>\n\n#include <deque>\n\n#include <map>\n\n#include <queue>\n\n#include <set>\n\n#include <stack>\n\n#include <string>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <cmath>\n\n#include <complex>\n\n#include <numeric>\n\n#include <bitset>\n\n#include <cassert>\n\n#include <cctype>\n\n#include <iomanip>\n\n#include <random>\n\n#include <utility>\n\n#include <chrono>\n\n\n\nusing namespace std;\n\n\n\nusing int64 = long long;\n\ntemplate<class T> ostream& operator<<(ostream& os, vector<T>& _) { os << '{'; for (T& x : _) { os << x; if (&x != &_.back()) os << ','; } os << '}'; return os; }\n\ntemplate<class T, class U> ostream& operator<<(ostream& os, pair<T, U>& p) { return os << '{' << p.first << \" \" << p.second << '}'; }\n\n\n\n#ifdef LOCAL\n\n#define debug(_) cerr << #_ << \": \" << (_) << '\\n'\n\n#else\n\n#define debug(_) 1728\n\n#endif\n\n\n\ntemplate <class T>\n\nclass CoodinateCompression {\n\n public:\n\n  CoodinateCompression(const std::vector<T>& vec) : vec_(vec) {\n\n    result_.resize(vec_.size());\n\n    Compress();\n\n  }\n\n  struct state {\n\n    T before;\n\n    int after;\n\n  };\n\n  state operator[](int pos) const { return result_[pos]; }\n\n\n\n private:\n\n  std::vector<T> vec_;\n\n  std::vector<state> result_;\n\n  void Compress() {\n\n    std::vector<T> t = vec_;\n\n    std::sort(t.begin(), t.end());\n\n    t.erase(std::unique(t.begin(), t.end()), t.end());\n\n    for (size_t i = 0; i < vec_.size(); ++i) {\n\n      result_[i] = {vec_[i], static_cast<int>(std::distance(\n\n                                t.begin(),\n\n                                std::lower_bound(t.begin(), t.end(), vec_[i])))};\n\n    }\n\n  }\n\n};\n\n\n\ntemplate <class Monoid, class Function>\n\nclass SegmentTree {\n\n public:\n\n  SegmentTree(const std::vector<Monoid>& data, Monoid identity_element,\n\n              Function function)\n\n      : identity_element_(identity_element), data_(data), function_(function) {\n\n    Build();\n\n  }\n\n  void Update(size_t position, Monoid new_value) {\n\n    position += n_;\n\n    node_[position] = new_value;\n\n    while (position > 0) {\n\n      position >>= 1;\n\n      node_[position] = function_(node_[2 * position], node_[2 * position + 1]);\n\n    }\n\n  }\n\n\n\n  Monoid Query(int left, int right) {\n\n    Monoid vl = identity_element_, vr = identity_element_;\n\n    for (left += n_, right += n_; left < right; left >>= 1, right >>= 1) {\n\n      if (left & 1) vl = function_(vl, node_[left++]);\n\n      if (right & 1) vr = function_(node_[--right], vr);\n\n    }\n\n    return function_(vl, vr);\n\n  }\n\n\n\n  Monoid operator[](size_t position) const { return node_[n_ + position]; }\n\n\n\n private:\n\n  size_t n_;\n\n  Monoid identity_element_;\n\n  std::vector<Monoid> data_;\n\n  std::vector<Monoid> node_;\n\n  Function function_;\n\n  void Build() {\n\n    size_t SIZE = data_.size();\n\n    n_ = 1;\n\n    while (n_ < SIZE) {\n\n      n_ <<= 1;\n\n    }\n\n    node_.assign(2 * n_, identity_element_);\n\n    for (size_t i = 0; i < SIZE; ++i) {\n\n      node_[i + n_] = data_[i];\n\n    }\n\n    for (size_t i = n_ - 1; i > 0; --i) {\n\n      node_[i] = function_(node_[2 * i], node_[2 * i + 1]);\n\n    }\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n\n  cin.tie(nullptr);\n\n\n\n  int n; cin >> n;\n\n  int64 k; cin >> k;\n\n  vector<int64> a(n);\n\n  for (int i = 0; i < n; ++i) {\n\n    cin >> a[i];\n\n    a[i] -= k;\n\n  }\n\n\n\n  vector<int64> sum(n + 1, 0LL);\n\n  for (int i = 0; i < n; ++i) {\n\n    sum[i + 1] = sum[i] + a[i];\n\n  }\n\n\n\n  auto f = [](int x, int y){ return x + y; };\n\n  SegmentTree<int, decltype(f)> seg(vector<int>(n + 1, 0), 0, f);\n\n\n\n  CoodinateCompression<int64> cc(sum);\n\n  seg.Update(cc[0].after, 1);\n\n\n\n  int64 ans = 0;\n\n\n\n  for (int i = 1; i < n + 1; ++i) {\n\n    ans += static_cast<int64>(seg.Query(0, cc[i].after + 1));\n\n    seg.Update(cc[i].after, seg[cc[i].after] + 1);\n\n  }\n\n\n\n  cout << ans << endl;\n\n\n\n  return 0;\n\n}",
        "optimized_code": "\n\n#include <cstdio>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <cctype>\n\n#include <utility>\n\n\n\nusing namespace std;\n\n\n\nusing int64 = long long;\n\n\n\ntemplate <class T>\n\nclass CoodinateCompression {\n\n public:\n\n  CoodinateCompression(const std::vector<T>& vec) : vec_(vec) {\n\n    result_.resize(vec_.size());\n\n    Compress();\n\n  }\n\n  struct state {\n\n    T before;\n\n    int after;\n\n  };\n\n  state operator[](int pos) const { return result_[pos]; }\n\n\n\n private:\n\n  std::vector<T> vec_;\n\n  std::vector<state> result_;\n\n  void Compress() {\n\n    std::vector<T> t = vec_;\n\n    std::sort(t.begin(), t.end());\n\n    t.erase(std::unique(t.begin(), t.end()), t.end());\n\n    for (size_t i = 0; i < vec_.size(); ++i) {\n\n      result_[i] = {vec_[i], static_cast<int>(std::distance(\n\n                                t.begin(),\n\n                                std::lower_bound(t.begin(), t.end(), vec_[i])))};\n\n    }\n\n  }\n\n};\n\n\n\ntemplate <class Monoid, class Function>\n\nclass SegmentTree {\n\n public:\n\n  SegmentTree(const std::vector<Monoid>& data, Monoid identity_element,\n\n              Function function)\n\n      : identity_element_(identity_element), data_(data), function_(function) {\n\n    Build();\n\n  }\n\n  void Update(size_t position, Monoid new_value) {\n\n    position += n_;\n\n    node_[position] = new_value;\n\n    while (position > 0) {\n\n      position >>= 1;\n\n      node_[position] = function_(node_[2 * position], node_[2 * position + 1]);\n\n    }\n\n  }\n\n\n\n  Monoid Query(int left, int right) {\n\n    Monoid vl = identity_element_, vr = identity_element_;\n\n    for (left += n_, right += n_; left < right; left >>= 1, right >>= 1) {\n\n      if (left & 1) vl = function_(vl, node_[left++]);\n\n      if (right & 1) vr = function_(node_[--right], vr);\n\n    }\n\n    return function_(vl, vr);\n\n  }\n\n\n\n  Monoid operator[](size_t position) const { return node_[n_ + position]; }\n\n\n\n private:\n\n  size_t n_;\n\n  Monoid identity_element_;\n\n  std::vector<Monoid> data_;\n\n  std::vector<Monoid> node_;\n\n  Function function_;\n\n  void Build() {\n\n    size_t SIZE = data_.size();\n\n    n_ = 1;\n\n    while (n_ < SIZE) {\n\n      n_ <<= 1;\n\n    }\n\n    node_.assign(2 * n_, identity_element_);\n\n    for (size_t i = 0; i < SIZE; ++i) {\n\n      node_[i + n_] = data_[i];\n\n    }\n\n    for (size_t i = n_ - 1; i > 0; --i) {\n\n      node_[i] = function_(node_[2 * i], node_[2 * i + 1]);\n\n    }\n\n  }\n\n};\n\n\n\ntemplate<class T> inline void fastin(T &num) {\n\n  T c;\n\n  num = 0;\n\n  c = getchar_unlocked();\n\n  for (; (c > 47 && c < 58); c = getchar_unlocked()) num = (num << 3) + (num << 1) + c - 48;\n\n}\n\n\n\nint main() {\n\n  int n; fastin(n);\n\n  int64 k; fastin(k);\n\n  vector<int64> a(n);\n\n  for (int i = 0; i < n; ++i) {\n\n    fastin(a[i]);\n\n    a[i] -= k;\n\n  }\n\n\n\n  vector<int64> sum(n + 1, 0LL);\n\n  for (int i = 0; i < n; ++i) {\n\n    sum[i + 1] = sum[i] + a[i];\n\n  }\n\n\n\n  auto f = [](int x, int y){ return x + y; };\n\n  SegmentTree<int, decltype(f)> seg(vector<int>(n + 1, 0), 0, f);\n\n\n\n  CoodinateCompression<int64> cc(sum);\n\n  seg.Update(cc[0].after, 1);\n\n\n\n  int64 ans = 0;\n\n\n\n  for (int i = 1; i < n + 1; ++i) {\n\n    ans += static_cast<int64>(seg.Query(0, cc[i].after + 1));\n\n    seg.Update(cc[i].after, seg[cc[i].after] + 1);\n\n  }\n\n\n\n  printf(\"%lld\\n\", ans);\n\n\n\n  return 0;\n\n}"
    },
    {
        "id": "195",
        "source_code": "/**\n\n *    author  : \ud835\udc8c\ud835\udc9a\ud835\udc90\ud835\udc8e\ud835\udc96\ud835\udc8c\ud835\udc9a\ud835\udc90\ud835\udc8e\ud835\udc96\ud835\udc91\ud835\udc96\ud835\udc93\ud835\udc8a\ud835\udc8f\n\n *    created : 2019-12-26 02:39:58\n\n**/\n\n\n\n#include <iostream>\n\n#include <deque>\n\n#include <map>\n\n#include <queue>\n\n#include <set>\n\n#include <stack>\n\n#include <string>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <cmath>\n\n#include <complex>\n\n#include <numeric>\n\n#include <bitset>\n\n#include <cassert>\n\n#include <cctype>\n\n#include <iomanip>\n\n#include <random>\n\n#include <utility>\n\n#include <chrono>\n\n\n\nusing namespace std;\n\n\n\nusing int64 = long long;\n\ntemplate<class T> ostream& operator<<(ostream& os, vector<T>& _) { os << '{'; for (T& x : _) { os << x; if (&x != &_.back()) os << ','; } os << '}'; return os; }\n\ntemplate<class T, class U> ostream& operator<<(ostream& os, pair<T, U>& p) { return os << '{' << p.first << \" \" << p.second << '}'; }\n\n\n\n#ifdef LOCAL\n\n#define debug(_) cerr << #_ << \": \" << (_) << '\\n'\n\n#else\n\n#define debug(_) 1728\n\n#endif\n\n\n\ntemplate <class T>\n\nclass CoodinateCompression {\n\n public:\n\n  CoodinateCompression(const std::vector<T>& vec) : vec_(vec) {\n\n    result_.resize(vec_.size());\n\n    Compress();\n\n  }\n\n  struct state {\n\n    T before;\n\n    int after;\n\n  };\n\n  state operator[](int pos) const { return result_[pos]; }\n\n\n\n private:\n\n  std::vector<T> vec_;\n\n  std::vector<state> result_;\n\n  void Compress() {\n\n    std::vector<T> t = vec_;\n\n    std::sort(t.begin(), t.end());\n\n    t.erase(std::unique(t.begin(), t.end()), t.end());\n\n    for (size_t i = 0; i < vec_.size(); ++i) {\n\n      result_[i] = {vec_[i], static_cast<int>(std::distance(\n\n                                t.begin(),\n\n                                std::lower_bound(t.begin(), t.end(), vec_[i])))};\n\n    }\n\n  }\n\n};\n\n\n\ntemplate <class Monoid, class Function>\n\nclass SegmentTree {\n\n public:\n\n  SegmentTree(const std::vector<Monoid>& data, Monoid identity_element,\n\n              Function function)\n\n      : identity_element_(identity_element), data_(data), function_(function) {\n\n    Build();\n\n  }\n\n  void Update(size_t position, Monoid new_value) {\n\n    position += n_;\n\n    node_[position] = new_value;\n\n    while (position > 0) {\n\n      position >>= 1;\n\n      node_[position] = function_(node_[2 * position], node_[2 * position + 1]);\n\n    }\n\n  }\n\n\n\n  Monoid Query(int left, int right) {\n\n    Monoid vl = identity_element_, vr = identity_element_;\n\n    for (left += n_, right += n_; left < right; left >>= 1, right >>= 1) {\n\n      if (left & 1) vl = function_(vl, node_[left++]);\n\n      if (right & 1) vr = function_(node_[--right], vr);\n\n    }\n\n    return function_(vl, vr);\n\n  }\n\n\n\n  Monoid operator[](size_t position) const { return node_[n_ + position]; }\n\n\n\n private:\n\n  size_t n_;\n\n  Monoid identity_element_;\n\n  std::vector<Monoid> data_;\n\n  std::vector<Monoid> node_;\n\n  Function function_;\n\n  void Build() {\n\n    size_t SIZE = data_.size();\n\n    n_ = 1;\n\n    while (n_ < SIZE) {\n\n      n_ <<= 1;\n\n    }\n\n    node_.assign(2 * n_, identity_element_);\n\n    for (size_t i = 0; i < SIZE; ++i) {\n\n      node_[i + n_] = data_[i];\n\n    }\n\n    for (size_t i = n_ - 1; i > 0; --i) {\n\n      node_[i] = function_(node_[2 * i], node_[2 * i + 1]);\n\n    }\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n\n  cin.tie(nullptr);\n\n\n\n  int n; cin >> n;\n\n  int64 k; cin >> k;\n\n  vector<int64> a(n);\n\n  for (int i = 0; i < n; ++i) {\n\n    cin >> a[i];\n\n    a[i] -= k;\n\n  }\n\n\n\n  vector<int64> sum(n + 1, 0LL);\n\n  for (int i = 0; i < n; ++i) {\n\n    sum[i + 1] = sum[i] + a[i];\n\n  }\n\n\n\n  auto f = [](int x, int y){ return x + y; };\n\n  SegmentTree<int, decltype(f)> seg(vector<int>(n + 1, 0), 0, f);\n\n\n\n  CoodinateCompression<int64> cc(sum);\n\n  seg.Update(cc[0].after, 1);\n\n\n\n  int64 ans = 0;\n\n\n\n  for (int i = 1; i < n + 1; ++i) {\n\n    ans += static_cast<int64>(seg.Query(0, cc[i].after + 1));\n\n    seg.Update(cc[i].after, seg[cc[i].after] + 1);\n\n  }\n\n\n\n  cout << ans << endl;\n\n\n\n  return 0;\n\n}",
        "optimized_code": "\n\n\n\n#include <cstdio>\n\n#include <map>\n\n#include <string>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <numeric>\n\n#include <cctype>\n\n#include <iomanip>\n\n#include <utility>\n\n\n\nusing namespace std;\n\n\n\nusing int64 = long long;\n\n\n\ntemplate <class T>\n\nclass CoodinateCompression {\n\n public:\n\n  CoodinateCompression(const std::vector<T>& vec) : vec_(vec) {\n\n    result_.resize(vec_.size());\n\n    Compress();\n\n  }\n\n  struct state {\n\n    T before;\n\n    int after;\n\n  };\n\n  state operator[](int pos) const { return result_[pos]; }\n\n\n\n private:\n\n  std::vector<T> vec_;\n\n  std::vector<state> result_;\n\n  void Compress() {\n\n    std::vector<T> t = vec_;\n\n    std::sort(t.begin(), t.end());\n\n    t.erase(std::unique(t.begin(), t.end()), t.end());\n\n    for (size_t i = 0; i < vec_.size(); ++i) {\n\n      result_[i] = {vec_[i], static_cast<int>(std::distance(\n\n                                t.begin(),\n\n                                std::lower_bound(t.begin(), t.end(), vec_[i])))};\n\n    }\n\n  }\n\n};\n\n\n\ntemplate <class T>\n\nclass FenwickTree {\n\n public:\n\n  FenwickTree(const std::vector<T>& data) : n_(data.size() + 1), data_(data) {\n\n    Initialize();\n\n  }\n\n  void Add(size_t pos, T value) {\n\n    ++pos;\n\n    while (pos < n_) {\n\n      node_[pos] += value;\n\n      pos += pos & -pos;\n\n    }\n\n  }\n\n  // return sum of [0, i]\n\n  T GetSum(size_t pos) {\n\n    ++pos;\n\n    T sum = 0;\n\n    while (pos > 0) {\n\n      sum += node_[pos];\n\n      pos -= pos & -pos;\n\n    }\n\n    return sum;\n\n  }\n\n  // return sum of [left, rihgt]\n\n  T GetRangeSum(int left, int right) {\n\n    return GetSum(right) - GetSum(left - 1);\n\n  }\n\n  // for range add query\n\n  class RAQ {\n\n   public:\n\n    RAQ(const std::vector<T>& data)\n\n        : n_(data.size()),\n\n          ft1_(FenwickTree<T>(data)),\n\n          ft2_(FenwickTree<T>(data)) {}\n\n    // add range [left, right)\n\n    void RangeAdd(int left, int right, T value) {\n\n      Add(ft1_, left, right, value);\n\n      Add(ft2_, left, right, -value * static_cast<T>(left - 1));\n\n      Add(ft2_, right, n_, value * static_cast<T>(right - left));\n\n    }\n\n    // get sum of [0, i]\n\n    T GetSum(size_t pos) {\n\n      return ft1_.GetSum(pos) * static_cast<T>(pos) + ft2_.GetSum(pos);\n\n    }\n\n    // get sum of [left, right]\n\n    T GetRangeSum(int left, int right) {\n\n      return GetSum(right) - GetSum(left - 1);\n\n    }\n\n\n\n   private:\n\n    size_t n_;\n\n    FenwickTree<T> ft1_;\n\n    FenwickTree<T> ft2_;\n\n    void Add(FenwickTree<T>& ft, int left, int right, T value) {\n\n      ft.Add(left, value);\n\n      ft.Add(right, -value);\n\n    }\n\n  };\n\n\n\n private:\n\n  size_t n_;\n\n  std::vector<T> data_;\n\n  std::vector<T> node_;\n\n  void Initialize() {\n\n    node_.assign(n_ + 1, 0);\n\n    for (size_t i = 0; i < n_ - 1; ++i) Add(i, data_[i]);\n\n  }\n\n};\n\n\n\ntemplate<class T> inline void fastin(T &num) {\n\n  T c;\n\n  num = 0;\n\n  c = getchar_unlocked();\n\n  for (; (c > 47 && c < 58); c = getchar_unlocked()) num = (num << 3) + (num << 1) + c - 48;\n\n}\n\n\n\nint main() {\n\n  int n; fastin(n);\n\n  int64 k; fastin(k);\n\n  vector<int64> a(n);\n\n  for (int i = 0; i < n; ++i) {\n\n    fastin(a[i]);\n\n    a[i] -= k;\n\n  }\n\n\n\n  vector<int64> sum(n + 1, 0LL);\n\n  for (int i = 0; i < n; ++i) {\n\n    sum[i + 1] = sum[i] + a[i];\n\n  }\n\n\n\n  FenwickTree<int> ft(vector<int>(n + 1, 0));\n\n\n\n  CoodinateCompression<int64> cc(sum);\n\n  ft.Add(cc[0].after, 1);\n\n\n\n  int64 ans = 0;\n\n\n\n  for (int i = 1; i < n + 1; ++i) {\n\n    ans += static_cast<int64>(ft.GetSum(cc[i].after));\n\n    ft.Add(cc[i].after, 1);\n\n  }\n\n\n\n  printf(\"%lld\\n\", ans);\n\n\n\n  return 0;\n\n}\n"
    },
    {
        "id": "196",
        "source_code": "\n\n\n\n#include <iostream>\n\n#include <deque>\n\n#include <map>\n\n#include <queue>\n\n#include <set>\n\n#include <stack>\n\n#include <string>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <cmath>\n\n#include <complex>\n\n#include <numeric>\n\n#include <bitset>\n\n#include <cassert>\n\n#include <cctype>\n\n#include <iomanip>\n\n#include <random>\n\n#include <utility>\n\n#include <chrono>\n\n\n\nusing namespace std;\n\n\n\nusing int64 = long long;\n\ntemplate<class T> ostream& operator<<(ostream& os, vector<T>& _) { os << '{'; for (T& x : _) { os << x; if (&x != &_.back()) os << ','; } os << '}'; return os; }\n\ntemplate<class T, class U> ostream& operator<<(ostream& os, pair<T, U>& p) { return os << '{' << p.first << \" \" << p.second << '}'; }\n\n\n\n#ifdef LOCAL\n\n#define debug(_) cerr << #_ << \": \" << (_) << '\\n'\n\n#else\n\n#define debug(_) 1728\n\n#endif\n\n\n\ntemplate <class T>\n\nclass CoodinateCompression {\n\n public:\n\n  CoodinateCompression(const std::vector<T>& vec) : vec_(vec) {\n\n    result_.resize(vec_.size());\n\n    Compress();\n\n  }\n\n  struct state {\n\n    T before;\n\n    int after;\n\n  };\n\n  state operator[](int pos) const { return result_[pos]; }\n\n\n\n private:\n\n  std::vector<T> vec_;\n\n  std::vector<state> result_;\n\n  void Compress() {\n\n    std::vector<T> t = vec_;\n\n    std::sort(t.begin(), t.end());\n\n    t.erase(std::unique(t.begin(), t.end()), t.end());\n\n    for (size_t i = 0; i < vec_.size(); ++i) {\n\n      result_[i] = {vec_[i], static_cast<int>(std::distance(\n\n                                t.begin(),\n\n                                std::lower_bound(t.begin(), t.end(), vec_[i])))};\n\n    }\n\n  }\n\n};\n\n\n\ntemplate <class T>\n\nclass FenwickTree {\n\n public:\n\n  FenwickTree(const std::vector<T>& data) : n_(data.size() + 1), data_(data) {\n\n    Initialize();\n\n  }\n\n  void Add(size_t pos, T value) {\n\n    ++pos;\n\n    while (pos < n_) {\n\n      node_[pos] += value;\n\n      pos += pos & -pos;\n\n    }\n\n  }\n\n  // return sum of [0, i]\n\n  T GetSum(size_t pos) {\n\n    ++pos;\n\n    T sum = 0;\n\n    while (pos > 0) {\n\n      sum += node_[pos];\n\n      pos -= pos & -pos;\n\n    }\n\n    return sum;\n\n  }\n\n  // return sum of [left, rihgt]\n\n  T GetRangeSum(int left, int right) {\n\n    return GetSum(right) - GetSum(left - 1);\n\n  }\n\n  // for range add query\n\n  class RAQ {\n\n   public:\n\n    RAQ(const std::vector<T>& data)\n\n        : n_(data.size()),\n\n          ft1_(FenwickTree<T>(data)),\n\n          ft2_(FenwickTree<T>(data)) {}\n\n    // add range [left, right)\n\n    void RangeAdd(int left, int right, T value) {\n\n      Add(ft1_, left, right, value);\n\n      Add(ft2_, left, right, -value * static_cast<T>(left - 1));\n\n      Add(ft2_, right, n_, value * static_cast<T>(right - left));\n\n    }\n\n    // get sum of [0, i]\n\n    T GetSum(size_t pos) {\n\n      return ft1_.GetSum(pos) * static_cast<T>(pos) + ft2_.GetSum(pos);\n\n    }\n\n    // get sum of [left, right]\n\n    T GetRangeSum(int left, int right) {\n\n      return GetSum(right) - GetSum(left - 1);\n\n    }\n\n\n\n   private:\n\n    size_t n_;\n\n    FenwickTree<T> ft1_;\n\n    FenwickTree<T> ft2_;\n\n    void Add(FenwickTree<T>& ft, int left, int right, T value) {\n\n      ft.Add(left, value);\n\n      ft.Add(right, -value);\n\n    }\n\n  };\n\n\n\n private:\n\n  size_t n_;\n\n  std::vector<T> data_;\n\n  std::vector<T> node_;\n\n  void Initialize() {\n\n    node_.assign(n_ + 1, 0);\n\n    for (size_t i = 0; i < n_ - 1; ++i) Add(i, data_[i]);\n\n  }\n\n};\n\n\n\nint main() {\n\n  ios_base::sync_with_stdio(false);\n\n  cin.tie(nullptr);\n\n\n\n  int n; cin >> n;\n\n  int64 k; cin >> k;\n\n  vector<int64> a(n);\n\n  for (int i = 0; i < n; ++i) {\n\n    cin >> a[i];\n\n    a[i] -= k;\n\n  }\n\n\n\n  vector<int64> sum(n + 1, 0LL);\n\n  for (int i = 0; i < n; ++i) {\n\n    sum[i + 1] = sum[i] + a[i];\n\n  }\n\n\n\n  FenwickTree<int> ft(vector<int>(n + 1, 0));\n\n\n\n  CoodinateCompression<int64> cc(sum);\n\n  ft.Add(cc[0].after, 1);\n\n\n\n  int64 ans = 0;\n\n\n\n  for (int i = 1; i < n + 1; ++i) {\n\n    ans += static_cast<int64>(ft.GetSum(cc[i].after));\n\n    ft.Add(cc[i].after, 1);\n\n  }\n\n\n\n  cout << ans << endl;\n\n\n\n  return 0;\n\n}\n",
        "optimized_code": "\n\n\n\n#include <cstdio>\n\n#include <map>\n\n#include <string>\n\n#include <vector>\n\n#include <algorithm>\n\n#include <numeric>\n\n#include <cctype>\n\n#include <iomanip>\n\n#include <utility>\n\n\n\nusing namespace std;\n\n\n\nusing int64 = long long;\n\n\n\ntemplate <class T>\n\nclass CoodinateCompression {\n\n public:\n\n  CoodinateCompression(const std::vector<T>& vec) : vec_(vec) {\n\n    result_.resize(vec_.size());\n\n    Compress();\n\n  }\n\n  struct state {\n\n    T before;\n\n    int after;\n\n  };\n\n  state operator[](int pos) const { return result_[pos]; }\n\n\n\n private:\n\n  std::vector<T> vec_;\n\n  std::vector<state> result_;\n\n  void Compress() {\n\n    std::vector<T> t = vec_;\n\n    std::sort(t.begin(), t.end());\n\n    t.erase(std::unique(t.begin(), t.end()), t.end());\n\n    for (size_t i = 0; i < vec_.size(); ++i) {\n\n      result_[i] = {vec_[i], static_cast<int>(std::distance(\n\n                                t.begin(),\n\n                                std::lower_bound(t.begin(), t.end(), vec_[i])))};\n\n    }\n\n  }\n\n};\n\n\n\ntemplate <class T>\n\nclass FenwickTree {\n\n public:\n\n  FenwickTree(const std::vector<T>& data) : n_(data.size() + 1), data_(data) {\n\n    Initialize();\n\n  }\n\n  void Add(size_t pos, T value) {\n\n    ++pos;\n\n    while (pos < n_) {\n\n      node_[pos] += value;\n\n      pos += pos & -pos;\n\n    }\n\n  }\n\n  // return sum of [0, i]\n\n  T GetSum(size_t pos) {\n\n    ++pos;\n\n    T sum = 0;\n\n    while (pos > 0) {\n\n      sum += node_[pos];\n\n      pos -= pos & -pos;\n\n    }\n\n    return sum;\n\n  }\n\n  // return sum of [left, rihgt]\n\n  T GetRangeSum(int left, int right) {\n\n    return GetSum(right) - GetSum(left - 1);\n\n  }\n\n  // for range add query\n\n  class RAQ {\n\n   public:\n\n    RAQ(const std::vector<T>& data)\n\n        : n_(data.size()),\n\n          ft1_(FenwickTree<T>(data)),\n\n          ft2_(FenwickTree<T>(data)) {}\n\n    // add range [left, right)\n\n    void RangeAdd(int left, int right, T value) {\n\n      Add(ft1_, left, right, value);\n\n      Add(ft2_, left, right, -value * static_cast<T>(left - 1));\n\n      Add(ft2_, right, n_, value * static_cast<T>(right - left));\n\n    }\n\n    // get sum of [0, i]\n\n    T GetSum(size_t pos) {\n\n      return ft1_.GetSum(pos) * static_cast<T>(pos) + ft2_.GetSum(pos);\n\n    }\n\n    // get sum of [left, right]\n\n    T GetRangeSum(int left, int right) {\n\n      return GetSum(right) - GetSum(left - 1);\n\n    }\n\n\n\n   private:\n\n    size_t n_;\n\n    FenwickTree<T> ft1_;\n\n    FenwickTree<T> ft2_;\n\n    void Add(FenwickTree<T>& ft, int left, int right, T value) {\n\n      ft.Add(left, value);\n\n      ft.Add(right, -value);\n\n    }\n\n  };\n\n\n\n private:\n\n  size_t n_;\n\n  std::vector<T> data_;\n\n  std::vector<T> node_;\n\n  void Initialize() {\n\n    node_.assign(n_ + 1, 0);\n\n    for (size_t i = 0; i < n_ - 1; ++i) Add(i, data_[i]);\n\n  }\n\n};\n\n\n\ntemplate<class T> inline void fastin(T &num) {\n\n  T c;\n\n  num = 0;\n\n  c = getchar_unlocked();\n\n  for (; (c > 47 && c < 58); c = getchar_unlocked()) num = (num << 3) + (num << 1) + c - 48;\n\n}\n\n\n\nint main() {\n\n  int n; fastin(n);\n\n  int64 k; fastin(k);\n\n  vector<int64> a(n);\n\n  for (int i = 0; i < n; ++i) {\n\n    fastin(a[i]);\n\n    a[i] -= k;\n\n  }\n\n\n\n  vector<int64> sum(n + 1, 0LL);\n\n  for (int i = 0; i < n; ++i) {\n\n    sum[i + 1] = sum[i] + a[i];\n\n  }\n\n\n\n  FenwickTree<int> ft(vector<int>(n + 1, 0));\n\n\n\n  CoodinateCompression<int64> cc(sum);\n\n  ft.Add(cc[0].after, 1);\n\n\n\n  int64 ans = 0;\n\n\n\n  for (int i = 1; i < n + 1; ++i) {\n\n    ans += static_cast<int64>(ft.GetSum(cc[i].after));\n\n    ft.Add(cc[i].after, 1);\n\n  }\n\n\n\n  printf(\"%lld\\n\", ans);\n\n\n\n  return 0;\n\n}\n"
    }
]